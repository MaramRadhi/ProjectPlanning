{"ast":null,"code":"import { __assign } from '../_virtual/_tslib.js';\nimport * as React from 'react';\nimport { AuthContextConsumer } from '../AuthContext.js';\nimport { AuthKitError } from '../errors.js';\nimport { isAuthenticated } from '../utils/utils.js';\n\n/**\n * @function\n * @name withAuthUser\n * @description Inject Authenticated User's state inside the Component's Prop\n * @param Component\n */\nfunction withAuthUser(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (context) {\n      if (context === null) {\n        throw new AuthKitError('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      if (context.authState.auth && isAuthenticated(context.authState)) {\n        return React.createElement(Component, __assign({}, props, {\n          authState: context.authState.userState\n        }));\n      } else {\n        return React.createElement(Component, __assign({}, props, {\n          authState: null\n        }));\n      }\n    });\n  };\n}\nexport { withAuthUser as default };","map":{"version":3,"names":["withAuthUser","Component","props","React","createElement","AuthContextConsumer","context","AuthKitError","authState","auth","isAuthenticated","__assign","userState"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/react-auth-kit/src/higherOrderComponents/withAuthUser.tsx"],"sourcesContent":["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication User <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {AuthStateUserObject} from '../types';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n * @interface withAuthProps\n */\ninterface withAuthProps {\n    authState: AuthStateUserObject| null\n}\n\n/**\n * @function\n * @name withAuthUser\n * @description Inject Authenticated User's state inside the Component's Prop\n * @param Component\n */\nfunction withAuthUser<P extends withAuthProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props: P)=>{\n    return (\n      <AuthContextConsumer>\n        {(context) => {\n          if (context === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (context.authState.auth && isAuthenticated(context.authState)) {\n            return (\n              <Component {...props} authState={context.authState.userState}/>\n            );\n          } else {\n            return (\n              <Component {...props} authState={null}/>\n            );\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n/**\n * @exports withAuthUser\n */\nexport default withAuthUser;\n"],"mappings":";;;;;;AAgCA;;;;;AAKG;AACH,SAASA,YAAYA,CACjBC,SAAiC;EAEnC,OAAO,UAACC,KAAQ;IACd,OACEC,KAAA,CAAAC,aAAA,CAACC,mBAAmB,QACjB,UAACC,OAAO;MACP,IAAIA,OAAO,KAAK,IAAI,EAAE;QACpB,MAAM,IACNC,YAAY,CAAC,4BAA4B,GACvC,2CAA2C,CAAC;MAC/C;MACD,IAAID,OAAO,CAACE,SAAS,CAACC,IAAI,IAAIC,eAAe,CAACJ,OAAO,CAACE,SAAS,CAAC,EAAE;QAChE,OACEL,KAAA,CAAAC,aAAA,CAACH,SAAS,EAAAU,QAAA,KAAKT,KAAK,EAAE;UAAAM,SAAS,EAAEF,OAAO,CAACE,SAAS,CAACI;QAAS,GAAG;MAElE,OAAM;QACL,OACET,KAAC,CAAAC,aAAA,CAAAH,SAAS,EAAKU,QAAA,KAAAT,KAAK,EAAE;UAAAM,SAAS,EAAE;QAAI,CAAG;MAE3C;KACF,CACmB;EAE1B,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}