{"version":3,"file":"AuthProvider.js","sources":["../src/AuthProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport AuthContext from './AuthContext';\nimport TokenObject from './TokenObject';\nimport {AuthProviderProps} from './types';\nimport {authReducer, doRefresh} from './utils/reducers';\nimport {useInterval} from './utils/hooks';\nimport { AuthKitError } from './errors';\n\n\n/**\n * AuthProvider - The Authentication Context Provider\n *\n * @param children\n * @param authStorageName\n * @param cookieDomain\n * @param cookieSecure\n *\n * @return Functional Component\n */\nconst AuthProvider: React.FunctionComponent<AuthProviderProps> =\n  ({\n    children,\n    authType,\n    authName,\n    cookieDomain,\n    cookieSecure,\n    refresh,\n  }) => {\n    if (authType === 'cookie') {\n      if (!cookieDomain) {\n        throw new\n        AuthKitError('authType \\'cookie\\' ' +\n          'requires \\'cookieDomain\\' and \\'cookieSecure\\' ' +\n          'props in AuthProvider');\n      }\n    }\n\n    const refreshTokenName = refresh ? `${authName}_refresh` : null;\n\n    const tokenObject = new TokenObject(authName, authType,\n        refreshTokenName, cookieDomain, cookieSecure);\n\n    const [authState, dispatch] =\n      React.useReducer(authReducer, tokenObject.initialToken());\n\n    if (refresh) {\n      useInterval(\n          () => {\n            refresh\n              .refreshApiCallback({\n                authToken: authState.auth?.token,\n                authTokenExpireAt: authState.auth?.expiresAt,\n                authUserState: authState.userState,\n                refreshToken: authState.refresh?.token,\n                refreshTokenExpiresAt: authState.refresh?.expiresAt,\n              })\n              .then((result) => {\n                // IF the API call is successful then refresh the AUTH state\n                if (result.isSuccess) {\n                  // store the new value using the state update\n                  dispatch(doRefresh(result));\n                }\n                else {\n                  // do something in future\n                }\n              })\n              .catch(()=>{\n                // do something in future\n              });\n          },\n        authState.isSignIn ? refresh.interval : null,\n      );\n    }\n\n    React.useEffect(() => {\n      tokenObject.syncTokens(authState);\n    }, [authState]);\n\n    return (\n      <AuthContext.Provider value={{authState, dispatch}}>\n        {children}\n      </AuthContext.Provider>\n    );\n  };\n\nexport default AuthProvider;\n"],"names":[],"mappings":";;;;;;;AASA;;;;;;;;;AASG;AACG,IAAA,YAAY,GAChB,UAAC,EAOA,EAAA;AANC,IAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,EACR,QAAQ,GAAA,EAAA,CAAA,QAAA,EACR,QAAQ,GAAA,EAAA,CAAA,QAAA,EACR,YAAY,kBAAA,EACZ,YAAY,GAAA,EAAA,CAAA,YAAA,EACZ,OAAO,GAAA,EAAA,CAAA,OAAA,CAAA;IAEP,IAAI,QAAQ,KAAK,QAAQ,EAAE;QACzB,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM,IACN,YAAY,CAAC,sBAAsB;gBACjC,iDAAiD;AACjD,gBAAA,uBAAuB,CAAC,CAAC;AAC5B,SAAA;AACF,KAAA;AAED,IAAA,IAAM,gBAAgB,GAAG,OAAO,GAAG,EAAG,CAAA,MAAA,CAAA,QAAQ,EAAU,UAAA,CAAA,GAAG,IAAI,CAAC;AAEhE,IAAA,IAAM,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAClD,gBAAgB,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;AAE5C,IAAA,IAAA,KACJ,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,YAAY,EAAE,CAAC,EADpD,SAAS,QAAA,EAAE,QAAQ,QACiC,CAAC;AAE5D,IAAA,IAAI,OAAO,EAAE;AACX,QAAA,WAAW,CACP,YAAA;;YACE,OAAO;AACJ,iBAAA,kBAAkB,CAAC;AAClB,gBAAA,SAAS,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,IAAI,0CAAE,KAAK;AAChC,gBAAA,iBAAiB,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,IAAI,0CAAE,SAAS;gBAC5C,aAAa,EAAE,SAAS,CAAC,SAAS;AAClC,gBAAA,YAAY,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,OAAO,0CAAE,KAAK;AACtC,gBAAA,qBAAqB,EAAE,CAAA,EAAA,GAAA,SAAS,CAAC,OAAO,0CAAE,SAAS;aACpD,CAAC;iBACD,IAAI,CAAC,UAAC,MAAM,EAAA;;gBAEX,IAAI,MAAM,CAAC,SAAS,EAAE;;AAEpB,oBAAA,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7B,iBAGA;AACH,aAAC,CAAC;AACD,iBAAA,KAAK,CAAC,YAAA;;AAEP,aAAC,CAAC,CAAC;AACP,SAAC,EACH,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAC7C,CAAC;AACH,KAAA;IAED,KAAK,CAAC,SAAS,CAAC,YAAA;AACd,QAAA,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACpC,KAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AAEhB,IAAA,QACE,KAAC,CAAA,aAAA,CAAA,WAAW,CAAC,QAAQ,EAAA,EAAC,KAAK,EAAE,EAAC,SAAS,EAAA,SAAA,EAAE,QAAQ,EAAA,QAAA,EAAC,IAC/C,QAAQ,CACY,EACvB;AACJ;;;;"}