{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ActionList from '@mui/icons-material/List';\nimport { Link } from 'react-router-dom';\nimport { useResourceContext, useCreatePath } from 'ra-core';\nimport { Button } from './Button';\n/**\n * Opens the List view of a given resource\n *\n * @example // basic usage\n * import { ListButton } from 'react-admin';\n *\n * const CommentListButton = () => (\n *     <ListButton label=\"Comments\" />\n * );\n *\n * @example // linking back to the list from the Edit view\n * import { TopToolbar, ListButton, ShowButton, Edit } from 'react-admin';\n *\n * const PostEditActions = () => (\n *     <TopToolbar>\n *         <ListButton />\n *         <ShowButton />\n *     </TopToolbar>\n * );\n *\n * export const PostEdit = (props) => (\n *     <Edit actions={<PostEditActions />} {...props}>\n *         ...\n *     </Edit>\n * );\n */\nexport var ListButton = function (props) {\n  var _a = props.icon,\n    icon = _a === void 0 ? defaultIcon : _a,\n    _b = props.label,\n    label = _b === void 0 ? 'ra.action.list' : _b,\n    resourceProp = props.resource,\n    _c = props.scrollToTop,\n    scrollToTop = _c === void 0 ? true : _c,\n    rest = __rest(props, [\"icon\", \"label\", \"resource\", \"scrollToTop\"]);\n  var resource = useResourceContext(props);\n  var createPath = useCreatePath();\n  return React.createElement(Button, __assign({\n    component: Link,\n    to: createPath({\n      type: 'list',\n      resource: resource\n    }),\n    state: scrollStates[String(scrollToTop)],\n    label: label\n  }, rest), icon);\n};\n// avoids using useMemo to get a constant value for the link state\nvar scrollStates = {\n  true: {\n    _scrollToTop: true\n  },\n  false: {}\n};\nvar defaultIcon = React.createElement(ActionList, null);\nListButton.propTypes = {\n  icon: PropTypes.element,\n  label: PropTypes.string\n};","map":{"version":3,"names":["React","PropTypes","ActionList","Link","useResourceContext","useCreatePath","Button","ListButton","props","_a","icon","defaultIcon","_b","label","resourceProp","resource","_c","scrollToTop","rest","__rest","createPath","createElement","__assign","component","to","type","state","scrollStates","String","true","_scrollToTop","false","propTypes","element","string"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/button/ListButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionList from '@mui/icons-material/List';\nimport { Link } from 'react-router-dom';\nimport { useResourceContext, useCreatePath } from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the List view of a given resource\n *\n * @example // basic usage\n * import { ListButton } from 'react-admin';\n *\n * const CommentListButton = () => (\n *     <ListButton label=\"Comments\" />\n * );\n *\n * @example // linking back to the list from the Edit view\n * import { TopToolbar, ListButton, ShowButton, Edit } from 'react-admin';\n *\n * const PostEditActions = () => (\n *     <TopToolbar>\n *         <ListButton />\n *         <ShowButton />\n *     </TopToolbar>\n * );\n *\n * export const PostEdit = (props) => (\n *     <Edit actions={<PostEditActions />} {...props}>\n *         ...\n *     </Edit>\n * );\n */\nexport const ListButton = (props: ListButtonProps) => {\n    const {\n        icon = defaultIcon,\n        label = 'ra.action.list',\n        resource: resourceProp,\n        scrollToTop = true,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n    return (\n        <Button\n            component={Link}\n            to={createPath({ type: 'list', resource })}\n            state={scrollStates[String(scrollToTop)]}\n            label={label}\n            {...(rest as any)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ActionList />;\n\ninterface Props {\n    icon?: ReactElement;\n    label?: string;\n    resource?: string;\n    scrollToTop?: boolean;\n}\n\nexport type ListButtonProps = Props & ButtonProps;\n\nListButton.propTypes = {\n    icon: PropTypes.element,\n    label: PropTypes.string,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,kBAAkB,EAAEC,aAAa,QAAQ,SAAS;AAE3D,SAASC,MAAM,QAAqB,UAAU;AAE9C;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAO,IAAMC,UAAU,GAAG,SAAAA,CAACC,KAAsB;EAEzC,IAAAC,EAAA,GAKAD,KAAK,CAAAE,IALa;IAAlBA,IAAI,GAAAD,EAAA,cAAGE,WAAW,GAAAF,EAAA;IAClBG,EAAA,GAIAJ,KAAK,CAAAK,KAJmB;IAAxBA,KAAK,GAAAD,EAAA,cAAG,gBAAgB,GAAAA,EAAA;IACdE,YAAY,GAGtBN,KAAK,CAAAO,QAHiB;IACtBC,EAAA,GAEAR,KAAK,CAAAS,WAFa;IAAlBA,WAAW,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IACfE,IAAI,GAAAC,MAAA,CACPX,KAAK,EANH,4CAML,CADU;EAEX,IAAMO,QAAQ,GAAGX,kBAAkB,CAACI,KAAK,CAAC;EAC1C,IAAMY,UAAU,GAAGf,aAAa,EAAE;EAClC,OACIL,KAAA,CAAAqB,aAAA,CAACf,MAAM,EAAAgB,QAAA;IACHC,SAAS,EAAEpB,IAAI;IACfqB,EAAE,EAAEJ,UAAU,CAAC;MAAEK,IAAI,EAAE,MAAM;MAAEV,QAAQ,EAAAA;IAAA,CAAE,CAAC;IAC1CW,KAAK,EAAEC,YAAY,CAACC,MAAM,CAACX,WAAW,CAAC,CAAC;IACxCJ,KAAK,EAAEA;EAAK,GACPK,IAAY,GAEhBR,IAAI,CACA;AAEjB,CAAC;AAED;AACA,IAAMiB,YAAY,GAAG;EACjBE,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAI,CAAE;EAC5BC,KAAK,EAAE;CACV;AAED,IAAMpB,WAAW,GAAGX,KAAA,CAAAqB,aAAA,CAACnB,UAAU,OAAG;AAWlCK,UAAU,CAACyB,SAAS,GAAG;EACnBtB,IAAI,EAAET,SAAS,CAACgC,OAAO;EACvBpB,KAAK,EAAEZ,SAAS,CAACiC;CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}