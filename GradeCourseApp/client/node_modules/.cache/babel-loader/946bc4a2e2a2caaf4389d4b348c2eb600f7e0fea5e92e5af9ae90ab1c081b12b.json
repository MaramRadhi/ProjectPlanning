{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useShowController } from './useShowController';\nimport { ShowContextProvider } from './ShowContextProvider';\nimport { ResourceContextProvider } from '../../core';\n/**\n * Call useShowController and put the value in a ShowContext\n *\n * Base class for <Show> components, without UI.\n *\n * Accepts any props accepted by useShowController:\n * - id: The record identifier\n * - resource: The resource\n *\n * @example // Custom show layout\n *\n * const PostShow = () => (\n *     <ShowBase resource=\"posts\">\n *         <Grid container>\n *             <Grid item xs={8}>\n *                 <SimpleForm>\n *                     ...\n *                 </SimpleForm>\n *             </Grid>\n *             <Grid item xs={4}>\n *                 Show instructions...\n *             </Grid>\n *         </Grid>\n *         <div>\n *             Post related links...\n *         </div>\n *     </ShowBase>\n * );\n */\nexport var ShowBase = function (_a) {\n  var children = _a.children,\n    props = __rest(_a, [\"children\"]);\n  var controllerProps = useShowController(props);\n  var body = React.createElement(ShowContextProvider, {\n    value: controllerProps\n  }, children);\n  return props.resource ?\n  // support resource override via props\n  React.createElement(ResourceContextProvider, {\n    value: props.resource\n  }, body) : body;\n};","map":{"version":3,"names":["React","useShowController","ShowContextProvider","ResourceContextProvider","ShowBase","_a","children","props","__rest","controllerProps","body","createElement","value","resource"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/controller/show/ShowBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement } from 'react';\n\nimport { RaRecord } from '../../types';\nimport { useShowController, ShowControllerProps } from './useShowController';\nimport { ShowContextProvider } from './ShowContextProvider';\nimport { ResourceContextProvider } from '../../core';\n\n/**\n * Call useShowController and put the value in a ShowContext\n *\n * Base class for <Show> components, without UI.\n *\n * Accepts any props accepted by useShowController:\n * - id: The record identifier\n * - resource: The resource\n *\n * @example // Custom show layout\n *\n * const PostShow = () => (\n *     <ShowBase resource=\"posts\">\n *         <Grid container>\n *             <Grid item xs={8}>\n *                 <SimpleForm>\n *                     ...\n *                 </SimpleForm>\n *             </Grid>\n *             <Grid item xs={4}>\n *                 Show instructions...\n *             </Grid>\n *         </Grid>\n *         <div>\n *             Post related links...\n *         </div>\n *     </ShowBase>\n * );\n */\nexport const ShowBase = <RecordType extends RaRecord = any>({\n    children,\n    ...props\n}: { children: ReactElement } & ShowControllerProps<RecordType>) => {\n    const controllerProps = useShowController<RecordType>(props);\n    const body = (\n        <ShowContextProvider value={controllerProps}>\n            {children}\n        </ShowContextProvider>\n    );\n    return props.resource ? (\n        // support resource override via props\n        <ResourceContextProvider value={props.resource}>\n            {body}\n        </ResourceContextProvider>\n    ) : (\n        body\n    );\n};\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B,SAASC,iBAAiB,QAA6B,qBAAqB;AAC5E,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,uBAAuB,QAAQ,YAAY;AAEpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAO,IAAMC,QAAQ,GAAG,SAAAA,CAAoCC,EAGG;EAF3D,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACLC,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAFgD,YAG3D,CADW;EAER,IAAMI,eAAe,GAAGR,iBAAiB,CAAaM,KAAK,CAAC;EAC5D,IAAMG,IAAI,GACNV,KAAA,CAAAW,aAAA,CAACT,mBAAmB;IAACU,KAAK,EAAEH;EAAe,GACtCH,QAAQ,CAEhB;EACD,OAAOC,KAAK,CAACM,QAAQ;EACjB;EACAb,KAAA,CAAAW,aAAA,CAACR,uBAAuB;IAACS,KAAK,EAAEL,KAAK,CAACM;EAAQ,GACzCH,IAAI,CACiB,GAE1BA,IACH;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}