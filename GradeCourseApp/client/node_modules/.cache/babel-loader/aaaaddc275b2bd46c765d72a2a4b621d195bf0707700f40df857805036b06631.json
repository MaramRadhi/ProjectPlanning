{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Tooltip, Typography } from '@mui/material';\nimport { useTranslate, useRecordContext } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nexport var BooleanField = memo(function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    valueLabelTrue = props.valueLabelTrue,\n    valueLabelFalse = props.valueLabelFalse,\n    _a = props.TrueIcon,\n    TrueIcon = _a === void 0 ? DoneIcon : _a,\n    _b = props.FalseIcon,\n    FalseIcon = _b === void 0 ? ClearIcon : _b,\n    _c = props.looseValue,\n    looseValue = _c === void 0 ? false : _c,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"valueLabelTrue\", \"valueLabelFalse\", \"TrueIcon\", \"FalseIcon\", \"looseValue\"]);\n  var record = useRecordContext(props);\n  var translate = useTranslate();\n  var value = get(record, source);\n  var isTruthyValue = value === true || looseValue && value;\n  var ariaLabel = value ? valueLabelTrue : valueLabelFalse;\n  if (!ariaLabel) {\n    ariaLabel = isTruthyValue ? 'ra.boolean.true' : 'ra.boolean.false';\n  }\n  if (looseValue || value === false || value === true) {\n    return React.createElement(StyledTypography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), React.createElement(Tooltip, {\n      title: translate(ariaLabel, {\n        _: ariaLabel\n      })\n    }, isTruthyValue ? TrueIcon ? React.createElement(TrueIcon, {\n      \"data-testid\": \"true\",\n      fontSize: \"small\"\n    }) : React.createElement(React.Fragment, null) : FalseIcon ? React.createElement(FalseIcon, {\n      \"data-testid\": \"false\",\n      fontSize: \"small\"\n    }) : React.createElement(React.Fragment, null)));\n  }\n  return React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body2\",\n    className: className\n  }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n    _: emptyText\n  }));\n});\nBooleanField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  valueLabelFalse: PropTypes.string,\n  valueLabelTrue: PropTypes.string,\n  TrueIcon: PropTypes.elementType,\n  FalseIcon: PropTypes.elementType,\n  looseValue: PropTypes.bool\n});\nBooleanField.displayName = 'BooleanField';\nvar PREFIX = 'RaBooleanField';\nvar StyledTypography = styled(Typography, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})({\n  display: 'inline-flex',\n  verticalAlign: 'middle',\n  lineHeight: 0\n});","map":{"version":3,"names":["React","styled","memo","PropTypes","get","DoneIcon","ClearIcon","Tooltip","Typography","useTranslate","useRecordContext","fieldPropTypes","sanitizeFieldRestProps","BooleanField","props","className","emptyText","source","valueLabelTrue","valueLabelFalse","_a","TrueIcon","_b","FalseIcon","_c","looseValue","rest","__rest","record","translate","value","isTruthyValue","ariaLabel","createElement","StyledTypography","__assign","component","variant","title","_","fontSize","Fragment","propTypes","string","elementType","bool","displayName","PREFIX","name","overridesResolver","styles","root","display","verticalAlign","lineHeight"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/field/BooleanField.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo, FunctionComponent } from 'react';\nimport { SvgIconComponent } from '@mui/icons-material';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Tooltip, Typography, TypographyProps } from '@mui/material';\nimport { useTranslate, useRecordContext } from 'ra-core';\n\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\n\nexport const BooleanField: FunctionComponent<BooleanFieldProps> = memo(\n    props => {\n        const {\n            className,\n            emptyText,\n            source,\n            valueLabelTrue,\n            valueLabelFalse,\n            TrueIcon = DoneIcon,\n            FalseIcon = ClearIcon,\n            looseValue = false,\n            ...rest\n        } = props;\n        const record = useRecordContext(props);\n        const translate = useTranslate();\n\n        const value = get(record, source);\n        const isTruthyValue = value === true || (looseValue && value);\n        let ariaLabel = value ? valueLabelTrue : valueLabelFalse;\n\n        if (!ariaLabel) {\n            ariaLabel = isTruthyValue ? 'ra.boolean.true' : 'ra.boolean.false';\n        }\n\n        if (looseValue || value === false || value === true) {\n            return (\n                <StyledTypography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={className}\n                    {...sanitizeFieldRestProps(rest)}\n                >\n                    <Tooltip title={translate(ariaLabel, { _: ariaLabel })}>\n                        {isTruthyValue ? (\n                            TrueIcon ? (\n                                <TrueIcon data-testid=\"true\" fontSize=\"small\" />\n                            ) : (\n                                <></>\n                            )\n                        ) : FalseIcon ? (\n                            <FalseIcon data-testid=\"false\" fontSize=\"small\" />\n                        ) : (\n                            <></>\n                        )}\n                    </Tooltip>\n                </StyledTypography>\n            );\n        }\n\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText && translate(emptyText, { _: emptyText })}\n            </Typography>\n        );\n    }\n);\n\nBooleanField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    valueLabelFalse: PropTypes.string,\n    valueLabelTrue: PropTypes.string,\n    TrueIcon: PropTypes.elementType,\n    FalseIcon: PropTypes.elementType,\n    looseValue: PropTypes.bool,\n};\n\nBooleanField.displayName = 'BooleanField';\n\nexport interface BooleanFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {\n    valueLabelTrue?: string;\n    valueLabelFalse?: string;\n    TrueIcon?: SvgIconComponent | null;\n    FalseIcon?: SvgIconComponent | null;\n    looseValue?: boolean;\n}\n\nconst PREFIX = 'RaBooleanField';\n\nconst StyledTypography = styled(Typography, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    display: 'inline-flex',\n    verticalAlign: 'middle',\n    lineHeight: 0,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}