{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nexport var TabbedShowLayoutTabs = function (_a) {\n  var children = _a.children,\n    syncWithLocation = _a.syncWithLocation,\n    value = _a.value,\n    rest = __rest(_a, [\"children\", \"syncWithLocation\", \"value\"]);\n  var params = useParams();\n  // params will include eventual parameters from the root pathname and * for the remaining part\n  // which should match the tabs paths\n  var tabValue = params['*'];\n  return React.createElement(Tabs, __assign({\n    indicatorColor: \"primary\",\n    value: syncWithLocation ? tabValue : value\n  }, rest), Children.map(children, function (tab, index) {\n    if (!tab || !isValidElement(tab)) return null;\n    // Builds the full tab which is the concatenation of the last matched route in the\n    // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n    // and the tab path.\n    // This will be used as the Tab's value\n    var tabPath = getShowLayoutTabFullPath(tab, index);\n    return cloneElement(tab, {\n      context: 'header',\n      value: syncWithLocation ? tabPath : index,\n      syncWithLocation: syncWithLocation\n    });\n  }));\n};\nexport var getShowLayoutTabFullPath = function (tab, index) {\n  return \"\".concat(tab.props.path ? \"\".concat(tab.props.path) : index > 0 ? index : '');\n};\nTabbedShowLayoutTabs.propTypes = {\n  children: PropTypes.node\n};","map":{"version":3,"names":["React","Children","cloneElement","isValidElement","PropTypes","Tabs","useParams","TabbedShowLayoutTabs","_a","children","syncWithLocation","value","rest","__rest","params","tabValue","createElement","__assign","indicatorColor","map","tab","index","tabPath","getShowLayoutTabFullPath","context","concat","props","path","propTypes","node"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/detail/TabbedShowLayoutTabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Children, cloneElement, ReactElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nimport { TabProps } from './Tab';\n\nexport const TabbedShowLayoutTabs = ({\n    children,\n    syncWithLocation,\n    value,\n    ...rest\n}: TabbedShowLayoutTabsProps) => {\n    const params = useParams();\n\n    // params will include eventual parameters from the root pathname and * for the remaining part\n    // which should match the tabs paths\n    const tabValue = params['*'];\n\n    return (\n        <Tabs\n            indicatorColor=\"primary\"\n            value={syncWithLocation ? tabValue : value}\n            {...rest}\n        >\n            {Children.map(children, (tab, index) => {\n                if (!tab || !isValidElement(tab)) return null;\n                // Builds the full tab which is the concatenation of the last matched route in the\n                // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n                // and the tab path.\n                // This will be used as the Tab's value\n                const tabPath = getShowLayoutTabFullPath(tab, index);\n\n                return cloneElement(tab, {\n                    context: 'header',\n                    value: syncWithLocation ? tabPath : index,\n                    syncWithLocation,\n                });\n            })}\n        </Tabs>\n    );\n};\n\nexport const getShowLayoutTabFullPath = (tab, index) =>\n    `${tab.props.path ? `${tab.props.path}` : index > 0 ? index : ''}`;\n\nexport interface TabbedShowLayoutTabsProps extends TabsProps {\n    children?: ReactElement<TabProps>;\n    syncWithLocation?: boolean;\n}\n\nTabbedShowLayoutTabs.propTypes = {\n    children: PropTypes.node,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,YAAY,EAAgBC,cAAc,QAAQ,OAAO;AAC5E,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAmB,MAAM,oBAAoB;AACpD,SAASC,SAAS,QAAQ,kBAAkB;AAG5C,OAAO,IAAMC,oBAAoB,GAAG,SAAAA,CAACC,EAKT;EAJxB,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,gBAAgB,GAAAF,EAAA,CAAAE,gBAAA;IAChBC,KAAK,GAAAH,EAAA,CAAAG,KAAA;IACFC,IAAI,GAAAC,MAAA,CAAAL,EAAA,EAJ0B,yCAKpC,CADU;EAEP,IAAMM,MAAM,GAAGR,SAAS,EAAE;EAE1B;EACA;EACA,IAAMS,QAAQ,GAAGD,MAAM,CAAC,GAAG,CAAC;EAE5B,OACId,KAAA,CAAAgB,aAAA,CAACX,IAAI,EAAAY,QAAA;IACDC,cAAc,EAAC,SAAS;IACxBP,KAAK,EAAED,gBAAgB,GAAGK,QAAQ,GAAGJ;EAAK,GACtCC,IAAI,GAEPX,QAAQ,CAACkB,GAAG,CAACV,QAAQ,EAAE,UAACW,GAAG,EAAEC,KAAK;IAC/B,IAAI,CAACD,GAAG,IAAI,CAACjB,cAAc,CAACiB,GAAG,CAAC,EAAE,OAAO,IAAI;IAC7C;IACA;IACA;IACA;IACA,IAAME,OAAO,GAAGC,wBAAwB,CAACH,GAAG,EAAEC,KAAK,CAAC;IAEpD,OAAOnB,YAAY,CAACkB,GAAG,EAAE;MACrBI,OAAO,EAAE,QAAQ;MACjBb,KAAK,EAAED,gBAAgB,GAAGY,OAAO,GAAGD,KAAK;MACzCX,gBAAgB,EAAAA;KACnB,CAAC;EACN,CAAC,CAAC,CACC;AAEf,CAAC;AAED,OAAO,IAAMa,wBAAwB,GAAG,SAAAA,CAACH,GAAG,EAAEC,KAAK;EAC/C,UAAAI,MAAA,CAAGL,GAAG,CAACM,KAAK,CAACC,IAAI,GAAG,GAAAF,MAAA,CAAGL,GAAG,CAACM,KAAK,CAACC,IAAI,CAAE,GAAGN,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,EAAE,CAAE;AAAlE,CAAkE;AAOtEd,oBAAoB,CAACqB,SAAS,GAAG;EAC7BnB,QAAQ,EAAEL,SAAS,CAACyB;CACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}