{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport { CreateContext } from './CreateContext';\n/**\n * Hook to read the create controller props from the CreateContext.\n *\n * Mostly used within a <CreateContext.Provider> (e.g. as a descendent of <Create>).\n *\n * But you can also use it without a <CreateContext.Provider>. In this case, it is up to you\n * to pass all the necessary props.\n *\n * The given props will take precedence over context values.\n *\n * @typedef {Object} CreateControllerProps\n *\n * @returns {CreateControllerResult} create controller props\n *\n * @see useCreateController for how it is filled\n *\n */\nexport var useCreateContext = function (props) {\n  var context = useContext(\n  // Can't find a way to specify the RecordType when CreateContext is declared\n  // @ts-ignore\n  CreateContext);\n  // Props take precedence over the context\n  return useMemo(function () {\n    return defaults({}, props != null ? extractCreateContextProps(props) : {}, context);\n  }, [context, props]);\n};\n/**\n * Extract only the create controller props\n *\n * @param {Object} props props passed to the useCreateContext hook\n *\n * @returns {CreateControllerResult} create controller props\n */\nvar extractCreateContextProps = function (_a) {\n  var record = _a.record,\n    defaultTitle = _a.defaultTitle,\n    isFetching = _a.isFetching,\n    isLoading = _a.isLoading,\n    redirect = _a.redirect,\n    resource = _a.resource,\n    save = _a.save,\n    saving = _a.saving;\n  return {\n    record: record,\n    defaultTitle: defaultTitle,\n    isFetching: isFetching,\n    isLoading: isLoading,\n    redirect: redirect,\n    resource: resource,\n    save: save,\n    saving: saving\n  };\n};","map":{"version":3,"names":["useContext","useMemo","defaults","CreateContext","useCreateContext","props","context","extractCreateContextProps","_a","record","defaultTitle","isFetching","isLoading","redirect","resource","save","saving"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/controller/create/useCreateContext.tsx"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\n\nimport { RaRecord } from '../../types';\nimport { CreateContext } from './CreateContext';\nimport { CreateControllerResult } from './useCreateController';\n\n/**\n * Hook to read the create controller props from the CreateContext.\n *\n * Mostly used within a <CreateContext.Provider> (e.g. as a descendent of <Create>).\n *\n * But you can also use it without a <CreateContext.Provider>. In this case, it is up to you\n * to pass all the necessary props.\n *\n * The given props will take precedence over context values.\n *\n * @typedef {Object} CreateControllerProps\n *\n * @returns {CreateControllerResult} create controller props\n *\n * @see useCreateController for how it is filled\n *\n */\nexport const useCreateContext = <RecordType extends RaRecord = RaRecord>(\n    props?: Partial<CreateControllerResult<RecordType>>\n): CreateControllerResult<RecordType> => {\n    const context = useContext<CreateControllerResult<RecordType>>(\n        // Can't find a way to specify the RecordType when CreateContext is declared\n        // @ts-ignore\n        CreateContext\n    );\n    // Props take precedence over the context\n    return useMemo(\n        () =>\n            defaults(\n                {},\n                props != null ? extractCreateContextProps(props) : {},\n                context\n            ),\n        [context, props]\n    );\n};\n\n/**\n * Extract only the create controller props\n *\n * @param {Object} props props passed to the useCreateContext hook\n *\n * @returns {CreateControllerResult} create controller props\n */\nconst extractCreateContextProps = ({\n    record,\n    defaultTitle,\n    isFetching,\n    isLoading,\n    redirect,\n    resource,\n    save,\n    saving,\n}: any) => ({\n    record,\n    defaultTitle,\n    isFetching,\n    isLoading,\n    redirect,\n    resource,\n    save,\n    saving,\n});\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,iBAAiB;AAGtC,SAASC,aAAa,QAAQ,iBAAiB;AAG/C;;;;;;;;;;;;;;;;;AAiBA,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAC5BC,KAAmD;EAEnD,IAAMC,OAAO,GAAGN,UAAU;EACtB;EACA;EACAG,aAAa,CAChB;EACD;EACA,OAAOF,OAAO,CACV;IACI,OAAAC,QAAQ,CACJ,EAAE,EACFG,KAAK,IAAI,IAAI,GAAGE,yBAAyB,CAACF,KAAK,CAAC,GAAG,EAAE,EACrDC,OAAO,CACV;EAJD,CAIC,EACL,CAACA,OAAO,EAAED,KAAK,CAAC,CACnB;AACL,CAAC;AAED;;;;;;;AAOA,IAAME,yBAAyB,GAAG,SAAAA,CAACC,EAS7B;MARFC,MAAM,GAAAD,EAAA,CAAAC,MAAA;IACNC,YAAY,GAAAF,EAAA,CAAAE,YAAA;IACZC,UAAU,GAAAH,EAAA,CAAAG,UAAA;IACVC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IACTC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;IACRC,QAAQ,GAAAN,EAAA,CAAAM,QAAA;IACRC,IAAI,GAAAP,EAAA,CAAAO,IAAA;IACJC,MAAM,GAAAR,EAAA,CAAAQ,MAAA;EACC,OAAC;IACRP,MAAM,EAAAA,MAAA;IACNC,YAAY,EAAAA,YAAA;IACZC,UAAU,EAAAA,UAAA;IACVC,SAAS,EAAAA,SAAA;IACTC,QAAQ,EAAAA,QAAA;IACRC,QAAQ,EAAAA,QAAA;IACRC,IAAI,EAAAA,IAAA;IACJC,MAAM,EAAAA;GACT;AATU,CAST"},"metadata":{},"sourceType":"module","externalDependencies":[]}