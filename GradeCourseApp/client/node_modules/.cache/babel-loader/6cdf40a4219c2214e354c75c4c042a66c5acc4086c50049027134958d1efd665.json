{"ast":null,"code":"var _jsxFileName = \"/Users/imrun10/Documents/GitHub/GradeCourseApp/client/src/pages/signIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // import the useNavigate function from react-router-dom that will help us route to other pages and pass data as we do it\nimport './signin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn() {\n  _s();\n  const navigate = useNavigate(); // intiales an instance of the useNavigate function and use this instance to route\n  const [accountData, getAccountData] = useState([]);\n  let userType = -1;\n  const toApp = () => {\n    navigate('App'); // take us to the App page\n  };\n\n  //Pages for different types...\n  const toInstructorPage = () => toApp();\n  const toLeadPage = () => toApp();\n  const toAdminPage = () => toApp();\n  const toRegistrarPage = () => toApp();\n  const checkLoginInformation = () => {\n    //Get account data from database\n    Axios.get(\"http://localhost:3001/api/accountData/\").then(response => {\n      getAccountData(response.data);\n    });\n    //Get entered email and password\n    const enteredEmail = document.getElementsByTagName(\"input\")[0].value;\n    const enteredPassword = document.getElementsByTagName(\"input\")[1].value;\n    let found = false;\n    for (var i = 0; i < accountData.length; i++) {\n      //Check if an account with the entered email address exists in database\n      if (accountData[i].account_email === enteredEmail) {\n        //if the pasword is correct for this account, go to the next page\n        if (accountData[i].account_password === enteredPassword) {\n          userType = accountData[i].account_type;\n          switch (userType) {\n            case 1:\n              toAdminPage();\n              break;\n            //IT\n            case 2:\n              toInstructorPage();\n              break;\n            //Instructor\n            case 3:\n              toLeadPage();\n              break;\n            //Project Lead\n            case 4:\n              toRegistrarPage();\n              break;\n            //Registrar\n          }\n\n          found = true;\n        }\n      }\n    }\n    if (!found) {\n      alert(\"Incorrect email or password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"colm-form\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Email address or phone number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn-login\",\n                onClick: () => {\n                  checkLoginInformation();\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Forgotten password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"pqW1ngOW9gZZDUXJre6YkkTJwWo=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","Axios","useNavigate","jsxDEV","_jsxDEV","SignIn","_s","navigate","accountData","getAccountData","userType","toApp","toInstructorPage","toLeadPage","toAdminPage","toRegistrarPage","checkLoginInformation","get","then","response","data","enteredEmail","document","getElementsByTagName","value","enteredPassword","found","i","length","account_email","account_password","account_type","alert","children","class","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","_c","$RefreshReg$"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/src/pages/signIn.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // import the useNavigate function from react-router-dom that will help us route to other pages and pass data as we do it\nimport './signin.css'\n\nfunction SignIn() {\n  const navigate = useNavigate(); // intiales an instance of the useNavigate function and use this instance to route\n  const [accountData, getAccountData] = useState([]);\n\n  let userType = -1;\n\n  const toApp = () =>{  \n    navigate('App'); // take us to the App page\n  }\n\n  //Pages for different types...\n  const toInstructorPage = () => toApp();\n  const toLeadPage = () => toApp();\n  const toAdminPage = () => toApp();\n  const toRegistrarPage = () => toApp();\n\n  const checkLoginInformation=()=>{\n    //Get account data from database\n    Axios.get(\"http://localhost:3001/api/accountData/\").then((response) => {\n      getAccountData(response.data);\n    });\n    //Get entered email and password\n    const enteredEmail = document.getElementsByTagName(\"input\")[0].value;\n    const enteredPassword = document.getElementsByTagName(\"input\")[1].value;\n    let found = false;\n    for (var i = 0; i < accountData.length; i++) {\n      //Check if an account with the entered email address exists in database\n      if (accountData[i].account_email === enteredEmail) {\n        //if the pasword is correct for this account, go to the next page\n        if (accountData[i].account_password === enteredPassword) {\n          userType = accountData[i].account_type;\n          switch (userType) {\n            case 1: toAdminPage(); break; //IT\n            case 2: toInstructorPage(); break; //Instructor\n            case 3: toLeadPage(); break; //Project Lead\n            case 4: toRegistrarPage(); break; //Registrar\n          }\n          found = true;\n        }\n      }\n    }\n    if (!found) {\n      alert(\"Incorrect email or password\");\n    }\n  };\n  \n  return(\n    <div>\n      <body>\n        <main>\n          <div class=\"row\">\n            <div class=\"colm-form\">\n              <div class=\"form-container\">\n                <input type=\"text\" placeholder=\"Email address or phone number\" />\n                  <input type=\"password\" placeholder=\"Password\" />\n                    <button class=\"btn-login\" onClick={() => {checkLoginInformation()}} >{/*when the user click on the login button it will call the toApp function*/} \n                      Login\n                    </button>\n                    <a href=\"#\">Forgotten password?</a>\n                  </div>\n              </div>\n            </div>\n        </main>\n\n      </body>\n    </div>\n  )}\n  \nexport default SignIn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}