{"ast":null,"code":"import { useStore } from '../store/useStore';\nimport { usePreferenceKey } from './PreferenceKeyContext';\n/**\n * Get a preference value from the store\n *\n * Relies on the store, using a key namespaced with the preference key from the PreferenceKeyContext\n * @example\n *\n * // when used inside a PreferenceKeyContext of value 'my-app'\n * const [theme, setTheme] = usePreference('theme', 'light');\n * // this is equivalent to\n * const [theme, setTheme] = useStore('my-app.theme', 'light');\n */\nexport var usePreference = function (key, defaultValue) {\n  var preferenceKey = usePreferenceKey();\n  return useStore(preferenceKey && key ? \"\".concat(preferenceKey, \".\").concat(key) : preferenceKey !== null && preferenceKey !== void 0 ? preferenceKey : key, defaultValue);\n};","map":{"version":3,"names":["useStore","usePreferenceKey","usePreference","key","defaultValue","preferenceKey","concat"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/preferences/usePreference.ts"],"sourcesContent":["import { useStore } from '../store/useStore';\nimport { usePreferenceKey } from './PreferenceKeyContext';\n\n/**\n * Get a preference value from the store\n *\n * Relies on the store, using a key namespaced with the preference key from the PreferenceKeyContext\n * @example\n *\n * // when used inside a PreferenceKeyContext of value 'my-app'\n * const [theme, setTheme] = usePreference('theme', 'light');\n * // this is equivalent to\n * const [theme, setTheme] = useStore('my-app.theme', 'light');\n */\nexport const usePreference = <T = any>(key?: string, defaultValue?: T) => {\n    const preferenceKey = usePreferenceKey();\n    return useStore<T>(\n        preferenceKey && key ? `${preferenceKey}.${key}` : preferenceKey ?? key,\n        defaultValue\n    );\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,gBAAgB,QAAQ,wBAAwB;AAEzD;;;;;;;;;;;AAWA,OAAO,IAAMC,aAAa,GAAG,SAAAA,CAAUC,GAAY,EAAEC,YAAgB;EACjE,IAAMC,aAAa,GAAGJ,gBAAgB,EAAE;EACxC,OAAOD,QAAQ,CACXK,aAAa,IAAIF,GAAG,GAAG,GAAAG,MAAA,CAAGD,aAAa,OAAAC,MAAA,CAAIH,GAAG,CAAE,GAAGE,aAAa,aAAbA,aAAa,cAAbA,aAAa,GAAIF,GAAG,EACvEC,YAAY,CACf;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}