{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { IconButton, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useTranslate } from 'ra-core';\nimport { useSidebarState } from './useSidebarState';\n/**\n * A button that toggles the sidebar. Used by default in the <AppBar>.\n * @param props The component props\n * @param {String} props.className An optional class name to apply to the button\n */\nexport var SidebarToggleButton = function (props) {\n  var translate = useTranslate();\n  var className = props.className;\n  var _a = useSidebarState(),\n    open = _a[0],\n    setOpen = _a[1];\n  return React.createElement(Tooltip, {\n    className: className,\n    title: translate(open ? 'ra.action.close_menu' : 'ra.action.open_menu', {\n      _: 'Open/Close menu'\n    }),\n    enterDelay: 500\n  }, React.createElement(StyledIconButton, {\n    color: \"inherit\",\n    onClick: function () {\n      return setOpen(!open);\n    }\n  }, React.createElement(MenuIcon, {\n    classes: {\n      root: open ? SidebarToggleButtonClasses.menuButtonIconOpen : SidebarToggleButtonClasses.menuButtonIconClosed\n    }\n  })));\n};\nvar PREFIX = 'RaSidebarToggleButton';\nexport var SidebarToggleButtonClasses = {\n  menuButtonIconClosed: \"\".concat(PREFIX, \"-menuButtonIconClosed\"),\n  menuButtonIconOpen: \"\".concat(PREFIX, \"-menuButtonIconOpen\")\n};\nvar StyledIconButton = styled(IconButton, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(SidebarToggleButtonClasses.menuButtonIconClosed)] = {\n    transition: theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    transform: 'rotate(0deg)'\n  }, _b[\"& .\".concat(SidebarToggleButtonClasses.menuButtonIconOpen)] = {\n    transition: theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    transform: 'rotate(180deg)'\n  }, _b;\n});","map":{"version":3,"names":["React","styled","IconButton","Tooltip","MenuIcon","useTranslate","useSidebarState","SidebarToggleButton","props","translate","className","_a","open","setOpen","createElement","title","_","enterDelay","StyledIconButton","color","onClick","classes","root","SidebarToggleButtonClasses","menuButtonIconOpen","menuButtonIconClosed","PREFIX","concat","name","overridesResolver","styles","theme","_b","transition","transitions","create","easing","sharp","duration","leavingScreen","transform"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/layout/SidebarToggleButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { IconButton, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useTranslate } from 'ra-core';\n\nimport { useSidebarState } from './useSidebarState';\n\n/**\n * A button that toggles the sidebar. Used by default in the <AppBar>.\n * @param props The component props\n * @param {String} props.className An optional class name to apply to the button\n */\nexport const SidebarToggleButton = (props: SidebarToggleButtonProps) => {\n    const translate = useTranslate();\n\n    const { className } = props;\n    const [open, setOpen] = useSidebarState();\n\n    return (\n        <Tooltip\n            className={className}\n            title={translate(\n                open ? 'ra.action.close_menu' : 'ra.action.open_menu',\n                { _: 'Open/Close menu' }\n            )}\n            enterDelay={500}\n        >\n            <StyledIconButton color=\"inherit\" onClick={() => setOpen(!open)}>\n                <MenuIcon\n                    classes={{\n                        root: open\n                            ? SidebarToggleButtonClasses.menuButtonIconOpen\n                            : SidebarToggleButtonClasses.menuButtonIconClosed,\n                    }}\n                />\n            </StyledIconButton>\n        </Tooltip>\n    );\n};\n\nexport type SidebarToggleButtonProps = {\n    className?: string;\n};\n\nconst PREFIX = 'RaSidebarToggleButton';\n\nexport const SidebarToggleButtonClasses = {\n    menuButtonIconClosed: `${PREFIX}-menuButtonIconClosed`,\n    menuButtonIconOpen: `${PREFIX}-menuButtonIconOpen`,\n};\n\nconst StyledIconButton = styled(IconButton, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${SidebarToggleButtonClasses.menuButtonIconClosed}`]: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        transform: 'rotate(0deg)',\n    },\n\n    [`& .${SidebarToggleButtonClasses.menuButtonIconOpen}`]: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        transform: 'rotate(180deg)',\n    },\n}));\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,UAAU,EAAEC,OAAO,QAAQ,eAAe;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,YAAY,QAAQ,SAAS;AAEtC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD;;;;;AAKA,OAAO,IAAMC,mBAAmB,GAAG,SAAAA,CAACC,KAA+B;EAC/D,IAAMC,SAAS,GAAGJ,YAAY,EAAE;EAExB,IAAAK,SAAS,GAAKF,KAAK,CAAAE,SAAV;EACX,IAAAC,EAAA,GAAkBL,eAAe,EAAE;IAAlCM,IAAI,GAAAD,EAAA;IAAEE,OAAO,GAAAF,EAAA,GAAqB;EAEzC,OACIX,KAAA,CAAAc,aAAA,CAACX,OAAO;IACJO,SAAS,EAAEA,SAAS;IACpBK,KAAK,EAAEN,SAAS,CACZG,IAAI,GAAG,sBAAsB,GAAG,qBAAqB,EACrD;MAAEI,CAAC,EAAE;IAAiB,CAAE,CAC3B;IACDC,UAAU,EAAE;EAAG,GAEfjB,KAAA,CAAAc,aAAA,CAACI,gBAAgB;IAACC,KAAK,EAAC,SAAS;IAACC,OAAO,EAAE,SAAAA,CAAA;MAAM,OAAAP,OAAO,CAAC,CAACD,IAAI,CAAC;IAAd;EAAc,GAC3DZ,KAAA,CAAAc,aAAA,CAACV,QAAQ;IACLiB,OAAO,EAAE;MACLC,IAAI,EAAEV,IAAI,GACJW,0BAA0B,CAACC,kBAAkB,GAC7CD,0BAA0B,CAACE;;EACpC,EACH,CACa,CACb;AAElB,CAAC;AAMD,IAAMC,MAAM,GAAG,uBAAuB;AAEtC,OAAO,IAAMH,0BAA0B,GAAG;EACtCE,oBAAoB,EAAE,GAAAE,MAAA,CAAGD,MAAM,0BAAuB;EACtDF,kBAAkB,EAAE,GAAAG,MAAA,CAAGD,MAAM;CAChC;AAED,IAAMR,gBAAgB,GAAGjB,MAAM,CAACC,UAAU,EAAE;EACxC0B,IAAI,EAAEF,MAAM;EACZG,iBAAiB,EAAE,SAAAA,CAACrB,KAAK,EAAEsB,MAAM;IAAK,OAAAA,MAAM,CAACR,IAAI;EAAX;CACzC,CAAC,CAAC,UAACX,EAAS;;MAAPoB,KAAK,GAAApB,EAAA,CAAAoB,KAAA;EAAO,OAAAC,EAAA,OACdA,EAAA,CAAC,MAAAL,MAAA,CAAMJ,0BAA0B,CAACE,oBAAoB,CAAE,IAAG;IACvDQ,UAAU,EAAEF,KAAK,CAACG,WAAW,CAACC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE;MAChDC,MAAM,EAAEL,KAAK,CAACG,WAAW,CAACE,MAAM,CAACC,KAAK;MACtCC,QAAQ,EAAEP,KAAK,CAACG,WAAW,CAACI,QAAQ,CAACC;KACxC,CAAC;IACFC,SAAS,EAAE;GACd,EAEDR,EAAA,CAAC,MAAAL,MAAA,CAAMJ,0BAA0B,CAACC,kBAAkB,CAAE,IAAG;IACrDS,UAAU,EAAEF,KAAK,CAACG,WAAW,CAACC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE;MAChDC,MAAM,EAAEL,KAAK,CAACG,WAAW,CAACE,MAAM,CAACC,KAAK;MACtCC,QAAQ,EAAEP,KAAK,CAACG,WAAW,CAACI,QAAQ,CAACC;KACxC,CAAC;IACFC,SAAS,EAAE;GACd,E;AAfa,CAgBhB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}