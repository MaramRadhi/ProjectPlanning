{"ast":null,"code":"var _jsxFileName = \"/Users/imrun10/Documents/GitHub/GradeCourseApp/client/src/pages/courseDetails.js\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport { useLocation, Link } from \"react-router-dom\"; // useLocation will allow us to use data sent from other pages when they link here\nimport Axios from \"axios\"; // Axios is a HTTP client for the browser and node.js (send data to backend)\nimport { useState } from \"react\"; // useState is a hook that allows us to use variables in the html portoin of the code\nimport \"../App.css\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"../components/Table\"; // table component\nimport Papa from \"papaparse\"; // papa parse is a library that allows us to parse csv files\nimport Navbar from \"../components/NavBar\";\nimport Error1 from \"../components/Error1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CourseDetails() {\n  _s();\n  const location = useLocation(); // we create and instance of this function and use it to get the data sent from the previous page\n  const [importedStudents, setImportedStudents] = useState([]); // this use state will help us save the data we get from the backend of all the students in the course the user clicked\n  /*------------------------------- NOT DONE YET -------------------------------*/\n  //   function getStudent(x){\n  //     Axios.get(\"http://localhost:3001/api/show/\").then((response)=>{\n  //       setStudent(response.data);\n  // })\n  //  }\n\n  //}\n  /*----------------------------------------------------------------------------*/\n\n  /*------------------------------- Axios Requests -------------------------------*/\n  Axios.get(\"http://localhost:3001/api/student\", {\n    // this is a get request to the backend to get all the students in the course the user clicked\n    params: {\n      // this is how you send data to the back end when using a get request\n      name: location.state.name\n      // we send the name of the course so when parsing the test_student array we can get the right students for the right course\n    }\n  }).then(response => setImportedStudents(response.data)); // we save the data we get from the backend in the importedStudents variable\n  console.log(importedStudents); // this is just a console log to make sure the data was saved in the importedStudents variable\n  function sendFile() {\n    // this function will send the csv file to the backend\n    Axios.post(\"http://localhost:3001/api/save/\", {\n      arr: parsedData // this is how we send data to the backend when using a post request, parsedData is an object, and you could add more objects or vars if you want after the comma but it has to be same format\n    }).then(console.log(\"SENT\")); // this is just a console log to make sure the data was sent\n  }\n\n  function showData() {\n    // this function will send a get request to the backend to check the array has been saved in the database\n    Axios.get(\"http://localhost:3001/api/checkArray\").then(console.log(\"shown\"));\n  }\n  /*--------------------------------------------------------------------------*/\n\n  if (importedStudents === \"MISSING\") {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Error1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 42\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"smaller-title\",\n          children: location.state.name.charAt(0).toUpperCase() + location.state.name.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              props: importedStudents,\n              code: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            class: \"footer\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/coursePage/course\",\n              state: location.state,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn sign-out\",\n                children: \"Go back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(CourseDetails, \"BkHTN/bxwlbmCjHe83OjMIyBKxY=\", false, function () {\n  return [useLocation];\n});\n_c = CourseDetails;\nvar _c;\n$RefreshReg$(_c, \"CourseDetails\");","map":{"version":3,"names":["react","useLocation","Link","Axios","useState","Table","Papa","Navbar","Error1","jsxDEV","_jsxDEV","CourseDetails","_s","location","importedStudents","setImportedStudents","get","params","name","state","then","response","data","console","log","sendFile","post","arr","parsedData","showData","children","fileName","_jsxFileName","lineNumber","columnNumber","class","charAt","toUpperCase","slice","id","props","code","to","_c","$RefreshReg$"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/src/pages/courseDetails.js"],"sourcesContent":["import react from \"react\";\nimport { useLocation, Link } from \"react-router-dom\"; // useLocation will allow us to use data sent from other pages when they link here\nimport Axios from \"axios\"; // Axios is a HTTP client for the browser and node.js (send data to backend)\nimport { useState } from \"react\"; // useState is a hook that allows us to use variables in the html portoin of the code\nimport \"../App.css\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"../components/Table\"; // table component\nimport Papa from \"papaparse\"; // papa parse is a library that allows us to parse csv files\nimport Navbar from \"../components/NavBar\";\nimport Error1 from \"../components/Error1\";\nexport default function CourseDetails() {\n  const location = useLocation(); // we create and instance of this function and use it to get the data sent from the previous page\n  const [importedStudents, setImportedStudents] = useState([]); // this use state will help us save the data we get from the backend of all the students in the course the user clicked\n  /*------------------------------- NOT DONE YET -------------------------------*/\n  //   function getStudent(x){\n  //     Axios.get(\"http://localhost:3001/api/show/\").then((response)=>{\n  //       setStudent(response.data);\n  // })\n  //  }\n\n  //}\n  /*----------------------------------------------------------------------------*/\n\n  /*------------------------------- Axios Requests -------------------------------*/\n  Axios.get(\"http://localhost:3001/api/student\", {\n    // this is a get request to the backend to get all the students in the course the user clicked\n    params: {\n      // this is how you send data to the back end when using a get request\n      name: location.state.name,\n      // we send the name of the course so when parsing the test_student array we can get the right students for the right course\n    },\n  }).then((response) => setImportedStudents(response.data)); // we save the data we get from the backend in the importedStudents variable\n  console.log(importedStudents); // this is just a console log to make sure the data was saved in the importedStudents variable\n  function sendFile() {\n    // this function will send the csv file to the backend\n    Axios.post(\"http://localhost:3001/api/save/\", {\n      arr: parsedData, // this is how we send data to the backend when using a post request, parsedData is an object, and you could add more objects or vars if you want after the comma but it has to be same format\n    }).then(console.log(\"SENT\")); // this is just a console log to make sure the data was sent\n  }\n\n  function showData() {\n    // this function will send a get request to the backend to check the array has been saved in the database\n    Axios.get(\"http://localhost:3001/api/checkArray\").then(\n      console.log(\"shown\")\n    );\n  }\n  /*--------------------------------------------------------------------------*/\n\n  \n\n\n  if(importedStudents === \"MISSING\"){\n    return (<header><Navbar /></header>, <Error1 />)\n  }\n  else{\n    return (\n      <div>\n        <header>\n          <Navbar />\n          <h1 class=\"smaller-title\">\n            {location.state.name.charAt(0).toUpperCase() +\n              location.state.name.slice(1)}\n          </h1>\n        </header>\n\n        <body>\n          <div class=\"wrapper\">\n            <div id=\"content\">\n              <Table props={importedStudents} code={1}/>{\" \"}\n              {/* this is how we pass data to the table component */}\n            </div>\n            <footer class=\"footer\">\n              \n\n            <Link to=\"/coursePage/course\" state ={location.state}><button class = \"btn sign-out\">Go back</button></Link>\n\n            </footer>\n          </div>\n        </body>\n      </div>\n    );\n  }}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}