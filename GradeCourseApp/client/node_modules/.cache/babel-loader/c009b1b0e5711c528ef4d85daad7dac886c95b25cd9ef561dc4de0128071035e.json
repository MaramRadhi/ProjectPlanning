{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useChoices } from 'ra-core';\nexport var CheckboxGroupInputItem = function (props) {\n  var id = props.id,\n    choice = props.choice,\n    className = props.className,\n    fullWidth = props.fullWidth,\n    onChange = props.onChange,\n    optionText = props.optionText,\n    optionValue = props.optionValue,\n    options = props.options,\n    translateChoice = props.translateChoice,\n    value = props.value,\n    labelPlacement = props.labelPlacement,\n    rest = __rest(props, [\"id\", \"choice\", \"className\", \"fullWidth\", \"onChange\", \"optionText\", \"optionValue\", \"options\", \"translateChoice\", \"value\", \"labelPlacement\"]);\n  var _a = useChoices({\n      optionText: optionText,\n      optionValue: optionValue,\n      translateChoice: translateChoice\n    }),\n    getChoiceText = _a.getChoiceText,\n    getChoiceValue = _a.getChoiceValue;\n  var choiceName = getChoiceText(choice);\n  return React.createElement(StyledFormControlLabel, {\n    htmlFor: \"\".concat(id, \"_\").concat(getChoiceValue(choice)),\n    key: getChoiceValue(choice),\n    onChange: onChange,\n    className: className,\n    control: React.createElement(Checkbox, __assign({\n      id: \"\".concat(id, \"_\").concat(getChoiceValue(choice)),\n      color: \"primary\",\n      className: CheckboxGroupInputItemClasses.checkbox,\n      checked: value ? value.find(function (v) {\n        return v == getChoiceValue(choice);\n      }) !==\n      // eslint-disable-line eqeqeq\n      undefined : false,\n      value: String(getChoiceValue(choice))\n    }, options, rest)),\n    label: choiceName,\n    labelPlacement: labelPlacement\n  });\n};\nvar PREFIX = 'RaCheckboxGroupInputItem';\nexport var CheckboxGroupInputItemClasses = {\n  checkbox: \"\".concat(PREFIX, \"-checkbox\")\n};\nvar StyledFormControlLabel = styled(FormControlLabel, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})((_a = {}, _a[\"& .\".concat(CheckboxGroupInputItemClasses.checkbox)] = {\n  height: 32\n}, _a));","map":{"version":3,"names":["React","styled","FormControlLabel","Checkbox","useChoices","CheckboxGroupInputItem","props","id","choice","className","fullWidth","onChange","optionText","optionValue","options","translateChoice","value","labelPlacement","rest","__rest","_a","getChoiceText","getChoiceValue","choiceName","createElement","StyledFormControlLabel","htmlFor","concat","key","control","__assign","color","CheckboxGroupInputItemClasses","checkbox","checked","find","v","undefined","String","label","PREFIX","name","overridesResolver","styles","root","height"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/input/CheckboxGroupInputItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useChoices } from 'ra-core';\n\nexport const CheckboxGroupInputItem = props => {\n    const {\n        id,\n        choice,\n        className,\n        fullWidth,\n        onChange,\n        optionText,\n        optionValue,\n        options,\n        translateChoice,\n        value,\n        labelPlacement,\n        ...rest\n    } = props;\n\n    const { getChoiceText, getChoiceValue } = useChoices({\n        optionText,\n        optionValue,\n        translateChoice,\n    });\n\n    const choiceName = getChoiceText(choice);\n\n    return (\n        <StyledFormControlLabel\n            htmlFor={`${id}_${getChoiceValue(choice)}`}\n            key={getChoiceValue(choice)}\n            onChange={onChange}\n            className={className}\n            control={\n                <Checkbox\n                    id={`${id}_${getChoiceValue(choice)}`}\n                    color=\"primary\"\n                    className={CheckboxGroupInputItemClasses.checkbox}\n                    checked={\n                        value\n                            ? value.find(v => v == getChoiceValue(choice)) !== // eslint-disable-line eqeqeq\n                              undefined\n                            : false\n                    }\n                    value={String(getChoiceValue(choice))}\n                    {...options}\n                    {...rest}\n                />\n            }\n            label={choiceName}\n            labelPlacement={labelPlacement}\n        />\n    );\n};\n\nconst PREFIX = 'RaCheckboxGroupInputItem';\n\nexport const CheckboxGroupInputItemClasses = {\n    checkbox: `${PREFIX}-checkbox`,\n};\n\nconst StyledFormControlLabel = styled(FormControlLabel, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`& .${CheckboxGroupInputItemClasses.checkbox}`]: {\n        height: 32,\n    },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,UAAU,QAAQ,SAAS;AAEpC,OAAO,IAAMC,sBAAsB,GAAG,SAAAA,CAAAC,KAAK;EAEnC,IAAAC,EAAE,GAYFD,KAAK,CAAAC,EAZH;IACFC,MAAM,GAWNF,KAAK,CAAAE,MAXC;IACNC,SAAS,GAUTH,KAAK,CAAAG,SAVI;IACTC,SAAS,GASTJ,KAAK,CAAAI,SATI;IACTC,QAAQ,GAQRL,KAAK,CAAAK,QARG;IACRC,UAAU,GAOVN,KAAK,CAAAM,UAPK;IACVC,WAAW,GAMXP,KAAK,CAAAO,WANM;IACXC,OAAO,GAKPR,KAAK,CAAAQ,OALE;IACPC,eAAe,GAIfT,KAAK,CAAAS,eAJU;IACfC,KAAK,GAGLV,KAAK,CAAAU,KAHA;IACLC,cAAc,GAEdX,KAAK,CAAAW,cAFS;IACXC,IAAI,GAAAC,MAAA,CACPb,KAAK,EAbH,4IAaL,CADU;EAGL,IAAAc,EAAA,GAAoChB,UAAU,CAAC;MACjDQ,UAAU,EAAAA,UAAA;MACVC,WAAW,EAAAA,WAAA;MACXE,eAAe,EAAAA;KAClB,CAAC;IAJMM,aAAa,GAAAD,EAAA,CAAAC,aAAA;IAAEC,cAAc,GAAAF,EAAA,CAAAE,cAInC;EAEF,IAAMC,UAAU,GAAGF,aAAa,CAACb,MAAM,CAAC;EAExC,OACIR,KAAA,CAAAwB,aAAA,CAACC,sBAAsB;IACnBC,OAAO,EAAE,GAAAC,MAAA,CAAGpB,EAAE,OAAAoB,MAAA,CAAIL,cAAc,CAACd,MAAM,CAAC,CAAE;IAC1CoB,GAAG,EAAEN,cAAc,CAACd,MAAM,CAAC;IAC3BG,QAAQ,EAAEA,QAAQ;IAClBF,SAAS,EAAEA,SAAS;IACpBoB,OAAO,EACH7B,KAAA,CAAAwB,aAAA,CAACrB,QAAQ,EAAA2B,QAAA;MACLvB,EAAE,EAAE,GAAAoB,MAAA,CAAGpB,EAAE,OAAAoB,MAAA,CAAIL,cAAc,CAACd,MAAM,CAAC,CAAE;MACrCuB,KAAK,EAAC,SAAS;MACftB,SAAS,EAAEuB,6BAA6B,CAACC,QAAQ;MACjDC,OAAO,EACHlB,KAAK,GACCA,KAAK,CAACmB,IAAI,CAAC,UAAAC,CAAC;QAAI,OAAAA,CAAC,IAAId,cAAc,CAACd,MAAM,CAAC;MAA3B,CAA2B,CAAC;MAAK;MACjD6B,SAAS,GACT,KAAK;MAEfrB,KAAK,EAAEsB,MAAM,CAAChB,cAAc,CAACd,MAAM,CAAC;IAAC,GACjCM,OAAO,EACPI,IAAI,EACV;IAENqB,KAAK,EAAEhB,UAAU;IACjBN,cAAc,EAAEA;EAAc,EAChC;AAEV,CAAC;AAED,IAAMuB,MAAM,GAAG,0BAA0B;AAEzC,OAAO,IAAMR,6BAA6B,GAAG;EACzCC,QAAQ,EAAE,GAAAN,MAAA,CAAGa,MAAM;CACtB;AAED,IAAMf,sBAAsB,GAAGxB,MAAM,CAACC,gBAAgB,EAAE;EACpDuC,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,SAAAA,CAACpC,KAAK,EAAEqC,MAAM;IAAK,OAAAA,MAAM,CAACC,IAAI;EAAX;CACzC,CAAC,EAAAxB,EAAA,OACEA,EAAA,CAAC,MAAAO,MAAA,CAAMK,6BAA6B,CAACC,QAAQ,CAAE,IAAG;EAC9CY,MAAM,EAAE;CACX,E,IACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}