{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from 'react';\nimport { useReferenceManyFieldController, useRecordContext, useTimeout, useCreatePath } from 'ra-core';\nimport { Typography, CircularProgress } from '@mui/material';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Link } from '../Link';\n/**\n * Fetch and render the number of records related to the current one\n *\n * Relies on dataProvider.getManyReference() returning a total property\n *\n * @example // Display the number of comments for the current post\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\">\n *\n * @example // Display the number of published comments for the current post\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\" filter={{ is_published: true }}>\n *\n * @example // Display the number of comments for the current post, with a custom Typography variant\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\" variant=\"h1\">\n */\nexport var ReferenceManyCount = function (props) {\n  var _a;\n  var reference = props.reference,\n    target = props.target,\n    filter = props.filter,\n    sort = props.sort,\n    link = props.link,\n    resource = props.resource,\n    _b = props.source,\n    source = _b === void 0 ? 'id' : _b,\n    _c = props.timeout,\n    timeout = _c === void 0 ? 1000 : _c,\n    rest = __rest(props, [\"reference\", \"target\", \"filter\", \"sort\", \"link\", \"resource\", \"source\", \"timeout\"]);\n  var record = useRecordContext(props);\n  var oneSecondHasPassed = useTimeout(timeout);\n  var createPath = useCreatePath();\n  var _d = useReferenceManyFieldController({\n      filter: filter,\n      sort: sort,\n      page: 1,\n      perPage: 1,\n      record: record,\n      reference: reference,\n      // @ts-ignore remove when #8491 is released\n      resource: resource,\n      source: source,\n      target: target\n    }),\n    isLoading = _d.isLoading,\n    error = _d.error,\n    total = _d.total;\n  var body = isLoading ? oneSecondHasPassed ? React.createElement(CircularProgress, {\n    size: 14\n  }) : '' : error ? React.createElement(ErrorIcon, {\n    color: \"error\",\n    fontSize: \"small\",\n    titleAccess: \"error\"\n  }) : total;\n  return link ? React.createElement(Link, __assign({\n    to: {\n      pathname: createPath({\n        resource: reference,\n        type: 'list'\n      }),\n      search: \"filter=\".concat(JSON.stringify(__assign(__assign({}, filter || {}), (_a = {}, _a[target] = record[source], _a))))\n    },\n    variant: \"body2\",\n    onClick: function (e) {\n      return e.stopPropagation();\n    }\n  }, sanitizeFieldRestProps(rest)), body) : React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body2\"\n  }, sanitizeFieldRestProps(rest)), body);\n};","map":{"version":3,"names":["React","useReferenceManyFieldController","useRecordContext","useTimeout","useCreatePath","Typography","CircularProgress","ErrorIcon","sanitizeFieldRestProps","Link","ReferenceManyCount","props","reference","target","filter","sort","link","resource","_b","source","_c","timeout","rest","__rest","record","oneSecondHasPassed","createPath","_d","page","perPage","isLoading","error","total","body","createElement","size","color","fontSize","titleAccess","__assign","to","pathname","type","search","concat","JSON","stringify","_a","variant","onClick","e","stopPropagation","component"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/field/ReferenceManyCount.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    useReferenceManyFieldController,\n    useRecordContext,\n    useTimeout,\n    useCreatePath,\n    SortPayload,\n} from 'ra-core';\nimport { Typography, TypographyProps, CircularProgress } from '@mui/material';\nimport ErrorIcon from '@mui/icons-material/Error';\n\nimport { PublicFieldProps, InjectedFieldProps } from './types';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Link } from '../Link';\n\n/**\n * Fetch and render the number of records related to the current one\n *\n * Relies on dataProvider.getManyReference() returning a total property\n *\n * @example // Display the number of comments for the current post\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\">\n *\n * @example // Display the number of published comments for the current post\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\" filter={{ is_published: true }}>\n *\n * @example // Display the number of comments for the current post, with a custom Typography variant\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\" variant=\"h1\">\n */\nexport const ReferenceManyCount = (props: ReferenceManyCountProps) => {\n    const {\n        reference,\n        target,\n        filter,\n        sort,\n        link,\n        resource,\n        source = 'id',\n        timeout = 1000,\n        ...rest\n    } = props;\n    const record = useRecordContext(props);\n    const oneSecondHasPassed = useTimeout(timeout);\n    const createPath = useCreatePath();\n\n    const { isLoading, error, total } = useReferenceManyFieldController({\n        filter,\n        sort,\n        page: 1,\n        perPage: 1,\n        record,\n        reference,\n        // @ts-ignore remove when #8491 is released\n        resource,\n        source,\n        target,\n    });\n\n    const body = isLoading ? (\n        oneSecondHasPassed ? (\n            <CircularProgress size={14} />\n        ) : (\n            ''\n        )\n    ) : error ? (\n        <ErrorIcon color=\"error\" fontSize=\"small\" titleAccess=\"error\" />\n    ) : (\n        total\n    );\n\n    return link ? (\n        <Link\n            to={{\n                pathname: createPath({ resource: reference, type: 'list' }),\n                search: `filter=${JSON.stringify({\n                    ...(filter || {}),\n                    [target]: record[source],\n                })}`,\n            }}\n            variant=\"body2\"\n            onClick={e => e.stopPropagation()}\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {body}\n        </Link>\n    ) : (\n        <Typography\n            component=\"span\"\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {body}\n        </Typography>\n    );\n};\n\nexport interface ReferenceManyCountProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {\n    reference: string;\n    target: string;\n    sort?: SortPayload;\n    filter?: any;\n    label?: string;\n    link?: boolean;\n    resource?: string;\n    source?: string;\n    timeout?: number;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}