{"ast":null,"code":"import { __assign } from '../_virtual/_tslib.js';\nimport * as React from 'react';\nimport { AuthContextConsumer } from '../AuthContext.js';\nimport { AuthKitError } from '../errors.js';\nimport { isAuthenticated } from '../utils/utils.js';\n\n/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication header <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n * @function\n * @name withAuthHeader\n * @description Inject Authentication Header inside the Component's Prop\n * @param Component - React Component\n */\nfunction withAuthHeader(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (c) {\n      if (c === null) {\n        throw new AuthKitError('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      if (c.authState.auth && isAuthenticated(c.authState)) {\n        return React.createElement(Component, __assign({}, props, {\n          authHeader: \"\".concat(c.authState.auth.type, \" \").concat(c.authState.auth.token)\n        }));\n      } else {\n        return React.createElement(Component, __assign({}, props, {\n          authHeader: \"\"\n        }));\n      }\n    });\n  };\n}\nexport { withAuthHeader as default };","map":{"version":3,"names":["withAuthHeader","Component","props","React","createElement","AuthContextConsumer","c","AuthKitError","authState","auth","isAuthenticated","__assign","authHeader","concat","type","token"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/react-auth-kit/src/higherOrderComponents/withAuthHeader.tsx"],"sourcesContent":["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication header <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n * @interface withAuthHeaderProps\n */\ninterface withAuthHeaderProps {\n    authHeader: string\n}\n\n/**\n * @public\n * @function\n * @name withAuthHeader\n * @description Inject Authentication Header inside the Component's Prop\n * @param Component - React Component\n */\nfunction withAuthHeader<P extends withAuthHeaderProps>(\n    Component: React.ComponentType<P>,\n):React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (c.authState.auth && isAuthenticated(c.authState)) {\n            return (\n              <Component\n                {...props}\n                authHeader={\n                  `${c.authState.auth.type} ${c.authState.auth.token}`\n                }\n              />\n            );\n          } else {\n            return <Component {...props} authHeader={``}/>;\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n/**\n  *@exports withAuthHeader\n  */\nexport default withAuthHeader;\n"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;AAkBG;AAcH;;;;;;AAMG;AACH,SAASA,cAAcA,CACnBC,SAAiC;EAEnC,OAAO,UAACC,KAAK;IACX,OACEC,KAAA,CAAAC,aAAA,CAACC,mBAAmB,QACjB,UAACC,CAAC;MACD,IAAIA,CAAC,KAAK,IAAI,EAAE;QACd,MAAM,IACNC,YAAY,CAAC,4BAA4B,GACvC,2CAA2C,CAAC;MAC/C;MACD,IAAID,CAAC,CAACE,SAAS,CAACC,IAAI,IAAIC,eAAe,CAACJ,CAAC,CAACE,SAAS,CAAC,EAAE;QACpD,OACEL,KAAC,CAAAC,aAAA,CAAAH,SAAS,EACJU,QAAA,KAAAT,KAAK,EACT;UAAAU,UAAU,EACR,GAAAC,MAAA,CAAGP,CAAC,CAACE,SAAS,CAACC,IAAI,CAACK,IAAI,OAAAD,MAAA,CAAIP,CAAC,CAACE,SAAS,CAACC,IAAI,CAACM,KAAK;QAAE,CAEtD;MAEL,OAAM;QACL,OAAOZ,KAAA,CAAAC,aAAA,CAACH,SAAS,EAAKU,QAAA,KAAAT,KAAK;UAAEU,UAAU,EAAE;QAAE,GAAG;MAC/C;KACF,CACmB;EAE1B,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}