{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { Fragment } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport inflection from 'inflection';\nimport { useDeleteWithConfirmController, useRecordContext, useResourceContext, useTranslate } from 'ra-core';\nimport { Confirm } from '../layout';\nimport { Button } from './Button';\nexport var DeleteWithConfirmButton = function (props) {\n  var className = props.className,\n    _a = props.confirmTitle,\n    confirmTitle = _a === void 0 ? 'ra.message.delete_title' : _a,\n    _b = props.confirmContent,\n    confirmContent = _b === void 0 ? 'ra.message.delete_content' : _b,\n    _c = props.icon,\n    icon = _c === void 0 ? defaultIcon : _c,\n    _d = props.label,\n    label = _d === void 0 ? 'ra.action.delete' : _d,\n    _e = props.mutationMode,\n    mutationMode = _e === void 0 ? 'pessimistic' : _e,\n    onClick = props.onClick,\n    _f = props.redirect,\n    redirect = _f === void 0 ? 'list' : _f,\n    _g = props.translateOptions,\n    translateOptions = _g === void 0 ? {} : _g,\n    mutationOptions = props.mutationOptions,\n    rest = __rest(props, [\"className\", \"confirmTitle\", \"confirmContent\", \"icon\", \"label\", \"mutationMode\", \"onClick\", \"redirect\", \"translateOptions\", \"mutationOptions\"]);\n  var translate = useTranslate();\n  var record = useRecordContext(props);\n  var resource = useResourceContext(props);\n  var _h = useDeleteWithConfirmController({\n      record: record,\n      redirect: redirect,\n      mutationMode: mutationMode,\n      onClick: onClick,\n      mutationOptions: mutationOptions,\n      resource: resource\n    }),\n    open = _h.open,\n    isLoading = _h.isLoading,\n    handleDialogOpen = _h.handleDialogOpen,\n    handleDialogClose = _h.handleDialogClose,\n    handleDelete = _h.handleDelete;\n  return React.createElement(Fragment, null, React.createElement(StyledButton, __assign({\n    onClick: handleDialogOpen,\n    label: label,\n    className: clsx('ra-delete-button', className),\n    key: \"button\"\n  }, rest), icon), React.createElement(Confirm, {\n    isOpen: open,\n    loading: isLoading,\n    title: confirmTitle,\n    content: confirmContent,\n    translateOptions: __assign({\n      name: translate(\"resources.\".concat(resource, \".forcedCaseName\"), {\n        smart_count: 1,\n        _: inflection.humanize(translate(\"resources.\".concat(resource, \".name\"), {\n          smart_count: 1,\n          _: inflection.singularize(resource)\n        }), true)\n      }),\n      id: record.id\n    }, translateOptions),\n    onConfirm: handleDelete,\n    onClose: handleDialogClose\n  }));\n};\nvar defaultIcon = React.createElement(ActionDelete, null);\nDeleteWithConfirmButton.propTypes = {\n  className: PropTypes.string,\n  confirmTitle: PropTypes.string,\n  confirmContent: PropTypes.string,\n  label: PropTypes.string,\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  record: PropTypes.any,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  icon: PropTypes.element,\n  translateOptions: PropTypes.object\n};\nvar PREFIX = 'RaDeleteWithConfirmButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n});","map":{"version":3,"names":["React","Fragment","styled","PropTypes","alpha","ActionDelete","clsx","inflection","useDeleteWithConfirmController","useRecordContext","useResourceContext","useTranslate","Confirm","Button","DeleteWithConfirmButton","props","className","_a","confirmTitle","_b","confirmContent","_c","icon","defaultIcon","_d","label","_e","mutationMode","onClick","_f","redirect","_g","translateOptions","mutationOptions","rest","__rest","translate","record","resource","_h","open","isLoading","handleDialogOpen","handleDialogClose","handleDelete","createElement","StyledButton","__assign","key","isOpen","loading","title","content","name","concat","smart_count","_","humanize","singularize","id","onConfirm","onClose","propTypes","string","oneOf","any","oneOfType","bool","func","element","object","PREFIX","overridesResolver","styles","root","theme","color","palette","error","main","backgroundColor"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/button/DeleteWithConfirmButton.tsx"],"sourcesContent":["import React, { Fragment, ReactEventHandler, ReactElement } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport inflection from 'inflection';\nimport { UseMutationOptions } from 'react-query';\nimport {\n    MutationMode,\n    RaRecord,\n    DeleteParams,\n    useDeleteWithConfirmController,\n    useRecordContext,\n    useResourceContext,\n    useTranslate,\n    RedirectionSideEffect,\n} from 'ra-core';\n\nimport { Confirm } from '../layout';\nimport { Button, ButtonProps } from './Button';\n\nexport const DeleteWithConfirmButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithConfirmButtonProps<RecordType>\n) => {\n    const {\n        className,\n        confirmTitle = 'ra.message.delete_title',\n        confirmContent = 'ra.message.delete_content',\n        icon = defaultIcon,\n        label = 'ra.action.delete',\n        mutationMode = 'pessimistic',\n        onClick,\n        redirect = 'list',\n        translateOptions = {},\n        mutationOptions,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n\n    const {\n        open,\n        isLoading,\n        handleDialogOpen,\n        handleDialogClose,\n        handleDelete,\n    } = useDeleteWithConfirmController({\n        record,\n        redirect,\n        mutationMode,\n        onClick,\n        mutationOptions,\n        resource,\n    });\n\n    return (\n        <Fragment>\n            <StyledButton\n                onClick={handleDialogOpen}\n                label={label}\n                className={clsx('ra-delete-button', className)}\n                key=\"button\"\n                {...rest}\n            >\n                {icon}\n            </StyledButton>\n            <Confirm\n                isOpen={open}\n                loading={isLoading}\n                title={confirmTitle}\n                content={confirmContent}\n                translateOptions={{\n                    name: translate(`resources.${resource}.forcedCaseName`, {\n                        smart_count: 1,\n                        _: inflection.humanize(\n                            translate(`resources.${resource}.name`, {\n                                smart_count: 1,\n                                _: inflection.singularize(resource),\n                            }),\n                            true\n                        ),\n                    }),\n                    id: record.id,\n                    ...translateOptions,\n                }}\n                onConfirm={handleDelete}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithConfirmButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown\n> extends ButtonProps {\n    confirmTitle?: string;\n    confirmContent?: React.ReactNode;\n    icon?: ReactElement;\n    mutationMode?: MutationMode;\n    onClick?: ReactEventHandler<any>;\n    // May be injected by Toolbar - sanitized in Button\n    translateOptions?: object;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n}\n\nDeleteWithConfirmButton.propTypes = {\n    className: PropTypes.string,\n    confirmTitle: PropTypes.string,\n    confirmContent: PropTypes.string,\n    label: PropTypes.string,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n    translateOptions: PropTypes.object,\n};\n\nconst PREFIX = 'RaDeleteWithConfirmButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.error.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}