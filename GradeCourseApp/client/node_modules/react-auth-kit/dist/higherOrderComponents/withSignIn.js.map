{"version":3,"file":"withSignIn.js","sources":["../../src/higherOrderComponents/withSignIn.tsx"],"sourcesContent":["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Sign In functionality <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {signInFunctionParams} from '../types';\nimport {doSignIn} from '../utils/reducers';\nimport {AuthKitError} from '../errors';\n\n/**\n * @interface withSignInProps\n */\ninterface withSignInProps {\n    signIn(params: signInFunctionParams): boolean\n}\n\n/**\n * @public\n * @function\n * @name withSignIn\n * @description Inject sign in functionality inside the Component's Prop\n * @param Component\n */\nfunction withSignIn<P extends withSignInProps>(\n    Component: React.ComponentType<P>,\n):React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          const signIn = (signInConfig: signInFunctionParams)\n            : boolean => {\n            const {\n              token,\n              tokenType,\n              authState,\n              expiresIn,\n              refreshToken,\n              refreshTokenExpireIn,\n            } = signInConfig;\n            const expTime =\n              new Date(new Date().getTime() + expiresIn * 60 * 1000);\n            if (c.authState.isUsingRefreshToken) {\n              // Using the power of refresh token\n              if (!!refreshToken && !!refreshTokenExpireIn) {\n                // refresh token params are provided\n                // sign in with refresh token\n                const refreshTokenExpireAt = new Date(new Date().getTime() +\n                  refreshTokenExpireIn * 60 * 1000);\n                c.dispatch(doSignIn({\n                  auth: {\n                    token: token,\n                    type: tokenType,\n                    expiresAt: expTime,\n                  },\n                  userState: authState ? authState : null,\n                  refresh: {\n                    token: refreshToken,\n                    expiresAt: refreshTokenExpireAt,\n                  },\n                }));\n                return true;\n              } else {\n                // refresh token params are not provided\n                // throw an error\n                throw new AuthKitError('Make sure you given \"refreshToken\"'+\n                ' and \"refreshTokenExpireIn\" parameter');\n              }\n            } else {\n              // Not using refresh token\n              if (!!refreshToken && !!refreshTokenExpireIn) {\n                // params are not expected but provided\n                // throw an error\n                throw new AuthKitError('The app doesn\\'t implement ' +\n                  '\\'refreshToken\\' feature.\\n So you have to'+\n                  ' implement refresh token feature' +\n                  ' from \\'AuthProvider\\' before using it.');\n              } else {\n                // sign in without the refresh token\n                c.dispatch(doSignIn({\n                  auth: {\n                    token: token,\n                    type: tokenType,\n                    expiresAt: expTime,\n                  },\n                  userState: authState ? authState : null,\n                  refresh: null,\n                }));\n                return true;\n              }\n            }\n          };\n          return <Component {...props} signIn={signIn}/>;\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withSignIn;\n"],"names":[],"mappings":";;;;;;AAgCA;;;;;;AAMG;AACH,SAAS,UAAU,CACf,SAAiC,EAAA;AAEnC,IAAA,OAAO,UAAC,KAAK,EAAA;AACX,QAAA,QACE,KAAA,CAAA,aAAA,CAAC,mBAAmB,EAAA,IAAA,EACjB,UAAC,CAAC,EAAA;YACD,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,MAAM,IACN,YAAY,CAAC,4BAA4B;AACvC,oBAAA,2CAA2C,CAAC,CAAC;AAChD,aAAA;YACD,IAAM,MAAM,GAAG,UAAC,YAAkC,EAAA;AAG9C,gBAAA,IAAA,KAAK,GAMH,YAAY,CAAA,KANT,EACL,SAAS,GAKP,YAAY,CALL,SAAA,EACT,SAAS,GAIP,YAAY,CAAA,SAJL,EACT,SAAS,GAGP,YAAY,CAHL,SAAA,EACT,YAAY,GAEV,YAAY,CAAA,YAFF,EACZ,oBAAoB,GAClB,YAAY,qBADM,CACL;AACjB,gBAAA,IAAM,OAAO,GACX,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,CAAC,SAAS,CAAC,mBAAmB,EAAE;;AAEnC,oBAAA,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,oBAAoB,EAAE;;;wBAG5C,IAAM,oBAAoB,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;AACxD,4BAAA,oBAAoB,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AACpC,wBAAA,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAClB,4BAAA,IAAI,EAAE;AACJ,gCAAA,KAAK,EAAE,KAAK;AACZ,gCAAA,IAAI,EAAE,SAAS;AACf,gCAAA,SAAS,EAAE,OAAO;AACnB,6BAAA;4BACD,SAAS,EAAE,SAAS,GAAG,SAAS,GAAG,IAAI;AACvC,4BAAA,OAAO,EAAE;AACP,gCAAA,KAAK,EAAE,YAAY;AACnB,gCAAA,SAAS,EAAE,oBAAoB;AAChC,6BAAA;AACF,yBAAA,CAAC,CAAC,CAAC;AACJ,wBAAA,OAAO,IAAI,CAAC;AACb,qBAAA;AAAM,yBAAA;;;wBAGL,MAAM,IAAI,YAAY,CAAC,oCAAoC;AAC3D,4BAAA,uCAAuC,CAAC,CAAC;AAC1C,qBAAA;AACF,iBAAA;AAAM,qBAAA;;AAEL,oBAAA,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,oBAAoB,EAAE;;;wBAG5C,MAAM,IAAI,YAAY,CAAC,6BAA6B;4BAClD,4CAA4C;4BAC5C,kCAAkC;AAClC,4BAAA,yCAAyC,CAAC,CAAC;AAC9C,qBAAA;AAAM,yBAAA;;AAEL,wBAAA,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAClB,4BAAA,IAAI,EAAE;AACJ,gCAAA,KAAK,EAAE,KAAK;AACZ,gCAAA,IAAI,EAAE,SAAS;AACf,gCAAA,SAAS,EAAE,OAAO;AACnB,6BAAA;4BACD,SAAS,EAAE,SAAS,GAAG,SAAS,GAAG,IAAI;AACvC,4BAAA,OAAO,EAAE,IAAI;AACd,yBAAA,CAAC,CAAC,CAAC;AACJ,wBAAA,OAAO,IAAI,CAAC;AACb,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC;YACF,OAAO,KAAA,CAAA,aAAA,CAAC,SAAS,EAAK,QAAA,CAAA,EAAA,EAAA,KAAK,IAAE,MAAM,EAAE,MAAM,EAAA,CAAA,CAAG,CAAC;SAChD,CACmB,EACtB;AACJ,KAAC,CAAC;AACJ;;;;"}