{"ast":null,"code":"import * as React from 'react';\nimport { localStorageStore } from 'ra-core';\nimport { AdminUI, AdminContext } from 'ra-ui-materialui';\nimport { defaultI18nProvider } from './defaultI18nProvider';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     defaultI18nProvider,\n *     localStorageStore,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const store = localStorageStore();\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider} i18nProvider={defaultI18nProvider} store={store}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\nexport var Admin = function (props) {\n  var authProvider = props.authProvider,\n    basename = props.basename,\n    catchAll = props.catchAll,\n    children = props.children,\n    dashboard = props.dashboard,\n    dataProvider = props.dataProvider,\n    disableTelemetry = props.disableTelemetry,\n    history = props.history,\n    i18nProvider = props.i18nProvider,\n    layout = props.layout,\n    loading = props.loading,\n    loginPage = props.loginPage,\n    authCallbackPage = props.authCallbackPage,\n    menu = props.menu,\n    // deprecated, use a custom layout instead\n    notification = props.notification,\n    queryClient = props.queryClient,\n    requireAuth = props.requireAuth,\n    store = props.store,\n    ready = props.ready,\n    theme = props.theme,\n    _a = props.title,\n    title = _a === void 0 ? 'React Admin' : _a;\n  if (loginPage === true && process.env.NODE_ENV !== 'production') {\n    console.warn('You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it');\n  }\n  return React.createElement(AdminContext, {\n    authProvider: authProvider,\n    basename: basename,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    store: store,\n    history: history,\n    queryClient: queryClient,\n    theme: theme\n  }, React.createElement(AdminUI, {\n    layout: layout,\n    dashboard: dashboard,\n    disableTelemetry: disableTelemetry,\n    menu: menu,\n    catchAll: catchAll,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    authCallbackPage: authCallbackPage,\n    notification: notification,\n    requireAuth: requireAuth,\n    ready: ready\n  }, children));\n};\nAdmin.defaultProps = {\n  i18nProvider: defaultI18nProvider,\n  store: localStorageStore()\n};\nexport default Admin;","map":{"version":3,"names":["React","localStorageStore","AdminUI","AdminContext","defaultI18nProvider","Admin","props","authProvider","basename","catchAll","children","dashboard","dataProvider","disableTelemetry","history","i18nProvider","layout","loading","loginPage","authCallbackPage","menu","notification","queryClient","requireAuth","store","ready","theme","_a","title","process","env","NODE_ENV","console","warn","createElement","defaultProps"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/react-admin/src/Admin.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ComponentType } from 'react';\nimport { CoreAdminProps, localStorageStore } from 'ra-core';\nimport { AdminUI, AdminContext } from 'ra-ui-materialui';\nimport { ThemeOptions } from '@mui/material';\n\nimport { defaultI18nProvider } from './defaultI18nProvider';\n\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     defaultI18nProvider,\n *     localStorageStore,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const store = localStorageStore();\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider} i18nProvider={defaultI18nProvider} store={store}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\nexport const Admin = (props: AdminProps) => {\n    const {\n        authProvider,\n        basename,\n        catchAll,\n        children,\n        dashboard,\n        dataProvider,\n        disableTelemetry,\n        history,\n        i18nProvider,\n        layout,\n        loading,\n        loginPage,\n        authCallbackPage,\n        menu, // deprecated, use a custom layout instead\n        notification,\n        queryClient,\n        requireAuth,\n        store,\n        ready,\n        theme,\n        title = 'React Admin',\n    } = props;\n\n    if (loginPage === true && process.env.NODE_ENV !== 'production') {\n        console.warn(\n            'You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it'\n        );\n    }\n\n    return (\n        <AdminContext\n            authProvider={authProvider}\n            basename={basename}\n            dataProvider={dataProvider}\n            i18nProvider={i18nProvider}\n            store={store}\n            history={history}\n            queryClient={queryClient}\n            theme={theme}\n        >\n            <AdminUI\n                layout={layout}\n                dashboard={dashboard}\n                disableTelemetry={disableTelemetry}\n                menu={menu}\n                catchAll={catchAll}\n                title={title}\n                loading={loading}\n                loginPage={loginPage}\n                authCallbackPage={authCallbackPage}\n                notification={notification}\n                requireAuth={requireAuth}\n                ready={ready}\n            >\n                {children}\n            </AdminUI>\n        </AdminContext>\n    );\n};\n\nAdmin.defaultProps = {\n    i18nProvider: defaultI18nProvider,\n    store: localStorageStore(),\n};\n\nexport default Admin;\n\nexport interface AdminProps extends CoreAdminProps {\n    theme?: ThemeOptions;\n    notification?: ComponentType;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAAyBC,iBAAiB,QAAQ,SAAS;AAC3D,SAASC,OAAO,EAAEC,YAAY,QAAQ,kBAAkB;AAGxD,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA,OAAO,IAAMC,KAAK,GAAG,SAAAA,CAACC,KAAiB;EAE/B,IAAAC,YAAY,GAqBZD,KAAK,CAAAC,YArBO;IACZC,QAAQ,GAoBRF,KAAK,CAAAE,QApBG;IACRC,QAAQ,GAmBRH,KAAK,CAAAG,QAnBG;IACRC,QAAQ,GAkBRJ,KAAK,CAAAI,QAlBG;IACRC,SAAS,GAiBTL,KAAK,CAAAK,SAjBI;IACTC,YAAY,GAgBZN,KAAK,CAAAM,YAhBO;IACZC,gBAAgB,GAehBP,KAAK,CAAAO,gBAfW;IAChBC,OAAO,GAcPR,KAAK,CAAAQ,OAdE;IACPC,YAAY,GAaZT,KAAK,CAAAS,YAbO;IACZC,MAAM,GAYNV,KAAK,CAAAU,MAZC;IACNC,OAAO,GAWPX,KAAK,CAAAW,OAXE;IACPC,SAAS,GAUTZ,KAAK,CAAAY,SAVI;IACTC,gBAAgB,GAShBb,KAAK,CAAAa,gBATW;IAChBC,IAAI,GAQJd,KAAK,CAAAc,IARD;IAAE;IACNC,YAAY,GAOZf,KAAK,CAAAe,YAPO;IACZC,WAAW,GAMXhB,KAAK,CAAAgB,WANM;IACXC,WAAW,GAKXjB,KAAK,CAAAiB,WALM;IACXC,KAAK,GAILlB,KAAK,CAAAkB,KAJA;IACLC,KAAK,GAGLnB,KAAK,CAAAmB,KAHA;IACLC,KAAK,GAELpB,KAAK,CAAAoB,KAFA;IACLC,EAAA,GACArB,KAAK,CAAAsB,KADgB;IAArBA,KAAK,GAAAD,EAAA,cAAG,aAAa,GAAAA,EAAA;EAGzB,IAAIT,SAAS,KAAK,IAAI,IAAIW,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IAC7DC,OAAO,CAACC,IAAI,CACR,sHAAsH,CACzH;;EAGL,OACIjC,KAAA,CAAAkC,aAAA,CAAC/B,YAAY;IACTI,YAAY,EAAEA,YAAY;IAC1BC,QAAQ,EAAEA,QAAQ;IAClBI,YAAY,EAAEA,YAAY;IAC1BG,YAAY,EAAEA,YAAY;IAC1BS,KAAK,EAAEA,KAAK;IACZV,OAAO,EAAEA,OAAO;IAChBQ,WAAW,EAAEA,WAAW;IACxBI,KAAK,EAAEA;EAAK,GAEZ1B,KAAA,CAAAkC,aAAA,CAAChC,OAAO;IACJc,MAAM,EAAEA,MAAM;IACdL,SAAS,EAAEA,SAAS;IACpBE,gBAAgB,EAAEA,gBAAgB;IAClCO,IAAI,EAAEA,IAAI;IACVX,QAAQ,EAAEA,QAAQ;IAClBmB,KAAK,EAAEA,KAAK;IACZX,OAAO,EAAEA,OAAO;IAChBC,SAAS,EAAEA,SAAS;IACpBC,gBAAgB,EAAEA,gBAAgB;IAClCE,YAAY,EAAEA,YAAY;IAC1BE,WAAW,EAAEA,WAAW;IACxBE,KAAK,EAAEA;EAAK,GAEXf,QAAQ,CACH,CACC;AAEvB,CAAC;AAEDL,KAAK,CAAC8B,YAAY,GAAG;EACjBpB,YAAY,EAAEX,mBAAmB;EACjCoB,KAAK,EAAEvB,iBAAiB;CAC3B;AAED,eAAeI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}