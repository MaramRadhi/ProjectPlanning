{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { fieldPropTypes } from './types';\nexport var UrlField = memo(function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\"]);\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  var translate = useTranslate();\n  if (value == null) {\n    return React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    }));\n  }\n  return React.createElement(Link, __assign({\n    className: className,\n    href: value,\n    onClick: stopPropagation,\n    variant: \"body2\"\n  }, sanitizeFieldRestProps(rest)), value);\n});\nUrlField.propTypes = fieldPropTypes;\nUrlField.displayName = 'UrlField';\n// useful to prevent click bubbling in a Datagrid with rowClick\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};","map":{"version":3,"names":["React","memo","get","sanitizeFieldRestProps","Typography","Link","useRecordContext","useTranslate","fieldPropTypes","UrlField","props","className","emptyText","source","rest","__rest","record","value","translate","createElement","__assign","component","variant","_","href","onClick","stopPropagation","propTypes","displayName","e"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/field/UrlField.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AnchorHTMLAttributes, memo, FC } from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\nexport const UrlField: FC<UrlFieldProps> = memo(props => {\n    const { className, emptyText, source, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n    const translate = useTranslate();\n\n    if (value == null) {\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText && translate(emptyText, { _: emptyText })}\n            </Typography>\n        );\n    }\n\n    return (\n        <Link\n            className={className}\n            href={value}\n            onClick={stopPropagation}\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value}\n        </Link>\n    );\n});\n\nUrlField.propTypes = fieldPropTypes;\nUrlField.displayName = 'UrlField';\n\nexport interface UrlFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        AnchorHTMLAttributes<HTMLAnchorElement> {}\n\n// useful to prevent click bubbling in a Datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAA+BC,IAAI,QAAY,OAAO;AACtD,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAChD,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;AACxD,SAA+CC,cAAc,QAAQ,SAAS;AAE9E,OAAO,IAAMC,QAAQ,GAAsBR,IAAI,CAAC,UAAAS,KAAK;EACzC,IAAAC,SAAS,GAAiCD,KAAK,CAAAC,SAAtC;IAAEC,SAAS,GAAsBF,KAAK,CAAAE,SAA3B;IAAEC,MAAM,GAAcH,KAAK,CAAAG,MAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKL,KAAK,EAAjD,oCAAyC,CAAF;EAC7C,IAAMM,MAAM,GAAGV,gBAAgB,CAACI,KAAK,CAAC;EACtC,IAAMO,KAAK,GAAGf,GAAG,CAACc,MAAM,EAAEH,MAAM,CAAC;EACjC,IAAMK,SAAS,GAAGX,YAAY,EAAE;EAEhC,IAAIU,KAAK,IAAI,IAAI,EAAE;IACf,OACIjB,KAAA,CAAAmB,aAAA,CAACf,UAAU,EAAAgB,QAAA;MACPC,SAAS,EAAC,MAAM;MAChBC,OAAO,EAAC,OAAO;MACfX,SAAS,EAAEA;IAAS,GAChBR,sBAAsB,CAACW,IAAI,CAAC,GAE/BF,SAAS,IAAIM,SAAS,CAACN,SAAS,EAAE;MAAEW,CAAC,EAAEX;IAAS,CAAE,CAAC,CAC3C;;EAIrB,OACIZ,KAAA,CAAAmB,aAAA,CAACd,IAAI,EAAAe,QAAA;IACDT,SAAS,EAAEA,SAAS;IACpBa,IAAI,EAAEP,KAAK;IACXQ,OAAO,EAAEC,eAAe;IACxBJ,OAAO,EAAC;EAAO,GACXnB,sBAAsB,CAACW,IAAI,CAAC,GAE/BG,KAAK,CACH;AAEf,CAAC,CAAC;AAEFR,QAAQ,CAACkB,SAAS,GAAGnB,cAAc;AACnCC,QAAQ,CAACmB,WAAW,GAAG,UAAU;AAOjC;AACA,IAAMF,eAAe,GAAG,SAAAA,CAAAG,CAAC;EAAI,OAAAA,CAAC,CAACH,eAAe,EAAE;AAAnB,CAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}