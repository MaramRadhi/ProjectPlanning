{"version":3,"file":"PrivateRoute.js","sources":["../src/PrivateRoute.tsx"],"sourcesContent":["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview PrivateRoute component\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {useLocation, Navigate} from 'react-router-dom';\nimport AuthContext from './AuthContext';\nimport {doSignOut} from './utils/reducers';\nimport {AuthKitError} from './errors';\nimport {isAuthenticated} from './utils/utils';\n\ninterface RequireAuthProps {\n  children: JSX.Element,\n  loginPath: string\n}\n\n/**\n * Private Route for Components\n *\n * @remarks\n * This Component is based on {@link https://reactrouter.com/web/api/Route | reactrouter.Route}.\n * So you need to install react-route-dom before use it\n *\n * @param props\n */\n\nconst RequireAuth: React.FunctionComponent<RequireAuthProps> =\n  ({children, loginPath}) => {\n    const context = React.useContext(AuthContext);\n    if (context === null) {\n      throw new\n      AuthKitError('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n    }\n\n    const location = useLocation();\n\n    if (!isAuthenticated(context.authState)) {\n      // Redirect them to the /login page, but save the current location they\n      // were trying to go to when they were redirected. This allows us to\n      // send them along to that page after they login, which is a nicer\n      // user experience than dropping them off on the home page.\n      context.dispatch(doSignOut());\n      return <Navigate to={loginPath} state={{from: location}} replace />;\n    }\n\n    return children;\n  };\n\n\nexport default RequireAuth;\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAkBG;AAaH;;;;;;;;AAQG;AAEG,IAAA,WAAW,GACf,UAAC,EAAqB,EAAA;QAApB,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,SAAS,GAAA,EAAA,CAAA,SAAA,CAAA;IACnB,IAAM,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IAC9C,IAAI,OAAO,KAAK,IAAI,EAAE;QACpB,MAAM,IACN,YAAY,CAAC,4BAA4B;AACzC,YAAA,2CAA2C,CAAC,CAAC;AAC9C,KAAA;AAED,IAAA,IAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;AAE/B,IAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;;;;;AAKvC,QAAA,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;AAC9B,QAAA,OAAO,oBAAC,QAAQ,EAAA,EAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,OAAO,SAAG,CAAC;AACrE,KAAA;AAED,IAAA,OAAO,QAAQ,CAAC;AAClB;;;;"}