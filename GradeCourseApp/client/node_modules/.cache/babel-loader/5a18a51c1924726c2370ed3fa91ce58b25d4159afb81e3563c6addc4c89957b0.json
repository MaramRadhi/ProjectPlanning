{"ast":null,"code":"'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar GetIntrinsic = require('get-intrinsic');\nvar isRegex = require('is-regex');\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = GetIntrinsic('%TypeError%');\nmodule.exports = function regexTester(regex) {\n  if (!isRegex(regex)) {\n    throw new $TypeError('`regex` must be a RegExp');\n  }\n  return function test(s) {\n    return $exec(regex, s) !== null;\n  };\n};","map":{"version":3,"names":["callBound","require","GetIntrinsic","isRegex","$exec","$TypeError","module","exports","regexTester","regex","test","s"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/safe-regex-test/index.js"],"sourcesContent":["'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar GetIntrinsic = require('get-intrinsic');\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nmodule.exports = function regexTester(regex) {\n\tif (!isRegex(regex)) {\n\t\tthrow new $TypeError('`regex` must be a RegExp');\n\t}\n\treturn function test(s) {\n\t\treturn $exec(regex, s) !== null;\n\t};\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAU,CAAC;AAEjC,IAAIG,KAAK,GAAGJ,SAAS,CAAC,uBAAuB,CAAC;AAC9C,IAAIK,UAAU,GAAGH,YAAY,CAAC,aAAa,CAAC;AAE5CI,MAAM,CAACC,OAAO,GAAG,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC5C,IAAI,CAACN,OAAO,CAACM,KAAK,CAAC,EAAE;IACpB,MAAM,IAAIJ,UAAU,CAAC,0BAA0B,CAAC;EACjD;EACA,OAAO,SAASK,IAAIA,CAACC,CAAC,EAAE;IACvB,OAAOP,KAAK,CAACK,KAAK,EAAEE,CAAC,CAAC,KAAK,IAAI;EAChC,CAAC;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}