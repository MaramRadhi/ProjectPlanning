{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport get from 'lodash/get';\nimport { useMemo } from 'react';\nimport { useGetManyAggregate } from '../../dataProvider';\nimport { useList } from '../list';\nimport { useNotify } from '../../notification';\nvar emptyArray = [];\nvar defaultFilter = {};\nvar defaultSort = {\n  field: null,\n  order: null\n};\n/**\n * Hook that fetches records from another resource specified\n * by an array of *ids* in current record.\n *\n * @example\n *\n * const { data, error, isFetching, isLoading } = useReferenceArrayFieldController({\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @returns {ListControllerResult} The reference props\n */\nexport var useReferenceArrayFieldController = function (props) {\n  var _a = props.filter,\n    filter = _a === void 0 ? defaultFilter : _a,\n    _b = props.page,\n    page = _b === void 0 ? 1 : _b,\n    _c = props.perPage,\n    perPage = _c === void 0 ? 1000 : _c,\n    record = props.record,\n    reference = props.reference,\n    _d = props.sort,\n    sort = _d === void 0 ? defaultSort : _d,\n    source = props.source;\n  var notify = useNotify();\n  var value = get(record, source);\n  var ids = useMemo(function () {\n    if (Array.isArray(value)) return value;\n    console.warn(\"Value of field '\".concat(source, \"' is not an array.\"), value);\n    return emptyArray;\n  }, [value, source]);\n  var _e = useGetManyAggregate(reference, {\n      ids: ids\n    }, {\n      onError: function (error) {\n        return notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n          type: 'error',\n          messageArgs: {\n            _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n          }\n        });\n      }\n    }),\n    data = _e.data,\n    error = _e.error,\n    isLoading = _e.isLoading,\n    isFetching = _e.isFetching,\n    refetch = _e.refetch;\n  var listProps = useList({\n    data: data,\n    error: error,\n    filter: filter,\n    isFetching: isFetching,\n    isLoading: isLoading,\n    page: page,\n    perPage: perPage,\n    sort: sort\n  });\n  return __assign(__assign({}, listProps), {\n    defaultTitle: null,\n    refetch: refetch,\n    resource: reference\n  });\n};","map":{"version":3,"names":["get","useMemo","useGetManyAggregate","useList","useNotify","emptyArray","defaultFilter","defaultSort","field","order","useReferenceArrayFieldController","props","_a","filter","_b","page","_c","perPage","record","reference","_d","sort","source","notify","value","ids","Array","isArray","console","warn","concat","_e","onError","error","message","type","messageArgs","_","undefined","data","isLoading","isFetching","refetch","listProps","__assign","defaultTitle","resource"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/controller/field/useReferenceArrayFieldController.ts"],"sourcesContent":["import get from 'lodash/get';\nimport { useMemo } from 'react';\nimport { RaRecord, SortPayload } from '../../types';\nimport { useGetManyAggregate } from '../../dataProvider';\nimport { ListControllerResult, useList } from '../list';\nimport { useNotify } from '../../notification';\n\nexport interface UseReferenceArrayFieldControllerParams {\n    filter?: any;\n    page?: number;\n    perPage?: number;\n    record?: RaRecord;\n    reference: string;\n    resource: string;\n    sort?: SortPayload;\n    source: string;\n}\n\nconst emptyArray = [];\nconst defaultFilter = {};\nconst defaultSort = { field: null, order: null };\n\n/**\n * Hook that fetches records from another resource specified\n * by an array of *ids* in current record.\n *\n * @example\n *\n * const { data, error, isFetching, isLoading } = useReferenceArrayFieldController({\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @returns {ListControllerResult} The reference props\n */\nexport const useReferenceArrayFieldController = (\n    props: UseReferenceArrayFieldControllerParams\n): ListControllerResult => {\n    const {\n        filter = defaultFilter,\n        page = 1,\n        perPage = 1000,\n        record,\n        reference,\n        sort = defaultSort,\n        source,\n    } = props;\n    const notify = useNotify();\n    const value = get(record, source);\n\n    const ids = useMemo(() => {\n        if (Array.isArray(value)) return value;\n        console.warn(`Value of field '${source}' is not an array.`, value);\n        return emptyArray;\n    }, [value, source]);\n\n    const { data, error, isLoading, isFetching, refetch } = useGetManyAggregate(\n        reference,\n        { ids },\n        {\n            onError: error =>\n                notify(\n                    typeof error === 'string'\n                        ? error\n                        : error.message || 'ra.notification.http_error',\n                    {\n                        type: 'error',\n                        messageArgs: {\n                            _:\n                                typeof error === 'string'\n                                    ? error\n                                    : error && error.message\n                                    ? error.message\n                                    : undefined,\n                        },\n                    }\n                ),\n        }\n    );\n\n    const listProps = useList({\n        data,\n        error,\n        filter,\n        isFetching,\n        isLoading,\n        page,\n        perPage,\n        sort,\n    });\n\n    return {\n        ...listProps,\n        defaultTitle: null,\n        refetch,\n        resource: reference,\n    };\n};\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAG,MAAM,YAAY;AAC5B,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,SAA+BC,OAAO,QAAQ,SAAS;AACvD,SAASC,SAAS,QAAQ,oBAAoB;AAa9C,IAAMC,UAAU,GAAG,EAAE;AACrB,IAAMC,aAAa,GAAG,EAAE;AACxB,IAAMC,WAAW,GAAG;EAAEC,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAI,CAAE;AAEhD;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,IAAMC,gCAAgC,GAAG,SAAAA,CAC5CC,KAA6C;EAGzC,IAAAC,EAAA,GAOAD,KAAK,CAAAE,MAPiB;IAAtBA,MAAM,GAAAD,EAAA,cAAGN,aAAa,GAAAM,EAAA;IACtBE,EAAA,GAMAH,KAAK,CAAAI,IANG;IAARA,IAAI,GAAAD,EAAA,cAAG,CAAC,GAAAA,EAAA;IACRE,EAAA,GAKAL,KAAK,CAAAM,OALS;IAAdA,OAAO,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IACdE,MAAM,GAINP,KAAK,CAAAO,MAJC;IACNC,SAAS,GAGTR,KAAK,CAAAQ,SAHI;IACTC,EAAA,GAEAT,KAAK,CAAAU,IAFa;IAAlBA,IAAI,GAAAD,EAAA,cAAGb,WAAW,GAAAa,EAAA;IAClBE,MAAM,GACNX,KAAK,CAAAW,MADC;EAEV,IAAMC,MAAM,GAAGnB,SAAS,EAAE;EAC1B,IAAMoB,KAAK,GAAGxB,GAAG,CAACkB,MAAM,EAAEI,MAAM,CAAC;EAEjC,IAAMG,GAAG,GAAGxB,OAAO,CAAC;IAChB,IAAIyB,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE,OAAOA,KAAK;IACtCI,OAAO,CAACC,IAAI,CAAC,mBAAAC,MAAA,CAAmBR,MAAM,uBAAoB,EAAEE,KAAK,CAAC;IAClE,OAAOnB,UAAU;EACrB,CAAC,EAAE,CAACmB,KAAK,EAAEF,MAAM,CAAC,CAAC;EAEb,IAAAS,EAAA,GAAkD7B,mBAAmB,CACvEiB,SAAS,EACT;MAAEM,GAAG,EAAAA;IAAA,CAAE,EACP;MACIO,OAAO,EAAE,SAAAA,CAAAC,KAAK;QACV,OAAAV,MAAM,CACF,OAAOU,KAAK,KAAK,QAAQ,GACnBA,KAAK,GACLA,KAAK,CAACC,OAAO,IAAI,4BAA4B,EACnD;UACIC,IAAI,EAAE,OAAO;UACbC,WAAW,EAAE;YACTC,CAAC,EACG,OAAOJ,KAAK,KAAK,QAAQ,GACnBA,KAAK,GACLA,KAAK,IAAIA,KAAK,CAACC,OAAO,GACtBD,KAAK,CAACC,OAAO,GACbI;;SAEjB,CACJ;MAfD;KAgBP,CACJ;IAtBOC,IAAI,GAAAR,EAAA,CAAAQ,IAAA;IAAEN,KAAK,GAAAF,EAAA,CAAAE,KAAA;IAAEO,SAAS,GAAAT,EAAA,CAAAS,SAAA;IAAEC,UAAU,GAAAV,EAAA,CAAAU,UAAA;IAAEC,OAAO,GAAAX,EAAA,CAAAW,OAsBlD;EAED,IAAMC,SAAS,GAAGxC,OAAO,CAAC;IACtBoC,IAAI,EAAAA,IAAA;IACJN,KAAK,EAAAA,KAAA;IACLpB,MAAM,EAAAA,MAAA;IACN4B,UAAU,EAAAA,UAAA;IACVD,SAAS,EAAAA,SAAA;IACTzB,IAAI,EAAAA,IAAA;IACJE,OAAO,EAAAA,OAAA;IACPI,IAAI,EAAAA;GACP,CAAC;EAEF,OAAAuB,QAAA,CAAAA,QAAA,KACOD,SAAS;IACZE,YAAY,EAAE,IAAI;IAClBH,OAAO,EAAAA,OAAA;IACPI,QAAQ,EAAE3B;EAAS;AAE3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}