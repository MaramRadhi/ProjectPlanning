{"ast":null,"code":"import React from 'react';\nimport { Tooltip, IconButton } from '@mui/material';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { useTranslate } from 'ra-core';\nimport { useTheme } from '../layout';\n/**\n * Button toggling the theme (light or dark).\n *\n * @example\n * import { AppBar, TitlePortal, ToggleThemeButton } from 'react-admin';\n *\n * const MyAppBar = () => (\n *     <AppBar>\n *         <TitlePortal />\n *         <ToggleThemeButton lightTheme={lightTheme} darkTheme={darkTheme} />\n *     </AppBar>\n * );\n *\n * const MyLayout = props => <Layout {...props} appBar={MyAppBar} />;\n */\nexport var ToggleThemeButton = function (props) {\n  var translate = useTranslate();\n  var darkTheme = props.darkTheme,\n    lightTheme = props.lightTheme;\n  var _a = useTheme(),\n    theme = _a[0],\n    setTheme = _a[1];\n  var handleTogglePaletteType = function () {\n    setTheme((theme === null || theme === void 0 ? void 0 : theme.palette.mode) === 'dark' ? lightTheme : darkTheme);\n  };\n  var toggleThemeTitle = translate('ra.action.toggle_theme', {\n    _: 'Toggle Theme'\n  });\n  return React.createElement(Tooltip, {\n    title: toggleThemeTitle,\n    enterDelay: 300\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: handleTogglePaletteType,\n    \"aria-label\": toggleThemeTitle\n  }, (theme === null || theme === void 0 ? void 0 : theme.palette.mode) === 'dark' ? React.createElement(Brightness7Icon, null) : React.createElement(Brightness4Icon, null)));\n};","map":{"version":3,"names":["React","Tooltip","IconButton","Brightness4Icon","Brightness7Icon","useTranslate","useTheme","ToggleThemeButton","props","translate","darkTheme","lightTheme","_a","theme","setTheme","handleTogglePaletteType","palette","mode","toggleThemeTitle","_","createElement","title","enterDelay","color","onClick"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/button/ToggleThemeButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Tooltip, IconButton } from '@mui/material';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { useTranslate } from 'ra-core';\nimport { useTheme } from '../layout';\nimport { RaThemeOptions } from '..';\n\n/**\n * Button toggling the theme (light or dark).\n *\n * @example\n * import { AppBar, TitlePortal, ToggleThemeButton } from 'react-admin';\n *\n * const MyAppBar = () => (\n *     <AppBar>\n *         <TitlePortal />\n *         <ToggleThemeButton lightTheme={lightTheme} darkTheme={darkTheme} />\n *     </AppBar>\n * );\n *\n * const MyLayout = props => <Layout {...props} appBar={MyAppBar} />;\n */\nexport const ToggleThemeButton = (props: ToggleThemeButtonProps) => {\n    const translate = useTranslate();\n    const { darkTheme, lightTheme } = props;\n    const [theme, setTheme] = useTheme();\n\n    const handleTogglePaletteType = (): void => {\n        setTheme(theme?.palette.mode === 'dark' ? lightTheme : darkTheme);\n    };\n    const toggleThemeTitle = translate('ra.action.toggle_theme', {\n        _: 'Toggle Theme',\n    });\n\n    return (\n        <Tooltip title={toggleThemeTitle} enterDelay={300}>\n            <IconButton\n                color=\"inherit\"\n                onClick={handleTogglePaletteType}\n                aria-label={toggleThemeTitle}\n            >\n                {theme?.palette.mode === 'dark' ? (\n                    <Brightness7Icon />\n                ) : (\n                    <Brightness4Icon />\n                )}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport interface ToggleThemeButtonProps {\n    darkTheme: RaThemeOptions;\n    lightTheme?: RaThemeOptions;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,UAAU,QAAQ,eAAe;AACnD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,YAAY,QAAQ,SAAS;AACtC,SAASC,QAAQ,QAAQ,WAAW;AAGpC;;;;;;;;;;;;;;;AAeA,OAAO,IAAMC,iBAAiB,GAAG,SAAAA,CAACC,KAA6B;EAC3D,IAAMC,SAAS,GAAGJ,YAAY,EAAE;EACxB,IAAAK,SAAS,GAAiBF,KAAK,CAAAE,SAAtB;IAAEC,UAAU,GAAKH,KAAK,CAAAG,UAAV;EACvB,IAAAC,EAAA,GAAoBN,QAAQ,EAAE;IAA7BO,KAAK,GAAAD,EAAA;IAAEE,QAAQ,GAAAF,EAAA,GAAc;EAEpC,IAAMG,uBAAuB,GAAG,SAAAA,CAAA;IAC5BD,QAAQ,CAAC,CAAAD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,OAAO,CAACC,IAAI,MAAK,MAAM,GAAGN,UAAU,GAAGD,SAAS,CAAC;EACrE,CAAC;EACD,IAAMQ,gBAAgB,GAAGT,SAAS,CAAC,wBAAwB,EAAE;IACzDU,CAAC,EAAE;GACN,CAAC;EAEF,OACInB,KAAA,CAAAoB,aAAA,CAACnB,OAAO;IAACoB,KAAK,EAAEH,gBAAgB;IAAEI,UAAU,EAAE;EAAG,GAC7CtB,KAAA,CAAAoB,aAAA,CAAClB,UAAU;IACPqB,KAAK,EAAC,SAAS;IACfC,OAAO,EAAET,uBAAuB;IAAA,cACpBG;EAAgB,GAE3B,CAAAL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,OAAO,CAACC,IAAI,MAAK,MAAM,GAC3BjB,KAAA,CAAAoB,aAAA,CAAChB,eAAe,OAAG,GAEnBJ,KAAA,CAAAoB,aAAA,CAACjB,eAAe,OACnB,CACQ,CACP;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}