{"ast":null,"code":"import * as React from 'react';\nimport { isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { ResourceContextProvider } from './ResourceContextProvider';\nexport var Resource = function (props) {\n  var Create = props.create,\n    Edit = props.edit,\n    List = props.list,\n    name = props.name,\n    Show = props.show;\n  return React.createElement(ResourceContextProvider, {\n    value: name\n  }, React.createElement(Routes, null, Create && React.createElement(Route, {\n    path: \"create/*\",\n    element: isValidElement(Create) ? Create : React.createElement(Create, null)\n  }), Show && React.createElement(Route, {\n    path: \":id/show/*\",\n    element: isValidElement(Show) ? Show : React.createElement(Show, null)\n  }), Edit && React.createElement(Route, {\n    path: \":id/*\",\n    element: isValidElement(Edit) ? Edit : React.createElement(Edit, null)\n  }), List && React.createElement(Route, {\n    path: \"/*\",\n    element: isValidElement(List) ? List : React.createElement(List, null)\n  }), props.children));\n};\nResource.raName = 'Resource';\nResource.registerResource = function (_a) {\n  var create = _a.create,\n    edit = _a.edit,\n    icon = _a.icon,\n    list = _a.list,\n    name = _a.name,\n    options = _a.options,\n    show = _a.show,\n    recordRepresentation = _a.recordRepresentation,\n    hasCreate = _a.hasCreate,\n    hasEdit = _a.hasEdit,\n    hasShow = _a.hasShow;\n  return {\n    name: name,\n    options: options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon: icon,\n    recordRepresentation: recordRepresentation\n  };\n};","map":{"version":3,"names":["React","isValidElement","Route","Routes","ResourceContextProvider","Resource","props","Create","create","Edit","edit","List","list","name","Show","show","createElement","value","path","element","children","raName","registerResource","_a","icon","options","recordRepresentation","hasCreate","hasEdit","hasShow","hasList"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/core/Resource.tsx"],"sourcesContent":["import * as React from 'react';\nimport { isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { ResourceProps } from '../types';\nimport { ResourceContextProvider } from './ResourceContextProvider';\n\nexport const Resource = (props: ResourceProps) => {\n    const { create: Create, edit: Edit, list: List, name, show: Show } = props;\n\n    return (\n        <ResourceContextProvider value={name}>\n            <Routes>\n                {Create && (\n                    <Route\n                        path=\"create/*\"\n                        element={isValidElement(Create) ? Create : <Create />}\n                    />\n                )}\n                {Show && (\n                    <Route\n                        path=\":id/show/*\"\n                        element={isValidElement(Show) ? Show : <Show />}\n                    />\n                )}\n                {Edit && (\n                    <Route\n                        path=\":id/*\"\n                        element={isValidElement(Edit) ? Edit : <Edit />}\n                    />\n                )}\n                {List && (\n                    <Route\n                        path=\"/*\"\n                        element={isValidElement(List) ? List : <List />}\n                    />\n                )}\n                {props.children}\n            </Routes>\n        </ResourceContextProvider>\n    );\n};\n\nResource.raName = 'Resource';\n\nResource.registerResource = ({\n    create,\n    edit,\n    icon,\n    list,\n    name,\n    options,\n    show,\n    recordRepresentation,\n    hasCreate,\n    hasEdit,\n    hasShow,\n}: ResourceProps) => ({\n    name,\n    options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon,\n    recordRepresentation,\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAGhD,SAASC,uBAAuB,QAAQ,2BAA2B;AAEnE,OAAO,IAAMC,QAAQ,GAAG,SAAAA,CAACC,KAAoB;EACjC,IAAQC,MAAM,GAA+CD,KAAK,CAAAE,MAApD;IAAQC,IAAI,GAAmCH,KAAK,CAAAI,IAAxC;IAAQC,IAAI,GAAuBL,KAAK,CAAAM,IAA5B;IAAEC,IAAI,GAAiBP,KAAK,CAAAO,IAAtB;IAAQC,IAAI,GAAKR,KAAK,CAAAS,IAAV;EAEhE,OACIf,KAAA,CAAAgB,aAAA,CAACZ,uBAAuB;IAACa,KAAK,EAAEJ;EAAI,GAChCb,KAAA,CAAAgB,aAAA,CAACb,MAAM,QACFI,MAAM,IACHP,KAAA,CAAAgB,aAAA,CAACd,KAAK;IACFgB,IAAI,EAAC,UAAU;IACfC,OAAO,EAAElB,cAAc,CAACM,MAAM,CAAC,GAAGA,MAAM,GAAGP,KAAA,CAAAgB,aAAA,CAACT,MAAM;EAAG,EAE5D,EACAO,IAAI,IACDd,KAAA,CAAAgB,aAAA,CAACd,KAAK;IACFgB,IAAI,EAAC,YAAY;IACjBC,OAAO,EAAElB,cAAc,CAACa,IAAI,CAAC,GAAGA,IAAI,GAAGd,KAAA,CAAAgB,aAAA,CAACF,IAAI;EAAG,EAEtD,EACAL,IAAI,IACDT,KAAA,CAAAgB,aAAA,CAACd,KAAK;IACFgB,IAAI,EAAC,OAAO;IACZC,OAAO,EAAElB,cAAc,CAACQ,IAAI,CAAC,GAAGA,IAAI,GAAGT,KAAA,CAAAgB,aAAA,CAACP,IAAI;EAAG,EAEtD,EACAE,IAAI,IACDX,KAAA,CAAAgB,aAAA,CAACd,KAAK;IACFgB,IAAI,EAAC,IAAI;IACTC,OAAO,EAAElB,cAAc,CAACU,IAAI,CAAC,GAAGA,IAAI,GAAGX,KAAA,CAAAgB,aAAA,CAACL,IAAI;EAAG,EAEtD,EACAL,KAAK,CAACc,QAAQ,CACV,CACa;AAElC,CAAC;AAEDf,QAAQ,CAACgB,MAAM,GAAG,UAAU;AAE5BhB,QAAQ,CAACiB,gBAAgB,GAAG,UAACC,EAYb;MAXZf,MAAM,GAAAe,EAAA,CAAAf,MAAA;IACNE,IAAI,GAAAa,EAAA,CAAAb,IAAA;IACJc,IAAI,GAAAD,EAAA,CAAAC,IAAA;IACJZ,IAAI,GAAAW,EAAA,CAAAX,IAAA;IACJC,IAAI,GAAAU,EAAA,CAAAV,IAAA;IACJY,OAAO,GAAAF,EAAA,CAAAE,OAAA;IACPV,IAAI,GAAAQ,EAAA,CAAAR,IAAA;IACJW,oBAAoB,GAAAH,EAAA,CAAAG,oBAAA;IACpBC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IACTC,OAAO,GAAAL,EAAA,CAAAK,OAAA;IACPC,OAAO,GAAAN,EAAA,CAAAM,OAAA;EACU,OAAC;IAClBhB,IAAI,EAAAA,IAAA;IACJY,OAAO,EAAAA,OAAA;IACPK,OAAO,EAAE,CAAC,CAAClB,IAAI;IACfe,SAAS,EAAE,CAAC,CAACnB,MAAM,IAAI,CAAC,CAACmB,SAAS;IAClCC,OAAO,EAAE,CAAC,CAAClB,IAAI,IAAI,CAAC,CAACkB,OAAO;IAC5BC,OAAO,EAAE,CAAC,CAACd,IAAI,IAAI,CAAC,CAACc,OAAO;IAC5BL,IAAI,EAAAA,IAAA;IACJE,oBAAoB,EAAAA;GACvB;AAToB,CASnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}