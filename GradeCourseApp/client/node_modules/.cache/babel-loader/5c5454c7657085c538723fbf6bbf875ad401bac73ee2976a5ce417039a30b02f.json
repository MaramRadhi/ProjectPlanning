{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useState, useEffect } from 'react';\nimport { usePreference } from './usePreference';\n/**\n * Get the props for a preference input that changes the value on blur\n *\n * Relies on `usePreference`, so it's using the PreferenceKeyContext\n *\n * @example\n * const FontSizePreferenceInput = () => {\n *     const field = usePreferenceInput('ui.font.size', 10);\n *     return (\n *         <div>\n *             <label for=\"font-size\">Font size</label>\n *             <input id=\"font-size\" {...field} />\n *         </div>\n *     );\n * }\n */\nexport var usePreferenceInput = function (key, defaultValue) {\n  var _a = usePreference(key, defaultValue),\n    valueFromStore = _a[0],\n    setValueFromStore = _a[1];\n  var _b = useState(valueFromStore),\n    value = _b[0],\n    setValue = _b[1];\n  useEffect(function () {\n    setValue(valueFromStore || defaultValue);\n  }, [valueFromStore, defaultValue]);\n  var onChange = function (event) {\n    setValue(event.target.value === '' ? defaultValue : event.target.value);\n  };\n  var onBlur = function () {\n    setValueFromStore(value);\n  };\n  var onKeyDown = function (event) {\n    var _a;\n    if (event.key === 'Enter') {\n      setValueFromStore(value);\n      var form = event.target.form;\n      if (form) {\n        var index = __spreadArray([], form, true).indexOf(event.target);\n        (_a = form.elements[index + 1]) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n      event.preventDefault();\n    }\n  };\n  return {\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown\n  };\n};","map":{"version":3,"names":["useState","useEffect","usePreference","usePreferenceInput","key","defaultValue","_a","valueFromStore","setValueFromStore","_b","value","setValue","onChange","event","target","onBlur","onKeyDown","form","index","__spreadArray","indexOf","elements","focus","preventDefault"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/preferences/usePreferenceInput.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { usePreference } from './usePreference';\n\n/**\n * Get the props for a preference input that changes the value on blur\n *\n * Relies on `usePreference`, so it's using the PreferenceKeyContext\n *\n * @example\n * const FontSizePreferenceInput = () => {\n *     const field = usePreferenceInput('ui.font.size', 10);\n *     return (\n *         <div>\n *             <label for=\"font-size\">Font size</label>\n *             <input id=\"font-size\" {...field} />\n *         </div>\n *     );\n * }\n */\nexport const usePreferenceInput = (key?: string, defaultValue?: any) => {\n    const [valueFromStore, setValueFromStore] = usePreference(\n        key,\n        defaultValue\n    );\n    const [value, setValue] = useState(valueFromStore);\n    useEffect(() => {\n        setValue(valueFromStore || defaultValue);\n    }, [valueFromStore, defaultValue]);\n\n    const onChange = event => {\n        setValue(event.target.value === '' ? defaultValue : event.target.value);\n    };\n\n    const onBlur = () => {\n        setValueFromStore(value);\n    };\n\n    const onKeyDown = event => {\n        if (event.key === 'Enter') {\n            setValueFromStore(value);\n            const form = event.target.form;\n            if (form) {\n                const index = [...form].indexOf(event.target);\n                form.elements[index + 1]?.focus();\n            }\n            event.preventDefault();\n        }\n    };\n\n    return { value, onChange, onBlur, onKeyDown };\n};\n"],"mappings":";;;;;;;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,aAAa,QAAQ,iBAAiB;AAE/C;;;;;;;;;;;;;;;;AAgBA,OAAO,IAAMC,kBAAkB,GAAG,SAAAA,CAACC,GAAY,EAAEC,YAAkB;EACzD,IAAAC,EAAA,GAAsCJ,aAAa,CACrDE,GAAG,EACHC,YAAY,CACf;IAHME,cAAc,GAAAD,EAAA;IAAEE,iBAAiB,GAAAF,EAAA,GAGvC;EACK,IAAAG,EAAA,GAAoBT,QAAQ,CAACO,cAAc,CAAC;IAA3CG,KAAK,GAAAD,EAAA;IAAEE,QAAQ,GAAAF,EAAA,GAA4B;EAClDR,SAAS,CAAC;IACNU,QAAQ,CAACJ,cAAc,IAAIF,YAAY,CAAC;EAC5C,CAAC,EAAE,CAACE,cAAc,EAAEF,YAAY,CAAC,CAAC;EAElC,IAAMO,QAAQ,GAAG,SAAAA,CAAAC,KAAK;IAClBF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACJ,KAAK,KAAK,EAAE,GAAGL,YAAY,GAAGQ,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC3E,CAAC;EAED,IAAMK,MAAM,GAAG,SAAAA,CAAA;IACXP,iBAAiB,CAACE,KAAK,CAAC;EAC5B,CAAC;EAED,IAAMM,SAAS,GAAG,SAAAA,CAAAH,KAAK;;IACnB,IAAIA,KAAK,CAACT,GAAG,KAAK,OAAO,EAAE;MACvBI,iBAAiB,CAACE,KAAK,CAAC;MACxB,IAAMO,IAAI,GAAGJ,KAAK,CAACC,MAAM,CAACG,IAAI;MAC9B,IAAIA,IAAI,EAAE;QACN,IAAMC,KAAK,GAAGC,aAAA,KAAIF,IAAI,QAAEG,OAAO,CAACP,KAAK,CAACC,MAAM,CAAC;QAC7C,CAAAR,EAAA,GAAAW,IAAI,CAACI,QAAQ,CAACH,KAAK,GAAG,CAAC,CAAC,cAAAZ,EAAA,uBAAAA,EAAA,CAAEgB,KAAK,EAAE;;MAErCT,KAAK,CAACU,cAAc,EAAE;;EAE9B,CAAC;EAED,OAAO;IAAEb,KAAK,EAAAA,KAAA;IAAEE,QAAQ,EAAAA,QAAA;IAAEG,MAAM,EAAAA,MAAA;IAAEC,SAAS,EAAAA;EAAA,CAAE;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}