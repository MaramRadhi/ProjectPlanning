{"ast":null,"code":"import * as React from 'react';\nimport { useMemo } from 'react';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { AdminRouter } from '../routing';\nimport { AuthContext, convertLegacyAuthProvider } from '../auth';\nimport { DataProviderContext, convertLegacyDataProvider, defaultDataProvider } from '../dataProvider';\nimport { StoreContextProvider, memoryStore } from '../store';\nimport { PreferencesEditorContextProvider } from '../preferences/PreferencesEditorContextProvider';\nimport { I18nContextProvider } from '../i18n';\nimport { ResourceDefinitionContextProvider } from './ResourceDefinitionContext';\nimport { NotificationContextProvider } from '../notification';\nexport var CoreAdminContext = function (props) {\n  var authProvider = props.authProvider,\n    basename = props.basename,\n    dataProvider = props.dataProvider,\n    i18nProvider = props.i18nProvider,\n    store = props.store,\n    children = props.children,\n    history = props.history,\n    queryClient = props.queryClient;\n  if (!dataProvider) {\n    throw new Error(\"Missing dataProvider prop.\\nReact-admin requires a valid dataProvider function to work.\");\n  }\n  var finalQueryClient = useMemo(function () {\n    return queryClient || new QueryClient();\n  }, [queryClient]);\n  var finalAuthProvider = useMemo(function () {\n    return authProvider instanceof Function ? convertLegacyAuthProvider(authProvider) : authProvider;\n  }, [authProvider]);\n  var finalDataProvider = useMemo(function () {\n    return dataProvider instanceof Function ? convertLegacyDataProvider(dataProvider) : dataProvider;\n  }, [dataProvider]);\n  return React.createElement(AuthContext.Provider, {\n    value: finalAuthProvider\n  }, React.createElement(DataProviderContext.Provider, {\n    value: finalDataProvider\n  }, React.createElement(StoreContextProvider, {\n    value: store\n  }, React.createElement(PreferencesEditorContextProvider, null, React.createElement(QueryClientProvider, {\n    client: finalQueryClient\n  }, React.createElement(AdminRouter, {\n    history: history,\n    basename: basename\n  }, React.createElement(I18nContextProvider, {\n    value: i18nProvider\n  }, React.createElement(NotificationContextProvider, null, React.createElement(ResourceDefinitionContextProvider, null, children)))))))));\n};\nCoreAdminContext.defaultProps = {\n  dataProvider: defaultDataProvider,\n  store: memoryStore()\n};","map":{"version":3,"names":["React","useMemo","QueryClientProvider","QueryClient","AdminRouter","AuthContext","convertLegacyAuthProvider","DataProviderContext","convertLegacyDataProvider","defaultDataProvider","StoreContextProvider","memoryStore","PreferencesEditorContextProvider","I18nContextProvider","ResourceDefinitionContextProvider","NotificationContextProvider","CoreAdminContext","props","authProvider","basename","dataProvider","i18nProvider","store","children","history","queryClient","Error","finalQueryClient","finalAuthProvider","Function","finalDataProvider","createElement","Provider","value","client","defaultProps"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/core/CoreAdminContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { History } from 'history';\n\nimport { AdminRouter } from '../routing';\nimport { AuthContext, convertLegacyAuthProvider } from '../auth';\nimport {\n    DataProviderContext,\n    convertLegacyDataProvider,\n    defaultDataProvider,\n} from '../dataProvider';\nimport { StoreContextProvider, Store, memoryStore } from '../store';\nimport { PreferencesEditorContextProvider } from '../preferences/PreferencesEditorContextProvider';\nimport { I18nContextProvider } from '../i18n';\nimport { ResourceDefinitionContextProvider } from './ResourceDefinitionContext';\nimport { NotificationContextProvider } from '../notification';\nimport {\n    AuthProvider,\n    LegacyAuthProvider,\n    I18nProvider,\n    DataProvider,\n    AdminChildren,\n    DashboardComponent,\n    LegacyDataProvider,\n} from '../types';\n\nexport interface CoreAdminContextProps {\n    authProvider?: AuthProvider | LegacyAuthProvider;\n    basename?: string;\n    children?: AdminChildren;\n    dashboard?: DashboardComponent;\n    dataProvider?: DataProvider | LegacyDataProvider;\n    store?: Store;\n    queryClient?: QueryClient;\n    /**\n     * @deprecated Wrap your Admin inside a Router to change the routing strategy\n     */\n    history?: History;\n    i18nProvider?: I18nProvider;\n    theme?: object;\n}\n\nexport const CoreAdminContext = (props: CoreAdminContextProps) => {\n    const {\n        authProvider,\n        basename,\n        dataProvider,\n        i18nProvider,\n        store,\n        children,\n        history,\n        queryClient,\n    } = props;\n\n    if (!dataProvider) {\n        throw new Error(`Missing dataProvider prop.\nReact-admin requires a valid dataProvider function to work.`);\n    }\n\n    const finalQueryClient = useMemo(() => queryClient || new QueryClient(), [\n        queryClient,\n    ]);\n\n    const finalAuthProvider = useMemo(\n        () =>\n            authProvider instanceof Function\n                ? convertLegacyAuthProvider(authProvider)\n                : authProvider,\n        [authProvider]\n    );\n\n    const finalDataProvider = useMemo(\n        () =>\n            dataProvider instanceof Function\n                ? convertLegacyDataProvider(dataProvider)\n                : dataProvider,\n        [dataProvider]\n    );\n\n    return (\n        <AuthContext.Provider value={finalAuthProvider}>\n            <DataProviderContext.Provider value={finalDataProvider}>\n                <StoreContextProvider value={store}>\n                    <PreferencesEditorContextProvider>\n                        <QueryClientProvider client={finalQueryClient}>\n                            <AdminRouter history={history} basename={basename}>\n                                <I18nContextProvider value={i18nProvider}>\n                                    <NotificationContextProvider>\n                                        <ResourceDefinitionContextProvider>\n                                            {children}\n                                        </ResourceDefinitionContextProvider>\n                                    </NotificationContextProvider>\n                                </I18nContextProvider>\n                            </AdminRouter>\n                        </QueryClientProvider>\n                    </PreferencesEditorContextProvider>\n                </StoreContextProvider>\n            </DataProviderContext.Provider>\n        </AuthContext.Provider>\n    );\n};\n\nCoreAdminContext.defaultProps = {\n    dataProvider: defaultDataProvider,\n    store: memoryStore(),\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,aAAa;AAG9D,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,WAAW,EAAEC,yBAAyB,QAAQ,SAAS;AAChE,SACIC,mBAAmB,EACnBC,yBAAyB,EACzBC,mBAAmB,QAChB,iBAAiB;AACxB,SAASC,oBAAoB,EAASC,WAAW,QAAQ,UAAU;AACnE,SAASC,gCAAgC,QAAQ,iDAAiD;AAClG,SAASC,mBAAmB,QAAQ,SAAS;AAC7C,SAASC,iCAAiC,QAAQ,6BAA6B;AAC/E,SAASC,2BAA2B,QAAQ,iBAAiB;AA2B7D,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAACC,KAA4B;EAErD,IAAAC,YAAY,GAQZD,KAAK,CAAAC,YARO;IACZC,QAAQ,GAORF,KAAK,CAAAE,QAPG;IACRC,YAAY,GAMZH,KAAK,CAAAG,YANO;IACZC,YAAY,GAKZJ,KAAK,CAAAI,YALO;IACZC,KAAK,GAILL,KAAK,CAAAK,KAJA;IACLC,QAAQ,GAGRN,KAAK,CAAAM,QAHG;IACRC,OAAO,GAEPP,KAAK,CAAAO,OAFE;IACPC,WAAW,GACXR,KAAK,CAAAQ,WADM;EAGf,IAAI,CAACL,YAAY,EAAE;IACf,MAAM,IAAIM,KAAK,CAAC,yFACoC,CAAC;;EAGzD,IAAMC,gBAAgB,GAAG1B,OAAO,CAAC;IAAM,OAAAwB,WAAW,IAAI,IAAItB,WAAW,EAAE;EAAhC,CAAgC,EAAE,CACrEsB,WAAW,CACd,CAAC;EAEF,IAAMG,iBAAiB,GAAG3B,OAAO,CAC7B;IACI,OAAAiB,YAAY,YAAYW,QAAQ,GAC1BvB,yBAAyB,CAACY,YAAY,CAAC,GACvCA,YAAY;EAFlB,CAEkB,EACtB,CAACA,YAAY,CAAC,CACjB;EAED,IAAMY,iBAAiB,GAAG7B,OAAO,CAC7B;IACI,OAAAmB,YAAY,YAAYS,QAAQ,GAC1BrB,yBAAyB,CAACY,YAAY,CAAC,GACvCA,YAAY;EAFlB,CAEkB,EACtB,CAACA,YAAY,CAAC,CACjB;EAED,OACIpB,KAAA,CAAA+B,aAAA,CAAC1B,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAEL;EAAiB,GAC1C5B,KAAA,CAAA+B,aAAA,CAACxB,mBAAmB,CAACyB,QAAQ;IAACC,KAAK,EAAEH;EAAiB,GAClD9B,KAAA,CAAA+B,aAAA,CAACrB,oBAAoB;IAACuB,KAAK,EAAEX;EAAK,GAC9BtB,KAAA,CAAA+B,aAAA,CAACnB,gCAAgC,QAC7BZ,KAAA,CAAA+B,aAAA,CAAC7B,mBAAmB;IAACgC,MAAM,EAAEP;EAAgB,GACzC3B,KAAA,CAAA+B,aAAA,CAAC3B,WAAW;IAACoB,OAAO,EAAEA,OAAO;IAAEL,QAAQ,EAAEA;EAAQ,GAC7CnB,KAAA,CAAA+B,aAAA,CAAClB,mBAAmB;IAACoB,KAAK,EAAEZ;EAAY,GACpCrB,KAAA,CAAA+B,aAAA,CAAChB,2BAA2B,QACxBf,KAAA,CAAA+B,aAAA,CAACjB,iCAAiC,QAC7BS,QAAQ,CACuB,CACV,CACZ,CACZ,CACI,CACS,CAChB,CACI,CACZ;AAE/B,CAAC;AAEDP,gBAAgB,CAACmB,YAAY,GAAG;EAC5Bf,YAAY,EAAEX,mBAAmB;EACjCa,KAAK,EAAEX,WAAW;CACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}