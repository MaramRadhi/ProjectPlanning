{"ast":null,"code":"import { __assign } from '../_virtual/_tslib.js';\nimport { ActionType } from './actions.js';\n\n/**\n * Auth Reducer\n * Used in auth state\n * @param state\n * @param action\n */\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case ActionType.SignIn:\n      return __assign(__assign({}, state), {\n        auth: action.payload.auth,\n        refresh: action.payload.refresh,\n        userState: action.payload.userState,\n        isSignIn: true\n      });\n    case ActionType.SignOut:\n      return __assign(__assign({}, state), {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isSignIn: false\n      });\n    case ActionType.RefreshToken:\n      if (state.isSignIn && state.auth && state.refresh) {\n        return __assign(__assign({}, state), {\n          auth: {\n            token: action.payload.newAuthToken ? action.payload.newAuthToken : state.auth.token,\n            type: state.auth.type,\n            expiresAt: action.payload.newAuthTokenExpireIn ? new Date(new Date().getTime() + action.payload.newAuthTokenExpireIn * 60 * 1000) : state.auth.expiresAt\n          },\n          refresh: {\n            token: action.payload.newRefreshToken ? action.payload.newRefreshToken : state.refresh.token,\n            expiresAt: action.payload.newRefreshTokenExpiresIn ? new Date(new Date().getTime() + action.payload.newRefreshTokenExpiresIn * 60 * 1000) : state.refresh.expiresAt\n          },\n          userState: action.payload.newAuthUserState ? action.payload.newAuthUserState : state.userState\n        });\n      } else {\n        return state;\n      }\n  }\n}\n// Helper functions\n/**\n * used to make sign in\n * @param signInParams\n */\nfunction doSignIn(signInParams) {\n  return {\n    type: ActionType.SignIn,\n    payload: signInParams\n  };\n}\n/**\n * used to refresh the Token\n * @param refreshTokenParam\n */\nfunction doRefresh(refreshTokenParam) {\n  return {\n    type: ActionType.RefreshToken,\n    payload: refreshTokenParam\n  };\n}\n/**\n * Used to make sign out\n */\nfunction doSignOut() {\n  return {\n    type: ActionType.SignOut\n  };\n}\nexport { authReducer, doRefresh, doSignIn, doSignOut };","map":{"version":3,"names":["authReducer","state","action","type","ActionType","SignIn","__assign","auth","payload","refresh","userState","isSignIn","SignOut","RefreshToken","token","newAuthToken","expiresAt","newAuthTokenExpireIn","Date","getTime","newRefreshToken","newRefreshTokenExpiresIn","newAuthUserState","doSignIn","signInParams","doRefresh","refreshTokenParam","doSignOut"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/react-auth-kit/src/utils/reducers.ts"],"sourcesContent":["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Reducers for useReducer\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {AuthKitStateInterface} from '../types';\nimport {\n  ActionType,\n  AuthActions,\n  SignInAction,\n  SignInActionPayload,\n  SignOutAction,\n  RefreshTokenAction,\n  RefreshTokenActionPayload,\n} from './actions';\n\n/**\n * Auth Reducer\n * Used in auth state\n * @param state\n * @param action\n */\nexport function authReducer(state: AuthKitStateInterface,\n    action: AuthActions)\n  : AuthKitStateInterface {\n  switch (action.type) {\n    case ActionType.SignIn:\n      return {\n        ...state,\n        auth: action.payload.auth,\n        refresh: action.payload.refresh,\n        userState: action.payload.userState,\n        isSignIn: true,\n      };\n    case ActionType.SignOut:\n      return {\n        ...state,\n        auth: null,\n        refresh: null,\n        userState: null,\n        isSignIn: false,\n      };\n    case ActionType.RefreshToken:\n      if (state.isSignIn && state.auth && state.refresh) {\n        return {\n          ...state,\n          auth: {\n            token: action.payload.newAuthToken ?\n              action.payload.newAuthToken : state.auth.token,\n            type: state.auth.type,\n            expiresAt: action.payload.newAuthTokenExpireIn ?\n              new Date(new Date().getTime() +\n                action.payload.newAuthTokenExpireIn * 60 * 1000) :\n              state.auth.expiresAt,\n          },\n          refresh: {\n            token: action.payload.newRefreshToken ?\n              action.payload.newRefreshToken : state.refresh.token,\n            expiresAt: action.payload.newRefreshTokenExpiresIn ?\n              new Date(new Date().getTime() +\n                action.payload.newRefreshTokenExpiresIn * 60 * 1000) :\n              state.refresh.expiresAt,\n          },\n          userState: action.payload.newAuthUserState ?\n            action.payload.newAuthUserState : state.userState,\n        };\n      } else {\n        return state;\n      }\n  }\n}\n\n// Helper functions\n/**\n * used to make sign in\n * @param signInParams\n */\nexport function doSignIn(signInParams: SignInActionPayload): SignInAction {\n  return ({\n    type: ActionType.SignIn,\n    payload: signInParams,\n  });\n}\n\n/**\n * used to refresh the Token\n * @param refreshTokenParam\n */\nexport function doRefresh(refreshTokenParam: RefreshTokenActionPayload):\n  RefreshTokenAction {\n  return ({\n    type: ActionType.RefreshToken,\n    payload: refreshTokenParam,\n  });\n}\n\n/**\n * Used to make sign out\n */\nexport function doSignOut(): SignOutAction {\n  return ({\n    type: ActionType.SignOut,\n  });\n}\n"],"mappings":";;;AA8BA;;;;;AAKG;AACa,SAAAA,WAAWA,CAACC,KAA4B,EACpDC,MAAmB;EAErB,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKC,UAAU,CAACC,MAAM;MACpB,OAAAC,QAAA,CAAAA,QAAA,KACKL,KAAK;QACRM,IAAI,EAAEL,MAAM,CAACM,OAAO,CAACD,IAAI;QACzBE,OAAO,EAAEP,MAAM,CAACM,OAAO,CAACC,OAAO;QAC/BC,SAAS,EAAER,MAAM,CAACM,OAAO,CAACE,SAAS;QACnCC,QAAQ,EAAE;MAAI,CACd;IACJ,KAAKP,UAAU,CAACQ,OAAO;MACrB,OAAAN,QAAA,CAAAA,QAAA,KACKL,KAAK,CACR;QAAAM,IAAI,EAAE,IAAI;QACVE,OAAO,EAAE,IAAI;QACbC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE;MAAK,CACf;IACJ,KAAKP,UAAU,CAACS,YAAY;MAC1B,IAAIZ,KAAK,CAACU,QAAQ,IAAIV,KAAK,CAACM,IAAI,IAAIN,KAAK,CAACQ,OAAO,EAAE;QACjD,OACKH,QAAA,CAAAA,QAAA,KAAAL,KAAK,CACR;UAAAM,IAAI,EAAE;YACJO,KAAK,EAAEZ,MAAM,CAACM,OAAO,CAACO,YAAY,GAChCb,MAAM,CAACM,OAAO,CAACO,YAAY,GAAGd,KAAK,CAACM,IAAI,CAACO,KAAK;YAChDX,IAAI,EAAEF,KAAK,CAACM,IAAI,CAACJ,IAAI;YACrBa,SAAS,EAAEd,MAAM,CAACM,OAAO,CAACS,oBAAoB,GAC5C,IAAIC,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACC,OAAO,EAAE,GAC3BjB,MAAM,CAACM,OAAO,CAACS,oBAAoB,GAAG,EAAE,GAAG,IAAI,CAAC,GAClDhB,KAAK,CAACM,IAAI,CAACS;UACd;UACDP,OAAO,EAAE;YACPK,KAAK,EAAEZ,MAAM,CAACM,OAAO,CAACY,eAAe,GACnClB,MAAM,CAACM,OAAO,CAACY,eAAe,GAAGnB,KAAK,CAACQ,OAAO,CAACK,KAAK;YACtDE,SAAS,EAAEd,MAAM,CAACM,OAAO,CAACa,wBAAwB,GAChD,IAAIH,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACC,OAAO,EAAE,GAC3BjB,MAAM,CAACM,OAAO,CAACa,wBAAwB,GAAG,EAAE,GAAG,IAAI,CAAC,GACtDpB,KAAK,CAACQ,OAAO,CAACO;WACjB;UACDN,SAAS,EAAER,MAAM,CAACM,OAAO,CAACc,gBAAgB,GACxCpB,MAAM,CAACM,OAAO,CAACc,gBAAgB,GAAGrB,KAAK,CAACS;QAAS,CACnD;MACH,OAAM;QACL,OAAOT,KAAK;MACb;EAAA;AAEP;AAEA;AACA;;;AAGG;AACG,SAAUsB,QAAQA,CAACC,YAAiC;EACxD,OAAQ;IACNrB,IAAI,EAAEC,UAAU,CAACC,MAAM;IACvBG,OAAO,EAAEgB;EACV;AACH;AAEA;;;AAGG;AACG,SAAUC,SAASA,CAACC,iBAA4C;EAEpE,OAAQ;IACNvB,IAAI,EAAEC,UAAU,CAACS,YAAY;IAC7BL,OAAO,EAAEkB;EACV;AACH;AAEA;;AAEG;SACaC,SAASA,CAAA;EACvB,OAAQ;IACNxB,IAAI,EAAEC,UAAU,CAACQ;EAClB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}