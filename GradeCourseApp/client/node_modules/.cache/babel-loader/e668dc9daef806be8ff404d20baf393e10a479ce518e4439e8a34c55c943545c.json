{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { createContext, isValidElement, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport set from 'lodash/set';\n/**\n * This hook provides support for suggestion creation in inputs which have choices.\n *\n * @param options The hook option\n * @param {ReactElement} options.create A react element which will be rendered when users choose to create a new choice. This component must call the `useCreateSuggestionContext` hook which provides `onCancel`, `onCreate` and `filter`. See the examples.\n * @param {String} options.createLabel Optional. The label for the choice item allowing users to create a new choice. Can be a translation key. Defaults to `ra.action.create`.\n * @param {String} options.createItemLabel Optional. The label for the choice item allowing users to create a new choice when they already entered a filter. Can be a translation key. The translation will receive an `item` parameter. Defaults to `ra.action.create_item`.\n * @param {any} options.createValue Optional. The value for the choice item allowing users to create a new choice. Defaults to `@@ra-create`.\n * @param {String} options.filter Optional. The filter users may have already entered. Useful for autocomplete inputs for example.\n * @param {OnCreateHandler} options.onCreate Optional. A function which will be called when users choose to create a new choice, if the `create` option wasn't provided.\n * @param {Function} options.handleChange A function to pass to the input. Receives the same parameter as the original event handler and an additional newItem parameter if a new item was create.\n * @returns {UseSupportCreateValue} An object with the following properties:\n * - getCreateItem: a function which will return the label of the choice for create a new choice.\n * - createElement: a React element to render after the input. It will be rendered when users choose to create a new choice. It renders null otherwise.\n */\nexport var useSupportCreateSuggestion = function (options) {\n  var create = options.create,\n    _a = options.createLabel,\n    createLabel = _a === void 0 ? 'ra.action.create' : _a,\n    _b = options.createItemLabel,\n    createItemLabel = _b === void 0 ? 'ra.action.create_item' : _b,\n    _c = options.createValue,\n    createValue = _c === void 0 ? '@@ra-create' : _c,\n    _d = options.optionText,\n    optionText = _d === void 0 ? 'name' : _d,\n    filter = options.filter,\n    handleChange = options.handleChange,\n    onCreate = options.onCreate;\n  var translate = useTranslate();\n  var _e = useState(false),\n    renderOnCreate = _e[0],\n    setRenderOnCreate = _e[1];\n  var filterRef = useRef(filter);\n  useEffect(function () {\n    if (filterRef.current !== filter && filter !== '') {\n      filterRef.current = filter;\n    }\n  }, [filter]);\n  var context = useMemo(function () {\n    return {\n      filter: filterRef.current,\n      onCancel: function () {\n        return setRenderOnCreate(false);\n      },\n      onCreate: function (item) {\n        setRenderOnCreate(false);\n        handleChange(item);\n      }\n    };\n  }, [handleChange]);\n  return {\n    createId: createValue,\n    getCreateItem: function () {\n      if (typeof optionText !== 'string') {\n        return {\n          id: createValue,\n          name: filter && createItemLabel ? translate(createItemLabel, {\n            item: filter,\n            _: createItemLabel\n          }) : translate(createLabel, {\n            _: createLabel\n          })\n        };\n      }\n      return set({\n        id: createValue\n      }, optionText, filter && createItemLabel ? translate(createItemLabel, {\n        item: filter,\n        _: createItemLabel\n      }) : translate(createLabel, {\n        _: createLabel\n      }));\n    },\n    handleChange: function (eventOrValue) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var value, finalValue, newSuggestion;\n        var _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              value = ((_a = eventOrValue === null || eventOrValue === void 0 ? void 0 : eventOrValue.target) === null || _a === void 0 ? void 0 : _a.value) || eventOrValue;\n              finalValue = Array.isArray(value) ? __spreadArray([], value, true).pop() : value;\n              if (!((finalValue === null || finalValue === void 0 ? void 0 : finalValue.id) === createValue || finalValue === createValue)) return [3 /*break*/, 3];\n              if (!!isValidElement(create)) return [3 /*break*/, 2];\n              return [4 /*yield*/, onCreate(filter)];\n            case 1:\n              newSuggestion = _b.sent();\n              if (newSuggestion) {\n                handleChange(newSuggestion);\n                return [2 /*return*/];\n              }\n\n              return [3 /*break*/, 3];\n            case 2:\n              setRenderOnCreate(true);\n              return [2 /*return*/];\n            case 3:\n              handleChange(eventOrValue);\n              return [2 /*return*/];\n          }\n        });\n      });\n    },\n\n    createElement: renderOnCreate && isValidElement(create) ? React.createElement(CreateSuggestionContext.Provider, {\n      value: context\n    }, create) : null\n  };\n};\nvar CreateSuggestionContext = createContext(undefined);\nexport var useCreateSuggestionContext = function () {\n  return useContext(CreateSuggestionContext);\n};","map":{"version":3,"names":["React","createContext","isValidElement","useContext","useEffect","useMemo","useRef","useState","useTranslate","set","useSupportCreateSuggestion","options","create","_a","createLabel","_b","createItemLabel","_c","createValue","_d","optionText","filter","handleChange","onCreate","translate","_e","renderOnCreate","setRenderOnCreate","filterRef","current","context","onCancel","item","createId","getCreateItem","id","name","_","eventOrValue","__awaiter","value","target","finalValue","Array","isArray","__spreadArray","pop","newSuggestion","sent","createElement","CreateSuggestionContext","Provider","undefined","useCreateSuggestionContext"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/input/useSupportCreateSuggestion.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    ChangeEvent,\n    createContext,\n    isValidElement,\n    ReactElement,\n    useContext,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Identifier, OptionText, useTranslate } from 'ra-core';\nimport set from 'lodash/set';\n\n/**\n * This hook provides support for suggestion creation in inputs which have choices.\n *\n * @param options The hook option\n * @param {ReactElement} options.create A react element which will be rendered when users choose to create a new choice. This component must call the `useCreateSuggestionContext` hook which provides `onCancel`, `onCreate` and `filter`. See the examples.\n * @param {String} options.createLabel Optional. The label for the choice item allowing users to create a new choice. Can be a translation key. Defaults to `ra.action.create`.\n * @param {String} options.createItemLabel Optional. The label for the choice item allowing users to create a new choice when they already entered a filter. Can be a translation key. The translation will receive an `item` parameter. Defaults to `ra.action.create_item`.\n * @param {any} options.createValue Optional. The value for the choice item allowing users to create a new choice. Defaults to `@@ra-create`.\n * @param {String} options.filter Optional. The filter users may have already entered. Useful for autocomplete inputs for example.\n * @param {OnCreateHandler} options.onCreate Optional. A function which will be called when users choose to create a new choice, if the `create` option wasn't provided.\n * @param {Function} options.handleChange A function to pass to the input. Receives the same parameter as the original event handler and an additional newItem parameter if a new item was create.\n * @returns {UseSupportCreateValue} An object with the following properties:\n * - getCreateItem: a function which will return the label of the choice for create a new choice.\n * - createElement: a React element to render after the input. It will be rendered when users choose to create a new choice. It renders null otherwise.\n */\nexport const useSupportCreateSuggestion = (\n    options: SupportCreateSuggestionOptions\n): UseSupportCreateValue => {\n    const {\n        create,\n        createLabel = 'ra.action.create',\n        createItemLabel = 'ra.action.create_item',\n        createValue = '@@ra-create',\n        optionText = 'name',\n        filter,\n        handleChange,\n        onCreate,\n    } = options;\n    const translate = useTranslate();\n    const [renderOnCreate, setRenderOnCreate] = useState(false);\n    const filterRef = useRef(filter);\n\n    useEffect(() => {\n        if (filterRef.current !== filter && filter !== '') {\n            filterRef.current = filter;\n        }\n    }, [filter]);\n\n    const context = useMemo(\n        () => ({\n            filter: filterRef.current,\n            onCancel: () => setRenderOnCreate(false),\n            onCreate: item => {\n                setRenderOnCreate(false);\n                handleChange(item);\n            },\n        }),\n        [handleChange]\n    );\n\n    return {\n        createId: createValue,\n        getCreateItem: () => {\n            if (typeof optionText !== 'string') {\n                return {\n                    id: createValue,\n                    name:\n                        filter && createItemLabel\n                            ? translate(createItemLabel, {\n                                  item: filter,\n                                  _: createItemLabel,\n                              })\n                            : translate(createLabel, { _: createLabel }),\n                };\n            }\n            return set(\n                {\n                    id: createValue,\n                },\n                optionText,\n                filter && createItemLabel\n                    ? translate(createItemLabel, {\n                          item: filter,\n                          _: createItemLabel,\n                      })\n                    : translate(createLabel, { _: createLabel })\n            );\n        },\n        handleChange: async (eventOrValue: MouseEvent | any) => {\n            const value = eventOrValue?.target?.value || eventOrValue;\n            const finalValue = Array.isArray(value) ? [...value].pop() : value;\n\n            if (finalValue?.id === createValue || finalValue === createValue) {\n                if (!isValidElement(create)) {\n                    const newSuggestion = await onCreate(filter);\n                    if (newSuggestion) {\n                        handleChange(newSuggestion);\n                        return;\n                    }\n                } else {\n                    setRenderOnCreate(true);\n                    return;\n                }\n            }\n            handleChange(eventOrValue);\n        },\n        createElement:\n            renderOnCreate && isValidElement(create) ? (\n                <CreateSuggestionContext.Provider value={context}>\n                    {create}\n                </CreateSuggestionContext.Provider>\n            ) : null,\n    };\n};\n\nexport interface SupportCreateSuggestionOptions {\n    create?: ReactElement;\n    createValue?: string;\n    createLabel?: string;\n    createItemLabel?: string;\n    filter?: string;\n    handleChange: (value: any) => void;\n    onCreate?: OnCreateHandler;\n    optionText?: OptionText;\n}\n\nexport interface UseSupportCreateValue {\n    createId: string;\n    getCreateItem: (\n        filterValue?: string\n    ) => { id: Identifier; [key: string]: any };\n    handleChange: (eventOrValue: ChangeEvent | any) => Promise<void>;\n    createElement: ReactElement | null;\n}\n\nconst CreateSuggestionContext = createContext<CreateSuggestionContextValue>(\n    undefined\n);\n\ninterface CreateSuggestionContextValue {\n    filter?: string;\n    onCreate: (choice: any) => void;\n    onCancel: () => void;\n}\nexport const useCreateSuggestionContext = () =>\n    useContext(CreateSuggestionContext);\n\nexport type OnCreateHandler = (filter?: string) => any | Promise<any>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}