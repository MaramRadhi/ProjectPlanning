{"ast":null,"code":"var _jsxFileName = \"/Users/imrun10/Documents/GitHub/GradeCourseApp/client/src/pages/CoursePage.js\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport { useLocation, useNavigate, createBrowserRouter, RouterProvider, Route, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport '../App.css';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from '../components/Table';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoursePage() {\n  _s();\n  const location = useLocation();\n  const [importedStudents, setImportedStudents] = useState([]);\n\n  //   function getStudent(x){\n  //     Axios.get(\"http://localhost:3001/api/show/\").then((response)=>{\n  //       setStudent(response.data);\n  // })\n  //  }\n\n  //}\n\n  Axios.get(\"http://localhost:3001/api/student\", {\n    params: {\n      name: location.state.name\n    }\n  }).then(response => setImportedStudents(response.data));\n  function sendFile() {\n    //Axios.post(\"http://localhost:3001/api/save/\", {\n    //arr: array,\n    //}).then(console.log(\"SENT\")); \n    console.log(array);\n  }\n  function showData() {\n    Axios.get(\"http://localhost:3001/api/show/\").then(console.log(\"shown\"));\n  }\n\n  // ---------------------------- convert csv to array ----------------------------\n  const [parsedData, setParsedData] = useState([]);\n\n  //State to store table Column name\n  const [tableRows, setTableRows] = useState([]);\n\n  //State to store the values\n  const [values, setValues] = useState([]);\n  const changeHandler = event => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const rowsArray = [];\n        const valuesArray = [];\n\n        // Iterating data to get column name and their values\n        results.data.map(d => {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n\n        // Parsed Data Response in array format\n        setParsedData(results.data);\n\n        // Filtered Column Names\n        setTableRows(rowsArray[0]);\n\n        // Filtered Values\n        setValues(valuesArray);\n      }\n    });\n  };\n\n  // ---------------------------- convert csv to array ----------------------------\n\n  const checker = () => {\n    if (!(location.state.students == undefined || location.state.students == null || location.state.students == [] || importedStudents == [] || importedStudents == null || importedStudents == undefined)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"content\",\n              children: location.state.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              class: \"footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                accept: \".csv\",\n                onChange: changeHandler,\n                style: {\n                  display: \"block\",\n                  margin: \"10px auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-primary\",\n                style: {\n                  backgroundColor: \"RGB(100, 239, 100\",\n                  borderColor: \"RGB(100, 239, 100)\"\n                },\n                onClick: e => {\n                  csvFileToArray(fileReader.result);\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"EMPTY COURSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: [location.state.name, /*#__PURE__*/_jsxDEV(Table, {\n            props: importedStudents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          class: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"btn btn-primary\",\n            type: \"file\",\n            name: \"file\",\n            accept: \".csv\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-primary\",\n            style: {\n              backgroundColor: \"RGB(100, 239, 100\",\n              borderColor: \"RGB(100, 239, 100)\"\n            },\n            onClick: e => {\n              sendFile();\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(CoursePage, \"0tdr6UnU2j7ljc7N46vGg0zmVCY=\", false, function () {\n  return [useLocation];\n});\n_c = CoursePage;\nvar _c;\n$RefreshReg$(_c, \"CoursePage\");","map":{"version":3,"names":["react","useLocation","useNavigate","createBrowserRouter","RouterProvider","Route","Link","Axios","useState","useEffect","Table","Papa","jsxDEV","_jsxDEV","CoursePage","_s","location","importedStudents","setImportedStudents","get","params","name","state","then","response","data","sendFile","console","log","array","showData","parsedData","setParsedData","tableRows","setTableRows","values","setValues","changeHandler","event","parse","target","files","header","skipEmptyLines","complete","results","rowsArray","valuesArray","map","d","push","Object","keys","checker","students","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","class","id","type","accept","onChange","style","display","margin","backgroundColor","borderColor","onClick","e","csvFileToArray","fileReader","result","props","_c","$RefreshReg$"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/src/pages/CoursePage.js"],"sourcesContent":["import react from \"react\";\nimport { useLocation, useNavigate, createBrowserRouter, RouterProvider, Route, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport '../App.css';\nimport './style.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from '../components/Table';\nimport Papa from 'papaparse';\n\nexport default function CoursePage() {\n  const location = useLocation();\n\n  const [importedStudents, setImportedStudents] = useState([]);\n\n\n\n  //   function getStudent(x){\n  //     Axios.get(\"http://localhost:3001/api/show/\").then((response)=>{\n  //       setStudent(response.data);\n  // })\n  //  }\n\n  //}\n\n\n  Axios.get(\"http://localhost:3001/api/student\", {\n    params: {\n      name: location.state.name\n    },\n  }).then((response) => setImportedStudents(response.data));\n  \n  \n  function sendFile() {\n    //Axios.post(\"http://localhost:3001/api/save/\", {\n      //arr: array,\n    //}).then(console.log(\"SENT\")); \n    console.log(array);\n  }\n\n\n  function showData() {\n    Axios.get(\"http://localhost:3001/api/show/\").then(console.log(\"shown\"));\n  }\n\n\n   // ---------------------------- convert csv to array ----------------------------\n  const [parsedData, setParsedData] = useState([]);\n\n  //State to store table Column name\n  const [tableRows, setTableRows] = useState([]);\n\n  //State to store the values\n  const [values, setValues] = useState([]);\n\n  const changeHandler = (event) => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const rowsArray = [];\n        const valuesArray = [];\n\n        // Iterating data to get column name and their values\n        results.data.map((d) => {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n\n        // Parsed Data Response in array format\n        setParsedData(results.data);\n\n        // Filtered Column Names\n        setTableRows(rowsArray[0]);\n\n        // Filtered Values\n        setValues(valuesArray);\n      },\n    });\n  };\n\n   // ---------------------------- convert csv to array ----------------------------\n\n \n  const checker = () => {\n    if(!(location.state.students == undefined || location.state.students == null || location.state.students == [] || importedStudents == [] || importedStudents == null || importedStudents == undefined)){\n      return (\n        <div>\n          <header></header>\n\n          <body>\n            <div class=\"wrapper\">\n              <div id=\"content\">{location.state.name}</div>\n              <footer class=\"footer\">\n                  <input\n                    type=\"file\"\n                    name=\"file\"\n                    accept=\".csv\"\n                    onChange={changeHandler}\n                    style={{ display: \"block\", margin: \"10px auto\" }}\n                  />\n\n                  <button\n                    class=\"btn btn-primary\"\n                    style={{\n                      backgroundColor: \"RGB(100, 239, 100\",\n                      borderColor: \"RGB(100, 239, 100)\",\n                    }}\n                    onClick={(e) => {\n                      csvFileToArray(fileReader.result);\n                    }}\n                  >\n                    +\n                  </button>\n              </footer>\n            </div>\n          </body>\n        </div>\n      );}\n    else {\n      return <div>EMPTY COURSE</div>\n    }\n\n  }\n\n\nreturn (<div>\n  <header>\n\n  </header>\n\n  <body>\n    <div class=\"wrapper\">\n      <div id=\"content\">\n        {location.state.name}\n        <Table props = {importedStudents}/>\n\n      </div>\n      <footer class=\"footer\">\n\n        <input\n                    class =\"btn btn-primary\"\n                    type=\"file\"\n                    name=\"file\"\n                    accept=\".csv\"\n                    onChange={changeHandler}\n                  />\n\n          \n\n          <button\n            class=\"btn btn-primary\"\n            style={{ backgroundColor: \"RGB(100, 239, 100\", borderColor: \"RGB(100, 239, 100)\" }}\n            onClick={(e) => {\n              sendFile();\n\n\n\n\n            }}\n          >\n            +\n          </button>\n\n      </footer>\n    </div>\n\n  </body>\n\n        </div>);}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}