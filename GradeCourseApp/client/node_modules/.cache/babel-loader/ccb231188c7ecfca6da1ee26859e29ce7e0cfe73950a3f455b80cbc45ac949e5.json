{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from 'react';\nimport Tab from '@mui/material/Tab';\nimport { useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\n/**\n * Single tab that selects a locale in a TranslatableFields component.\n * @see TranslatableFields\n */\nexport var TranslatableFieldsTab = function (props) {\n  var locale = props.locale,\n    _a = props.groupKey,\n    groupKey = _a === void 0 ? '' : _a,\n    rest = __rest(props, [\"locale\", \"groupKey\"]);\n  var translate = useTranslate();\n  return React.createElement(Tab, __assign({\n    id: \"translatable-header-\".concat(groupKey).concat(locale),\n    label: translate(\"ra.locales.\".concat(groupKey).concat(locale), {\n      _: capitalize(locale)\n    })\n  }, rest));\n};","map":{"version":3,"names":["React","Tab","useTranslate","capitalize","TranslatableFieldsTab","props","locale","_a","groupKey","rest","__rest","translate","createElement","__assign","id","concat","label","_"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/field/TranslatableFieldsTab.tsx"],"sourcesContent":["import React from 'react';\nimport Tab, { TabProps } from '@mui/material/Tab';\nimport { useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\n\n/**\n * Single tab that selects a locale in a TranslatableFields component.\n * @see TranslatableFields\n */\nexport const TranslatableFieldsTab = (\n    props: TranslatableFieldsTabProps & TabProps\n) => {\n    const { locale, groupKey = '', ...rest } = props;\n    const translate = useTranslate();\n\n    return (\n        <Tab\n            id={`translatable-header-${groupKey}${locale}`}\n            label={translate(`ra.locales.${groupKey}${locale}`, {\n                _: capitalize(locale),\n            })}\n            {...rest}\n        />\n    );\n};\n\nexport interface TranslatableFieldsTabProps {\n    locale: string;\n    groupKey?: string;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAiB,MAAM,mBAAmB;AACjD,SAASC,YAAY,QAAQ,SAAS;AACtC,SAASC,UAAU,QAAQ,YAAY;AAEvC;;;;AAIA,OAAO,IAAMC,qBAAqB,GAAG,SAAAA,CACjCC,KAA4C;EAEpC,IAAAC,MAAM,GAA6BD,KAAK,CAAAC,MAAlC;IAAEC,EAAA,GAA2BF,KAAK,CAAAG,QAAnB;IAAbA,QAAQ,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;IAAKE,IAAI,GAAAC,MAAA,CAAKL,KAAK,EAA1C,sBAAkC,CAAF;EACtC,IAAMM,SAAS,GAAGT,YAAY,EAAE;EAEhC,OACIF,KAAA,CAAAY,aAAA,CAACX,GAAG,EAAAY,QAAA;IACAC,EAAE,EAAE,uBAAAC,MAAA,CAAuBP,QAAQ,EAAAO,MAAA,CAAGT,MAAM,CAAE;IAC9CU,KAAK,EAAEL,SAAS,CAAC,cAAAI,MAAA,CAAcP,QAAQ,EAAAO,MAAA,CAAGT,MAAM,CAAE,EAAE;MAChDW,CAAC,EAAEd,UAAU,CAACG,MAAM;KACvB;EAAC,GACEG,IAAI,EACV;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}