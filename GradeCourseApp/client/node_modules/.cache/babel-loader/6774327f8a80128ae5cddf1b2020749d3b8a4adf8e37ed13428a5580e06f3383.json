{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router';\n/**\n * A hook to use inside the component passed to FallbackComponent\n * of react-error-boundary. It resets the error boundary state whenever\n * the location changes\n * @param {Function} resetErrorBoundary\n */\nexport var useResetErrorBoundaryOnLocationChange = function (resetErrorBoundary) {\n  var pathname = useLocation().pathname;\n  var originalPathname = useRef(pathname);\n  useEffect(function () {\n    if (pathname !== originalPathname.current) {\n      resetErrorBoundary();\n    }\n  }, [pathname, resetErrorBoundary]);\n};","map":{"version":3,"names":["useEffect","useRef","useLocation","useResetErrorBoundaryOnLocationChange","resetErrorBoundary","pathname","originalPathname","current"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/layout/useResetErrorBoundaryOnLocationChange.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router';\n\n/**\n * A hook to use inside the component passed to FallbackComponent\n * of react-error-boundary. It resets the error boundary state whenever\n * the location changes\n * @param {Function} resetErrorBoundary\n */\nexport const useResetErrorBoundaryOnLocationChange = (\n    resetErrorBoundary: () => void\n) => {\n    const { pathname } = useLocation();\n    const originalPathname = useRef(pathname);\n\n    useEffect(() => {\n        if (pathname !== originalPathname.current) {\n            resetErrorBoundary();\n        }\n    }, [pathname, resetErrorBoundary]);\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,cAAc;AAE1C;;;;;;AAMA,OAAO,IAAMC,qCAAqC,GAAG,SAAAA,CACjDC,kBAA8B;EAEtB,IAAAC,QAAQ,GAAKH,WAAW,EAAE,CAAAG,QAAlB;EAChB,IAAMC,gBAAgB,GAAGL,MAAM,CAACI,QAAQ,CAAC;EAEzCL,SAAS,CAAC;IACN,IAAIK,QAAQ,KAAKC,gBAAgB,CAACC,OAAO,EAAE;MACvCH,kBAAkB,EAAE;;EAE5B,CAAC,EAAE,CAACC,QAAQ,EAAED,kBAAkB,CAAC,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}