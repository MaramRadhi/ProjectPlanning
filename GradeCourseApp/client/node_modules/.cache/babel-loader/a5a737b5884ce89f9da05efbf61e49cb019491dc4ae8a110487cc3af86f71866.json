{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableCell, TableHead, TableRow, TableBody, IconButton, Checkbox } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport clsx from 'clsx';\nimport { useTimeout } from 'ra-core';\nimport { DatagridClasses } from './useDatagridStyles';\nimport { Placeholder } from '../Placeholder';\nvar times = function (nbChildren, fn) {\n  return Array.from({\n    length: nbChildren\n  }, function (_, key) {\n    return fn(key);\n  });\n};\nvar DatagridLoading = function (_a) {\n  var className = _a.className,\n    expand = _a.expand,\n    hasBulkActions = _a.hasBulkActions,\n    nbChildren = _a.nbChildren,\n    _b = _a.nbFakeLines,\n    nbFakeLines = _b === void 0 ? 5 : _b,\n    size = _a.size;\n  var oneSecondHasPassed = useTimeout(1000);\n  return oneSecondHasPassed ? React.createElement(\"div\", {\n    className: DatagridClasses.root\n  }, React.createElement(Table, {\n    className: clsx(DatagridClasses.table, className),\n    size: size\n  }, React.createElement(TableHead, null, React.createElement(TableRow, {\n    className: DatagridClasses.row\n  }, expand && React.createElement(TableCell, {\n    padding: \"none\",\n    className: DatagridClasses.expandHeader\n  }), hasBulkActions && React.createElement(TableCell, {\n    padding: \"checkbox\",\n    className: DatagridClasses.expandIconCell\n  }, React.createElement(Checkbox, {\n    className: \"select-all\",\n    color: \"primary\",\n    checked: false\n  })), times(nbChildren, function (key) {\n    return React.createElement(TableCell, {\n      variant: \"head\",\n      className: DatagridClasses.headerCell,\n      key: key\n    }, React.createElement(Placeholder, null));\n  }))), React.createElement(TableBody, null, times(nbFakeLines, function (key1) {\n    return React.createElement(TableRow, {\n      key: key1,\n      style: {\n        opacity: 1 / (key1 + 1)\n      }\n    }, expand && React.createElement(TableCell, {\n      padding: \"none\",\n      className: DatagridClasses.expandIconCell\n    }, React.createElement(IconButton, {\n      className: DatagridClasses.expandIcon,\n      component: \"div\",\n      \"aria-hidden\": \"true\",\n      size: \"large\"\n    }, React.createElement(ExpandMoreIcon, null))), hasBulkActions && React.createElement(TableCell, {\n      padding: \"checkbox\",\n      className: DatagridClasses.expandIconCell\n    }, React.createElement(Checkbox, {\n      className: \"select-all\",\n      color: \"primary\",\n      checked: false\n    })), times(nbChildren, function (key2) {\n      return React.createElement(TableCell, {\n        className: DatagridClasses.rowCell,\n        key: key2\n      }, React.createElement(Placeholder, null));\n    }));\n  })))) : null;\n};\nDatagridLoading.propTypes = {\n  className: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n  hasBulkActions: PropTypes.bool,\n  nbChildren: PropTypes.number,\n  nbFakeLines: PropTypes.number,\n  size: PropTypes.oneOf(['small', 'medium'])\n};\nexport default memo(DatagridLoading);","map":{"version":3,"names":["React","memo","PropTypes","Table","TableCell","TableHead","TableRow","TableBody","IconButton","Checkbox","ExpandMoreIcon","clsx","useTimeout","DatagridClasses","Placeholder","times","nbChildren","fn","Array","from","length","_","key","DatagridLoading","_a","className","expand","hasBulkActions","_b","nbFakeLines","size","oneSecondHasPassed","createElement","root","table","row","padding","expandHeader","expandIconCell","color","checked","variant","headerCell","key1","style","opacity","expandIcon","component","key2","rowCell","propTypes","string","oneOfType","element","elementType","bool","number","oneOf"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/list/datagrid/DatagridLoading.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, FC, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Table,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableBody,\n    IconButton,\n    Checkbox,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport clsx from 'clsx';\nimport { useTimeout, Identifier, RaRecord } from 'ra-core';\n\nimport { DatagridClasses } from './useDatagridStyles';\nimport { Placeholder } from '../Placeholder';\n\nconst times = (nbChildren, fn) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst DatagridLoading = ({\n    className,\n    expand,\n    hasBulkActions,\n    nbChildren,\n    nbFakeLines = 5,\n    size,\n}: DatagridLoadingProps): JSX.Element => {\n    const oneSecondHasPassed = useTimeout(1000);\n\n    return oneSecondHasPassed ? (\n        <div className={DatagridClasses.root}>\n            <Table\n                className={clsx(DatagridClasses.table, className)}\n                size={size}\n            >\n                <TableHead>\n                    <TableRow className={DatagridClasses.row}>\n                        {expand && (\n                            <TableCell\n                                padding=\"none\"\n                                className={DatagridClasses.expandHeader}\n                            />\n                        )}\n                        {hasBulkActions && (\n                            <TableCell\n                                padding=\"checkbox\"\n                                className={DatagridClasses.expandIconCell}\n                            >\n                                <Checkbox\n                                    className=\"select-all\"\n                                    color=\"primary\"\n                                    checked={false}\n                                />\n                            </TableCell>\n                        )}\n                        {times(nbChildren, key => (\n                            <TableCell\n                                variant=\"head\"\n                                className={DatagridClasses.headerCell}\n                                key={key}\n                            >\n                                <Placeholder />\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {times(nbFakeLines, key1 => (\n                        <TableRow\n                            key={key1}\n                            style={{ opacity: 1 / (key1 + 1) }}\n                        >\n                            {expand && (\n                                <TableCell\n                                    padding=\"none\"\n                                    className={DatagridClasses.expandIconCell}\n                                >\n                                    <IconButton\n                                        className={DatagridClasses.expandIcon}\n                                        component=\"div\"\n                                        aria-hidden=\"true\"\n                                        size=\"large\"\n                                    >\n                                        <ExpandMoreIcon />\n                                    </IconButton>\n                                </TableCell>\n                            )}\n                            {hasBulkActions && (\n                                <TableCell\n                                    padding=\"checkbox\"\n                                    className={DatagridClasses.expandIconCell}\n                                >\n                                    <Checkbox\n                                        className=\"select-all\"\n                                        color=\"primary\"\n                                        checked={false}\n                                    />\n                                </TableCell>\n                            )}\n                            {times(nbChildren, key2 => (\n                                <TableCell\n                                    className={DatagridClasses.rowCell}\n                                    key={key2}\n                                >\n                                    <Placeholder />\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    ) : null;\n};\n\nDatagridLoading.propTypes = {\n    className: PropTypes.string,\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool,\n    nbChildren: PropTypes.number,\n    nbFakeLines: PropTypes.number,\n    size: PropTypes.oneOf(['small', 'medium']),\n};\n\nexport interface DatagridLoadingProps {\n    className?: string;\n    expand?:\n        | ReactElement\n        | FC<{\n              id: Identifier;\n              record: RaRecord;\n              resource: string;\n          }>;\n    hasBulkActions?: boolean;\n    nbChildren: number;\n    nbFakeLines?: number;\n    size?: 'small' | 'medium';\n}\n\nexport default memo(DatagridLoading);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}