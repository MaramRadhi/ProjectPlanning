{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { TextInput } from './TextInput';\nexport var PasswordInput = function (props) {\n  var _a = props.initiallyVisible,\n    initiallyVisible = _a === void 0 ? false : _a,\n    rest = __rest(props, [\"initiallyVisible\"]);\n  var _b = useState(initiallyVisible),\n    visible = _b[0],\n    setVisible = _b[1];\n  var translate = useTranslate();\n  var handleClick = function () {\n    setVisible(!visible);\n  };\n  return React.createElement(TextInput, __assign({\n    type: visible ? 'text' : 'password',\n    size: \"small\",\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\"\n      }, React.createElement(IconButton, {\n        \"aria-label\": translate(visible ? 'ra.input.password.toggle_visible' : 'ra.input.password.toggle_hidden'),\n        onClick: handleClick,\n        size: \"large\"\n      }, visible ? React.createElement(Visibility, null) : React.createElement(VisibilityOff, null)))\n    }\n  }, rest));\n};","map":{"version":3,"names":["React","useState","useTranslate","InputAdornment","IconButton","Visibility","VisibilityOff","TextInput","PasswordInput","props","_a","initiallyVisible","rest","__rest","_b","visible","setVisible","translate","handleClick","createElement","__assign","type","size","InputProps","endAdornment","position","onClick"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/input/PasswordInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport { TextInput, TextInputProps } from './TextInput';\n\nexport const PasswordInput = (props: PasswordInputProps) => {\n    const { initiallyVisible = false, ...rest } = props;\n    const [visible, setVisible] = useState(initiallyVisible);\n    const translate = useTranslate();\n\n    const handleClick = () => {\n        setVisible(!visible);\n    };\n\n    return (\n        <TextInput\n            type={visible ? 'text' : 'password'}\n            size=\"small\"\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                            aria-label={translate(\n                                visible\n                                    ? 'ra.input.password.toggle_visible'\n                                    : 'ra.input.password.toggle_hidden'\n                            )}\n                            onClick={handleClick}\n                            size=\"large\"\n                        >\n                            {visible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                    </InputAdornment>\n                ),\n            }}\n            {...rest}\n        />\n    );\n};\n\nexport interface PasswordInputProps extends TextInputProps {\n    initiallyVisible?: boolean;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,YAAY,QAAQ,SAAS;AACtC,SAASC,cAAc,EAAEC,UAAU,QAAQ,eAAe;AAC1D,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,aAAa,MAAM,mCAAmC;AAE7D,SAASC,SAAS,QAAwB,aAAa;AAEvD,OAAO,IAAMC,aAAa,GAAG,SAAAA,CAACC,KAAyB;EAC3C,IAAAC,EAAA,GAAsCD,KAAK,CAAAE,gBAAnB;IAAxBA,gBAAgB,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAAKE,IAAI,GAAAC,MAAA,CAAKJ,KAAK,EAA7C,oBAAqC,CAAF;EACnC,IAAAK,EAAA,GAAwBb,QAAQ,CAACU,gBAAgB,CAAC;IAAjDI,OAAO,GAAAD,EAAA;IAAEE,UAAU,GAAAF,EAAA,GAA8B;EACxD,IAAMG,SAAS,GAAGf,YAAY,EAAE;EAEhC,IAAMgB,WAAW,GAAG,SAAAA,CAAA;IAChBF,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,OACIf,KAAA,CAAAmB,aAAA,CAACZ,SAAS,EAAAa,QAAA;IACNC,IAAI,EAAEN,OAAO,GAAG,MAAM,GAAG,UAAU;IACnCO,IAAI,EAAC,OAAO;IACZC,UAAU,EAAE;MACRC,YAAY,EACRxB,KAAA,CAAAmB,aAAA,CAAChB,cAAc;QAACsB,QAAQ,EAAC;MAAK,GAC1BzB,KAAA,CAAAmB,aAAA,CAACf,UAAU;QAAA,cACKa,SAAS,CACjBF,OAAO,GACD,kCAAkC,GAClC,iCAAiC,CAC1C;QACDW,OAAO,EAAER,WAAW;QACpBI,IAAI,EAAC;MAAO,GAEXP,OAAO,GAAGf,KAAA,CAAAmB,aAAA,CAACd,UAAU,OAAG,GAAGL,KAAA,CAAAmB,aAAA,CAACb,aAAa,OAAG,CACpC;;EAGxB,GACGM,IAAI,EACV;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}