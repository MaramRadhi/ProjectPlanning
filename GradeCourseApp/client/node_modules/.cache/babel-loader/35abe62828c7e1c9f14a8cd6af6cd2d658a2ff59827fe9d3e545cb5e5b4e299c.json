{"ast":null,"code":"import { useCallback } from 'react';\nimport { useStoreContext } from './useStoreContext';\n/**\n * Get a callback to remove an item from the store\n *\n * @example\n * import { useRemoveFromStore } from 'react-admin';\n *\n * const ResetDatagridPrefs = () {\n *    const removeItem = useRemoveFromStore();\n *\n *    const hancleClick = () => {\n *        removeItem('datagrid.prefs');\n *    };\n *\n *    return <Button onClick={hancleClick}>Reset datagrid preferences</Button>;\n * }\n */\nexport var useRemoveFromStore = function (hookTimeKey) {\n  var removeItem = useStoreContext().removeItem;\n  return useCallback(function (key) {\n    if (typeof key === 'undefined' && typeof hookTimeKey === 'undefined') {\n      throw new Error('You must provide a key to remove an item from the store');\n    }\n    // @ts-ignore\n    return removeItem(key !== null && key !== void 0 ? key : hookTimeKey);\n  }, [removeItem, hookTimeKey]);\n};","map":{"version":3,"names":["useCallback","useStoreContext","useRemoveFromStore","hookTimeKey","removeItem","key","Error"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/store/useRemoveFromStore.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { useStoreContext } from './useStoreContext';\n\n/**\n * Get a callback to remove an item from the store\n *\n * @example\n * import { useRemoveFromStore } from 'react-admin';\n *\n * const ResetDatagridPrefs = () {\n *    const removeItem = useRemoveFromStore();\n *\n *    const hancleClick = () => {\n *        removeItem('datagrid.prefs');\n *    };\n *\n *    return <Button onClick={hancleClick}>Reset datagrid preferences</Button>;\n * }\n */\nexport const useRemoveFromStore = (hookTimeKey?: string) => {\n    const { removeItem } = useStoreContext();\n    return useCallback(\n        (key?: string) => {\n            if (\n                typeof key === 'undefined' &&\n                typeof hookTimeKey === 'undefined'\n            ) {\n                throw new Error(\n                    'You must provide a key to remove an item from the store'\n                );\n            }\n            // @ts-ignore\n            return removeItem(key ?? hookTimeKey);\n        },\n        [removeItem, hookTimeKey]\n    );\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD;;;;;;;;;;;;;;;;AAgBA,OAAO,IAAMC,kBAAkB,GAAG,SAAAA,CAACC,WAAoB;EAC3C,IAAAC,UAAU,GAAKH,eAAe,EAAE,CAAAG,UAAtB;EAClB,OAAOJ,WAAW,CACd,UAACK,GAAY;IACT,IACI,OAAOA,GAAG,KAAK,WAAW,IAC1B,OAAOF,WAAW,KAAK,WAAW,EACpC;MACE,MAAM,IAAIG,KAAK,CACX,yDAAyD,CAC5D;;IAEL;IACA,OAAOF,UAAU,CAACC,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAIF,WAAW,CAAC;EACzC,CAAC,EACD,CAACC,UAAU,EAAED,WAAW,CAAC,CAC5B;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}