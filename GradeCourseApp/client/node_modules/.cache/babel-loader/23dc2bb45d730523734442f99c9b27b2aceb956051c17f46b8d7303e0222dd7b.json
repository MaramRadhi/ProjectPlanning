{"ast":null,"code":"import * as React from 'react';\nimport AuthContext from './AuthContext.js';\nimport TokenObject from './TokenObject.js';\nimport { authReducer, doRefresh } from './utils/reducers.js';\nimport { useInterval } from './utils/hooks.js';\nimport { AuthKitError } from './errors.js';\n\n/**\n * AuthProvider - The Authentication Context Provider\n *\n * @param children\n * @param authStorageName\n * @param cookieDomain\n * @param cookieSecure\n *\n * @return Functional Component\n */\nvar AuthProvider = function (_a) {\n  var children = _a.children,\n    authType = _a.authType,\n    authName = _a.authName,\n    cookieDomain = _a.cookieDomain,\n    cookieSecure = _a.cookieSecure,\n    refresh = _a.refresh;\n  if (authType === 'cookie') {\n    if (!cookieDomain) {\n      throw new AuthKitError('authType \\'cookie\\' ' + 'requires \\'cookieDomain\\' and \\'cookieSecure\\' ' + 'props in AuthProvider');\n    }\n  }\n  var refreshTokenName = refresh ? \"\".concat(authName, \"_refresh\") : null;\n  var tokenObject = new TokenObject(authName, authType, refreshTokenName, cookieDomain, cookieSecure);\n  var _b = React.useReducer(authReducer, tokenObject.initialToken()),\n    authState = _b[0],\n    dispatch = _b[1];\n  if (refresh) {\n    useInterval(function () {\n      var _a, _b, _c, _d;\n      refresh.refreshApiCallback({\n        authToken: (_a = authState.auth) === null || _a === void 0 ? void 0 : _a.token,\n        authTokenExpireAt: (_b = authState.auth) === null || _b === void 0 ? void 0 : _b.expiresAt,\n        authUserState: authState.userState,\n        refreshToken: (_c = authState.refresh) === null || _c === void 0 ? void 0 : _c.token,\n        refreshTokenExpiresAt: (_d = authState.refresh) === null || _d === void 0 ? void 0 : _d.expiresAt\n      }).then(function (result) {\n        // IF the API call is successful then refresh the AUTH state\n        if (result.isSuccess) {\n          // store the new value using the state update\n          dispatch(doRefresh(result));\n        }\n      }).catch(function () {\n        // do something in future\n      });\n    }, authState.isSignIn ? refresh.interval : null);\n  }\n  React.useEffect(function () {\n    tokenObject.syncTokens(authState);\n  }, [authState]);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      authState: authState,\n      dispatch: dispatch\n    }\n  }, children);\n};\nexport { AuthProvider as default };","map":{"version":3,"names":["AuthProvider","_a","children","authType","authName","cookieDomain","cookieSecure","refresh","AuthKitError","refreshTokenName","concat","tokenObject","TokenObject","_b","React","useReducer","authReducer","initialToken","authState","dispatch","useInterval","refreshApiCallback","authToken","auth","token","authTokenExpireAt","expiresAt","authUserState","userState","refreshToken","_c","refreshTokenExpiresAt","_d","then","result","isSuccess","doRefresh","catch","isSignIn","interval","useEffect","syncTokens","createElement","AuthContext","Provider","value"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/react-auth-kit/src/AuthProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport AuthContext from './AuthContext';\nimport TokenObject from './TokenObject';\nimport {AuthProviderProps} from './types';\nimport {authReducer, doRefresh} from './utils/reducers';\nimport {useInterval} from './utils/hooks';\nimport { AuthKitError } from './errors';\n\n\n/**\n * AuthProvider - The Authentication Context Provider\n *\n * @param children\n * @param authStorageName\n * @param cookieDomain\n * @param cookieSecure\n *\n * @return Functional Component\n */\nconst AuthProvider: React.FunctionComponent<AuthProviderProps> =\n  ({\n    children,\n    authType,\n    authName,\n    cookieDomain,\n    cookieSecure,\n    refresh,\n  }) => {\n    if (authType === 'cookie') {\n      if (!cookieDomain) {\n        throw new\n        AuthKitError('authType \\'cookie\\' ' +\n          'requires \\'cookieDomain\\' and \\'cookieSecure\\' ' +\n          'props in AuthProvider');\n      }\n    }\n\n    const refreshTokenName = refresh ? `${authName}_refresh` : null;\n\n    const tokenObject = new TokenObject(authName, authType,\n        refreshTokenName, cookieDomain, cookieSecure);\n\n    const [authState, dispatch] =\n      React.useReducer(authReducer, tokenObject.initialToken());\n\n    if (refresh) {\n      useInterval(\n          () => {\n            refresh\n              .refreshApiCallback({\n                authToken: authState.auth?.token,\n                authTokenExpireAt: authState.auth?.expiresAt,\n                authUserState: authState.userState,\n                refreshToken: authState.refresh?.token,\n                refreshTokenExpiresAt: authState.refresh?.expiresAt,\n              })\n              .then((result) => {\n                // IF the API call is successful then refresh the AUTH state\n                if (result.isSuccess) {\n                  // store the new value using the state update\n                  dispatch(doRefresh(result));\n                }\n                else {\n                  // do something in future\n                }\n              })\n              .catch(()=>{\n                // do something in future\n              });\n          },\n        authState.isSignIn ? refresh.interval : null,\n      );\n    }\n\n    React.useEffect(() => {\n      tokenObject.syncTokens(authState);\n    }, [authState]);\n\n    return (\n      <AuthContext.Provider value={{authState, dispatch}}>\n        {children}\n      </AuthContext.Provider>\n    );\n  };\n\nexport default AuthProvider;\n"],"mappings":";;;;;;;AASA;;;;;;;;;AASG;AACG,IAAAA,YAAY,GAChB,SAAAA,CAACC,EAOA;EANC,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IACRC,YAAY,GAAAJ,EAAA,CAAAI,YAAA;IACZC,YAAY,GAAAL,EAAA,CAAAK,YAAA;IACZC,OAAO,GAAAN,EAAA,CAAAM,OAAA;EAEP,IAAIJ,QAAQ,KAAK,QAAQ,EAAE;IACzB,IAAI,CAACE,YAAY,EAAE;MACjB,MAAM,IACNG,YAAY,CAAC,sBAAsB,GACjC,iDAAiD,GACjD,uBAAuB,CAAC;IAC3B;EACF;EAED,IAAMC,gBAAgB,GAAGF,OAAO,GAAG,EAAG,CAAAG,MAAA,CAAAN,QAAQ,EAAU,cAAG,IAAI;EAE/D,IAAMO,WAAW,GAAG,IAAIC,WAAW,CAACR,QAAQ,EAAED,QAAQ,EAClDM,gBAAgB,EAAEJ,YAAY,EAAEC,YAAY,CAAC;EAE3C,IAAAO,EAAA,GACJC,KAAK,CAACC,UAAU,CAACC,WAAW,EAAEL,WAAW,CAACM,YAAY,EAAE,CAAC;IADpDC,SAAS,GAAAL,EAAA;IAAEM,QAAQ,GAAAN,EAAA,GACiC;EAE3D,IAAIN,OAAO,EAAE;IACXa,WAAW,CACP;;MACEb,OAAO,CACJc,kBAAkB,CAAC;QAClBC,SAAS,EAAE,CAAArB,EAAA,GAAAiB,SAAS,CAACK,IAAI,cAAAtB,EAAA,uBAAAA,EAAA,CAAEuB,KAAK;QAChCC,iBAAiB,EAAE,CAAAZ,EAAA,GAAAK,SAAS,CAACK,IAAI,cAAAV,EAAA,uBAAAA,EAAA,CAAEa,SAAS;QAC5CC,aAAa,EAAET,SAAS,CAACU,SAAS;QAClCC,YAAY,EAAE,CAAAC,EAAA,GAAAZ,SAAS,CAACX,OAAO,cAAAuB,EAAA,uBAAAA,EAAA,CAAEN,KAAK;QACtCO,qBAAqB,EAAE,CAAAC,EAAA,GAAAd,SAAS,CAACX,OAAO,cAAAyB,EAAA,uBAAAA,EAAA,CAAEN;OAC3C,CAAC,CACDO,IAAI,CAAC,UAACC,MAAM;;QAEX,IAAIA,MAAM,CAACC,SAAS,EAAE;;UAEpBhB,QAAQ,CAACiB,SAAS,CAACF,MAAM,CAAC,CAAC;QAC5B;MAIH,CAAC,CAAC,CACDG,KAAK,CAAC;;OAEN,CAAC;IACN,CAAC,EACHnB,SAAS,CAACoB,QAAQ,GAAG/B,OAAO,CAACgC,QAAQ,GAAG,IAAI,CAC7C;EACF;EAEDzB,KAAK,CAAC0B,SAAS,CAAC;IACd7B,WAAW,CAAC8B,UAAU,CAACvB,SAAS,CAAC;EACnC,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,OACEJ,KAAC,CAAA4B,aAAA,CAAAC,WAAW,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAC3B,SAAS,EAAAA,SAAA;MAAEC,QAAQ,EAAAA;IAAA;EAAC,GAC/CjB,QAAQ,CACY;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}