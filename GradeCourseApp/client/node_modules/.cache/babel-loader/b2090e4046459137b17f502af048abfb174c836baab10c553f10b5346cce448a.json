{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n/**\n * A dataProvider meant to be used in tests only. You can override any of its methods by passing a partial dataProvider.\n */\nexport var testDataProvider = function (overrides) {\n  return __assign({\n    getList: function () {\n      return Promise.resolve({\n        data: [],\n        total: 0\n      });\n    },\n    getOne: function () {\n      return Promise.resolve({\n        data: undefined\n      });\n    },\n    getMany: function () {\n      return Promise.resolve({\n        data: []\n      });\n    },\n    getManyReference: function () {\n      return Promise.resolve({\n        data: [],\n        total: 0\n      });\n    },\n    create: function () {\n      return Promise.resolve({\n        data: undefined\n      });\n    },\n    update: function () {\n      return Promise.resolve({\n        data: undefined\n      });\n    },\n    updateMany: function () {\n      return Promise.resolve({\n        data: []\n      });\n    },\n    delete: function () {\n      return Promise.resolve({\n        data: undefined\n      });\n    },\n    deleteMany: function () {\n      return Promise.resolve({\n        data: []\n      });\n    }\n  }, overrides);\n};","map":{"version":3,"names":["testDataProvider","overrides","__assign","getList","Promise","resolve","data","total","getOne","undefined","getMany","getManyReference","create","update","updateMany","delete","deleteMany"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/dataProvider/testDataProvider.ts"],"sourcesContent":["import { DataProvider } from '../types';\n\n/**\n * A dataProvider meant to be used in tests only. You can override any of its methods by passing a partial dataProvider.\n */\nexport const testDataProvider = (\n    overrides?: Partial<DataProvider>\n): DataProvider => {\n    return {\n        getList: () => Promise.resolve({ data: [], total: 0 }),\n        getOne: () => Promise.resolve({ data: undefined }),\n        getMany: () => Promise.resolve({ data: [] }),\n        getManyReference: () => Promise.resolve({ data: [], total: 0 }),\n        create: () => Promise.resolve({ data: undefined }),\n        update: () => Promise.resolve({ data: undefined }),\n        updateMany: () => Promise.resolve({ data: [] }),\n        delete: () => Promise.resolve({ data: undefined }),\n        deleteMany: () => Promise.resolve({ data: [] }),\n        ...overrides,\n    };\n};\n"],"mappings":";;;;;;;;;;AAEA;;;AAGA,OAAO,IAAMA,gBAAgB,GAAG,SAAAA,CAC5BC,SAAiC;EAEjC,OAAAC,QAAA;IACIC,OAAO,EAAE,SAAAA,CAAA;MAAM,OAAAC,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAC,CAAE,CAAC;IAAvC,CAAuC;IACtDC,MAAM,EAAE,SAAAA,CAAA;MAAM,OAAAJ,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAEG;MAAS,CAAE,CAAC;IAApC,CAAoC;IAClDC,OAAO,EAAE,SAAAA,CAAA;MAAM,OAAAN,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,CAAC;IAA7B,CAA6B;IAC5CK,gBAAgB,EAAE,SAAAA,CAAA;MAAM,OAAAP,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAC,CAAE,CAAC;IAAvC,CAAuC;IAC/DK,MAAM,EAAE,SAAAA,CAAA;MAAM,OAAAR,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAEG;MAAS,CAAE,CAAC;IAApC,CAAoC;IAClDI,MAAM,EAAE,SAAAA,CAAA;MAAM,OAAAT,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAEG;MAAS,CAAE,CAAC;IAApC,CAAoC;IAClDK,UAAU,EAAE,SAAAA,CAAA;MAAM,OAAAV,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,CAAC;IAA7B,CAA6B;IAC/CS,MAAM,EAAE,SAAAA,CAAA;MAAM,OAAAX,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAEG;MAAS,CAAE,CAAC;IAApC,CAAoC;IAClDO,UAAU,EAAE,SAAAA,CAAA;MAAM,OAAAZ,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,CAAC;IAA7B;EAA6B,GAC5CL,SAAS;AAEpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}