{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { useListContext, useTranslate } from 'ra-core';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { useSavedQueries, extractValidSavedQueries } from './useSavedQueries';\nexport var RemoveSavedQueryDialog = function (_a) {\n  var open = _a.open,\n    onClose = _a.onClose;\n  var translate = useTranslate();\n  var _b = useListContext(),\n    resource = _b.resource,\n    filterValues = _b.filterValues,\n    sort = _b.sort,\n    perPage = _b.perPage,\n    displayedFilters = _b.displayedFilters;\n  var _c = useSavedQueries(resource),\n    savedQueries = _c[0],\n    setSavedQueries = _c[1];\n  var removeQuery = function () {\n    var savedQueryToRemove = {\n      filter: filterValues,\n      sort: sort,\n      perPage: perPage,\n      displayedFilters: displayedFilters\n    };\n    var newSavedQueries = extractValidSavedQueries(savedQueries);\n    var index = newSavedQueries.findIndex(function (savedFilter) {\n      return isEqual(savedFilter.value, savedQueryToRemove);\n    });\n    setSavedQueries(__spreadArray(__spreadArray([], newSavedQueries.slice(0, index), true), newSavedQueries.slice(index + 1), true));\n    onClose();\n  };\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\"\n  }, translate('ra.saved_queries.remove_dialog_title', {\n    _: 'Remove saved query?'\n  })), React.createElement(DialogContent, null, React.createElement(DialogContentText, null, translate('ra.saved_queries.remove_message', {\n    _: 'Are you sure you want to remove that item from your list of saved queries?'\n  }))), React.createElement(DialogActions, null, React.createElement(Button, {\n    onClick: onClose\n  }, translate('ra.action.cancel')), React.createElement(Button, {\n    onClick: removeQuery,\n    color: \"primary\",\n    // eslint-disable-next-line jsx-a11y/no-autofocus\n    autoFocus: true\n  }, translate('ra.action.confirm'))));\n};","map":{"version":3,"names":["React","isEqual","useListContext","useTranslate","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useSavedQueries","extractValidSavedQueries","RemoveSavedQueryDialog","_a","open","onClose","translate","_b","resource","filterValues","sort","perPage","displayedFilters","_c","savedQueries","setSavedQueries","removeQuery","savedQueryToRemove","filter","newSavedQueries","index","findIndex","savedFilter","value","__spreadArray","slice","createElement","id","_","onClick","color","autoFocus"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/list/filter/RemoveSavedQueryDialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { useListContext, useTranslate } from 'ra-core';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from '@mui/material';\n\nimport { useSavedQueries, extractValidSavedQueries } from './useSavedQueries';\n\nexport interface RemoveSavedQueryDialogProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport const RemoveSavedQueryDialog = ({\n    open,\n    onClose,\n}: RemoveSavedQueryDialogProps): ReactElement => {\n    const translate = useTranslate();\n    const {\n        resource,\n        filterValues,\n        sort,\n        perPage,\n        displayedFilters,\n    } = useListContext();\n\n    const [savedQueries, setSavedQueries] = useSavedQueries(resource);\n\n    const removeQuery = (): void => {\n        let savedQueryToRemove = {\n            filter: filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        };\n\n        const newSavedQueries = extractValidSavedQueries(savedQueries);\n        const index = newSavedQueries.findIndex(savedFilter =>\n            isEqual(savedFilter.value, savedQueryToRemove)\n        );\n        setSavedQueries([\n            ...newSavedQueries.slice(0, index),\n            ...newSavedQueries.slice(index + 1),\n        ]);\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {translate('ra.saved_queries.remove_dialog_title', {\n                    _: 'Remove saved query?',\n                })}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    {translate('ra.saved_queries.remove_message', {\n                        _:\n                            'Are you sure you want to remove that item from your list of saved queries?',\n                    })}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {translate('ra.action.cancel')}\n                </Button>\n                <Button\n                    onClick={removeQuery}\n                    color=\"primary\"\n                    // eslint-disable-next-line jsx-a11y/no-autofocus\n                    autoFocus\n                >\n                    {translate('ra.action.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,OAAO,MAAM,gBAAgB;AACpC,SAASC,cAAc,EAAEC,YAAY,QAAQ,SAAS;AACtD,SACIC,MAAM,EACNC,MAAM,EACNC,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,WAAW,QACR,eAAe;AAEtB,SAASC,eAAe,EAAEC,wBAAwB,QAAQ,mBAAmB;AAO7E,OAAO,IAAMC,sBAAsB,GAAG,SAAAA,CAACC,EAGT;MAF1BC,IAAI,GAAAD,EAAA,CAAAC,IAAA;IACJC,OAAO,GAAAF,EAAA,CAAAE,OAAA;EAEP,IAAMC,SAAS,GAAGb,YAAY,EAAE;EAC1B,IAAAc,EAAA,GAMFf,cAAc,EAAE;IALhBgB,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,YAAY,GAAAF,EAAA,CAAAE,YAAA;IACZC,IAAI,GAAAH,EAAA,CAAAG,IAAA;IACJC,OAAO,GAAAJ,EAAA,CAAAI,OAAA;IACPC,gBAAgB,GAAAL,EAAA,CAAAK,gBACA;EAEd,IAAAC,EAAA,GAAkCb,eAAe,CAACQ,QAAQ,CAAC;IAA1DM,YAAY,GAAAD,EAAA;IAAEE,eAAe,GAAAF,EAAA,GAA6B;EAEjE,IAAMG,WAAW,GAAG,SAAAA,CAAA;IAChB,IAAIC,kBAAkB,GAAG;MACrBC,MAAM,EAAET,YAAY;MACpBC,IAAI,EAAAA,IAAA;MACJC,OAAO,EAAAA,OAAA;MACPC,gBAAgB,EAAAA;KACnB;IAED,IAAMO,eAAe,GAAGlB,wBAAwB,CAACa,YAAY,CAAC;IAC9D,IAAMM,KAAK,GAAGD,eAAe,CAACE,SAAS,CAAC,UAAAC,WAAW;MAC/C,OAAA/B,OAAO,CAAC+B,WAAW,CAACC,KAAK,EAAEN,kBAAkB,CAAC;IAA9C,CAA8C,CACjD;IACDF,eAAe,CAAAS,aAAA,CAAAA,aAAA,KACRL,eAAe,CAACM,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC,SAC/BD,eAAe,CAACM,KAAK,CAACL,KAAK,GAAG,CAAC,CAAC,QACrC;IACFf,OAAO,EAAE;EACb,CAAC;EAED,OACIf,KAAA,CAAAoC,aAAA,CAAC/B,MAAM;IACHS,IAAI,EAAEA,IAAI;IACVC,OAAO,EAAEA,OAAO;IAAA,mBACA,oBAAoB;IAAA,oBACnB;EAA0B,GAE3Cf,KAAA,CAAAoC,aAAA,CAAC3B,WAAW;IAAC4B,EAAE,EAAC;EAAoB,GAC/BrB,SAAS,CAAC,sCAAsC,EAAE;IAC/CsB,CAAC,EAAE;GACN,CAAC,CACQ,EACdtC,KAAA,CAAAoC,aAAA,CAAC7B,aAAa,QACVP,KAAA,CAAAoC,aAAA,CAAC5B,iBAAiB,QACbQ,SAAS,CAAC,iCAAiC,EAAE;IAC1CsB,CAAC,EACG;GACP,CAAC,CACc,CACR,EAChBtC,KAAA,CAAAoC,aAAA,CAAC9B,aAAa,QACVN,KAAA,CAAAoC,aAAA,CAAChC,MAAM;IAACmC,OAAO,EAAExB;EAAO,GACnBC,SAAS,CAAC,kBAAkB,CAAC,CACzB,EACThB,KAAA,CAAAoC,aAAA,CAAChC,MAAM;IACHmC,OAAO,EAAEb,WAAW;IACpBc,KAAK,EAAC,SAAS;IACf;IACAC,SAAS;EAAA,GAERzB,SAAS,CAAC,mBAAmB,CAAC,CAC1B,CACG,CACX;AAEjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}