{"ast":null,"code":"import { __assign } from '../_virtual/_tslib.js';\nimport * as React from 'react';\nimport { AuthContextConsumer } from '../AuthContext.js';\nimport { doSignOut } from '../utils/reducers.js';\nimport { AuthKitError } from '../errors.js';\nimport { isAuthenticated } from '../utils/utils.js';\n\n/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication status <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n * @function\n * @name withIsAuthenticated\n * @description Inject Authentication status inside the Component's Prop\n * @param Component\n */\nfunction withIsAuthenticated(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (c) {\n      if (c === null) {\n        throw new AuthKitError('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      if (c.authState.auth && isAuthenticated(c.authState)) {\n        return React.createElement(Component, __assign({}, props, {\n          isAuth: true\n        }));\n      } else {\n        c.dispatch(doSignOut());\n        return React.createElement(Component, __assign({}, props, {\n          isAuth: false\n        }));\n      }\n    });\n  };\n}\nexport { withIsAuthenticated as default };","map":{"version":3,"names":["withIsAuthenticated","Component","props","React","createElement","AuthContextConsumer","c","AuthKitError","authState","auth","isAuthenticated","__assign","isAuth","dispatch","doSignOut"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/react-auth-kit/src/higherOrderComponents/withIsAuthenticated.tsx"],"sourcesContent":["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication status <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {doSignOut} from '../utils/reducers';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n * @interface withAuthHeaderProps\n */\ninterface withAuthHeaderProps {\n    isAuth: string\n}\n\n/**\n * @public\n * @function\n * @name withIsAuthenticated\n * @description Inject Authentication status inside the Component's Prop\n * @param Component\n */\nfunction withIsAuthenticated<P extends withAuthHeaderProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (c.authState.auth && isAuthenticated(c.authState)) {\n            return <Component {...props} isAuth={true}/>;\n          } else {\n            c.dispatch(doSignOut());\n            return <Component {...props} isAuth={false}/>;\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withIsAuthenticated;\n"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAkBG;AAeH;;;;;;AAMG;AACH,SAASA,mBAAmBA,CACxBC,SAAiC;EAEnC,OAAO,UAACC,KAAK;IACX,OACEC,KAAA,CAAAC,aAAA,CAACC,mBAAmB,QACjB,UAACC,CAAC;MACD,IAAIA,CAAC,KAAK,IAAI,EAAE;QACd,MAAM,IACNC,YAAY,CAAC,4BAA4B,GACvC,2CAA2C,CAAC;MAC/C;MACD,IAAID,CAAC,CAACE,SAAS,CAACC,IAAI,IAAIC,eAAe,CAACJ,CAAC,CAACE,SAAS,CAAC,EAAE;QACpD,OAAOL,KAAA,CAAAC,aAAA,CAACH,SAAS,EAAKU,QAAA,KAAAT,KAAK;UAAEU,MAAM,EAAE;QAAI,GAAG;MAC7C,OAAM;QACLN,CAAC,CAACO,QAAQ,CAACC,SAAS,EAAE,CAAC;QACvB,OAAOX,KAAA,CAAAC,aAAA,CAACH,SAAS,EAAKU,QAAA,KAAAT,KAAK;UAAEU,MAAM,EAAE;QAAK,GAAG;MAC9C;KACF,CACmB;EAE1B,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}