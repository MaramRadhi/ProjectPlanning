{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItemIcon, ListItemText, MenuItem, useMediaQuery } from '@mui/material';\nimport ExitIcon from '@mui/icons-material/PowerSettingsNew';\nimport clsx from 'clsx';\nimport { useTranslate, useLogout, useAuthState } from 'ra-core';\n/**\n * Logout button component, to be passed to the Admin component\n *\n * Used for the Logout Menu item in the sidebar\n */\nexport var Logout = React.forwardRef(function Logout(props, ref) {\n  var className = props.className,\n    redirectTo = props.redirectTo,\n    icon = props.icon,\n    rest = __rest(props, [\"className\", \"redirectTo\", \"icon\"]);\n  var authenticated = useAuthState().authenticated;\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  var translate = useTranslate();\n  var logout = useLogout();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var handleClick = useCallback(function () {\n    return logout(null, redirectTo, false);\n  }, [redirectTo, logout]);\n  if (!authenticated) return null;\n  return React.createElement(StyledMenuItem, __assign({\n    className: clsx('logout', className),\n    onClick: handleClick,\n    ref: ref,\n    // @ts-ignore\n    component: isXSmall ? 'span' : 'li'\n  }, rest), React.createElement(ListItemIcon, {\n    className: LogoutClasses.icon\n  }, icon ? icon : React.createElement(ExitIcon, {\n    fontSize: \"small\"\n  })), React.createElement(ListItemText, null, translate('ra.auth.logout', {\n    _: 'Logout'\n  })));\n});\nLogout.propTypes = {\n  className: PropTypes.string,\n  redirectTo: PropTypes.string,\n  icon: PropTypes.element\n};\nvar PREFIX = 'RaLogout';\nexport var LogoutClasses = {\n  icon: \"\".concat(PREFIX, \"-icon\")\n};\nvar StyledMenuItem = styled(MenuItem, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(LogoutClasses.icon)] = {}, _b;\n});","map":{"version":3,"names":["React","styled","useCallback","PropTypes","ListItemIcon","ListItemText","MenuItem","useMediaQuery","ExitIcon","clsx","useTranslate","useLogout","useAuthState","Logout","forwardRef","props","ref","className","redirectTo","icon","rest","__rest","authenticated","isXSmall","theme","breakpoints","down","translate","logout","handleClick","createElement","StyledMenuItem","__assign","onClick","component","LogoutClasses","fontSize","_","propTypes","string","element","PREFIX","concat","name","overridesResolver","styles","root","_a","_b"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-ui-materialui/src/auth/Logout.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled, Theme } from '@mui/material/styles';\nimport { useCallback, FunctionComponent, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ListItemIcon,\n    ListItemText,\n    MenuItem,\n    useMediaQuery,\n} from '@mui/material';\nimport { MenuItemProps } from '@mui/material/MenuItem';\n\nimport ExitIcon from '@mui/icons-material/PowerSettingsNew';\nimport clsx from 'clsx';\nimport { useTranslate, useLogout, useAuthState } from 'ra-core';\n\n/**\n * Logout button component, to be passed to the Admin component\n *\n * Used for the Logout Menu item in the sidebar\n */\nexport const Logout: FunctionComponent<\n    LogoutProps & MenuItemProps<'li'>\n> = React.forwardRef(function Logout(props, ref) {\n    const { className, redirectTo, icon, ...rest } = props;\n\n    const { authenticated } = useAuthState();\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n    const translate = useTranslate();\n    const logout = useLogout();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleClick = useCallback(() => logout(null, redirectTo, false), [\n        redirectTo,\n        logout,\n    ]);\n\n    if (!authenticated) return null;\n\n    return (\n        <StyledMenuItem\n            className={clsx('logout', className)}\n            onClick={handleClick}\n            ref={ref}\n            // @ts-ignore\n            component={isXSmall ? 'span' : 'li'}\n            {...rest}\n        >\n            <ListItemIcon className={LogoutClasses.icon}>\n                {icon ? icon : <ExitIcon fontSize=\"small\" />}\n            </ListItemIcon>\n            <ListItemText>\n                {translate('ra.auth.logout', { _: 'Logout' })}\n            </ListItemText>\n        </StyledMenuItem>\n    );\n});\n\nLogout.propTypes = {\n    className: PropTypes.string,\n    redirectTo: PropTypes.string,\n    icon: PropTypes.element,\n};\n\nconst PREFIX = 'RaLogout';\n\nexport const LogoutClasses = {\n    icon: `${PREFIX}-icon`,\n};\n\nconst StyledMenuItem = styled(MenuItem, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${LogoutClasses.icon}`]: {},\n}));\n\nexport interface LogoutProps {\n    className?: string;\n    redirectTo?: string;\n    icon?: ReactElement;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}