{"ast":null,"code":"import * as React from 'react';\nimport { useTheme as useSystemTheme } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overriableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overriableVariants && childVariant) {\n        if (overriableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      }\n      // @ts-ignore internal logic\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider(_ref) {\n  let {\n    children,\n    variant\n  } = _ref;\n  var _theme$colorInversion;\n  const theme = useSystemTheme(defaultTheme);\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ?\n    // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;","map":{"version":3,"names":["React","useTheme","useSystemTheme","defaultTheme","jsx","_jsx","ColorInversion","createContext","undefined","useColorInversion","childVariant","overriableVariants","useContext","getColor","instanceColorProp","defaultColorProp","includes","ColorInversionProvider","_ref","children","variant","_theme$colorInversion","theme","Provider","value","colorInversionConfig"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/@mui/joy/styles/ColorInversion.js"],"sourcesContent":["import * as React from 'react';\nimport { useTheme as useSystemTheme } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overriableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overriableVariants && childVariant) {\n        if (overriableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      }\n      // @ts-ignore internal logic\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider({\n  children,\n  variant\n}) {\n  var _theme$colorInversion;\n  const theme = useSystemTheme(defaultTheme);\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ?\n    // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,IAAIC,cAAc,QAAQ,aAAa;AACxD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,cAAc,GAAG,aAAaN,KAAK,CAACO,aAAa,CAACC,SAAS,CAAC;AAClE,OAAO,MAAMC,iBAAiB,GAAGC,YAAY,IAAI;EAC/C,MAAMC,kBAAkB,GAAGX,KAAK,CAACY,UAAU,CAACN,cAAc,CAAC;EAC3D,OAAO;IACL;AACJ;AACA;AACA;AACA;IACIO,QAAQ,EAAEA,CAACC,iBAAiB,EAAEC,gBAAgB,KAAK;MACjD,IAAIJ,kBAAkB,IAAID,YAAY,EAAE;QACtC,IAAIC,kBAAkB,CAACK,QAAQ,CAACN,YAAY,CAAC,EAAE;UAC7C;UACA,OAAOI,iBAAiB,IAAI,SAAS;QACvC;MACF;MACA;MACA,OAAOA,iBAAiB,IAAIC,gBAAgB;IAC9C;EACF,CAAC;AACH,CAAC;AACD,OAAO,SAASE,sBAAsBA,CAAAC,IAAA,EAGnC;EAAA,IAHoC;IACrCC,QAAQ;IACRC;EACF,CAAC,GAAAF,IAAA;EACC,IAAIG,qBAAqB;EACzB,MAAMC,KAAK,GAAGpB,cAAc,CAACC,YAAY,CAAC;EAC1C,OAAO,aAAaE,IAAI,CAACC,cAAc,CAACiB,QAAQ,EAAE;IAChDC,KAAK,EAAEJ,OAAO;IACd;IACA,CAAC,CAACC,qBAAqB,GAAGC,KAAK,CAACG,oBAAoB,KAAK,IAAI,GAAGJ,qBAAqB,GAAGlB,YAAY,CAACsB,oBAAoB,EAAEL,OAAO,CAAC,GAAGZ,SAAS;IAC/IW,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AACA,eAAeb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}