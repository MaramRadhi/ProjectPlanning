{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { createElement } from 'react';\nvar InferredElement = /** @class */function () {\n  function InferredElement(type, props, children) {\n    this.type = type;\n    this.props = props;\n    this.children = children;\n    this.type = type;\n    this.props = props;\n    this.children = children;\n  }\n  InferredElement.prototype.getElement = function (props) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (!this.type || !this.type.component) {\n      return;\n    }\n    return this.children ? createElement(this.type.component, __assign(__assign({}, this.props), props), this.children.length > 0 ? this.children.map(function (child, index) {\n      return child.getElement({\n        key: index\n      });\n    }) : this.children.getElement()) : createElement(this.type.component, __assign(__assign({}, this.props), props));\n  };\n  InferredElement.prototype.getProps = function () {\n    return this.props;\n  };\n  InferredElement.prototype.isDefined = function () {\n    return !!this.type;\n  };\n  InferredElement.prototype.getRepresentation = function () {\n    if (!this.type) {\n      return;\n    }\n    if (this.type.representation) {\n      return this.type.representation(this.props, this.children);\n    }\n    if (this.type.component) {\n      return \"<\".concat(this.type.component.displayName || this.type.component.name, \" source=\\\"\").concat(this.props.source, \"\\\" />\");\n    }\n  };\n  return InferredElement;\n}();\nexport default InferredElement;","map":{"version":3,"names":["createElement","InferredElement","type","props","children","prototype","getElement","component","__assign","length","map","child","index","key","getProps","isDefined","getRepresentation","representation","concat","displayName","name","source"],"sources":["/Users/imrun10/Documents/GitHub/GradeCourseApp/client/node_modules/ra-core/src/inference/InferredElement.ts"],"sourcesContent":["import { createElement } from 'react';\nimport { InferredType } from './types';\n\nclass InferredElement {\n    constructor(\n        private type?: InferredType,\n        private props?: any,\n        private children?: any\n    ) {\n        this.type = type;\n        this.props = props;\n        this.children = children;\n    }\n\n    getElement(props = {}) {\n        if (!this.type || !this.type.component) {\n            return;\n        }\n        return this.children\n            ? createElement(\n                  this.type.component,\n                  { ...this.props, ...props },\n                  this.children.length > 0\n                      ? this.children.map((child, index) =>\n                            child.getElement({ key: index })\n                        )\n                      : this.children.getElement()\n              )\n            : createElement(this.type.component, { ...this.props, ...props });\n    }\n\n    getProps() {\n        return this.props;\n    }\n\n    isDefined() {\n        return !!this.type;\n    }\n\n    getRepresentation() {\n        if (!this.type) {\n            return;\n        }\n        if (this.type.representation) {\n            return this.type.representation(this.props, this.children);\n        }\n        if (this.type.component) {\n            return `<${\n                this.type.component.displayName || this.type.component.name\n            } source=\"${this.props.source}\" />`;\n        }\n    }\n}\n\nexport default InferredElement;\n"],"mappings":";;;;;;;;;;AAAA,SAASA,aAAa,QAAQ,OAAO;AAGrC,IAAAC,eAAA;EACI,SAAAA,gBACYC,IAAmB,EACnBC,KAAW,EACXC,QAAc;IAFd,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,QAAQ,GAARA,QAAQ;IAEhB,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EAEAH,eAAA,CAAAI,SAAA,CAAAC,UAAU,GAAV,UAAWH,KAAU;IAAV,IAAAA,KAAA;MAAAA,KAAA,KAAU;IAAA;IACjB,IAAI,CAAC,IAAI,CAACD,IAAI,IAAI,CAAC,IAAI,CAACA,IAAI,CAACK,SAAS,EAAE;MACpC;;IAEJ,OAAO,IAAI,CAACH,QAAQ,GACdJ,aAAa,CACT,IAAI,CAACE,IAAI,CAACK,SAAS,EAAAC,QAAA,CAAAA,QAAA,KACd,IAAI,CAACL,KAAK,GAAKA,KAAK,GACzB,IAAI,CAACC,QAAQ,CAACK,MAAM,GAAG,CAAC,GAClB,IAAI,CAACL,QAAQ,CAACM,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;MAC3B,OAAAD,KAAK,CAACL,UAAU,CAAC;QAAEO,GAAG,EAAED;MAAK,CAAE,CAAC;IAAhC,CAAgC,CACnC,GACD,IAAI,CAACR,QAAQ,CAACE,UAAU,EAAE,CACnC,GACDN,aAAa,CAAC,IAAI,CAACE,IAAI,CAACK,SAAS,EAAAC,QAAA,CAAAA,QAAA,KAAO,IAAI,CAACL,KAAK,GAAKA,KAAK,EAAG;EACzE,CAAC;EAEDF,eAAA,CAAAI,SAAA,CAAAS,QAAQ,GAAR;IACI,OAAO,IAAI,CAACX,KAAK;EACrB,CAAC;EAEDF,eAAA,CAAAI,SAAA,CAAAU,SAAS,GAAT;IACI,OAAO,CAAC,CAAC,IAAI,CAACb,IAAI;EACtB,CAAC;EAEDD,eAAA,CAAAI,SAAA,CAAAW,iBAAiB,GAAjB;IACI,IAAI,CAAC,IAAI,CAACd,IAAI,EAAE;MACZ;;IAEJ,IAAI,IAAI,CAACA,IAAI,CAACe,cAAc,EAAE;MAC1B,OAAO,IAAI,CAACf,IAAI,CAACe,cAAc,CAAC,IAAI,CAACd,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;;IAE9D,IAAI,IAAI,CAACF,IAAI,CAACK,SAAS,EAAE;MACrB,OAAO,IAAAW,MAAA,CACH,IAAI,CAAChB,IAAI,CAACK,SAAS,CAACY,WAAW,IAAI,IAAI,CAACjB,IAAI,CAACK,SAAS,CAACa,IAAI,gBAAAF,MAAA,CACnD,IAAI,CAACf,KAAK,CAACkB,MAAM,UAAM;;EAE3C,CAAC;EACL,OAAApB,eAAC;AAAD,CAAC,EAjDD;AAmDA,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}